
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND ARROWOPT AS ASYNC AWAIT BOOL BREAK CHAR COLON COMA COMILLA CONST CONTINUE DAMPERSAND DIFERENTE DIVASIGN DIVIDE DOLAR DOSDOBLEPUNTOS DYN ELSE ENDCHAR ENUM ERR EXCLAM EXPECT FALSE FINAL FLOAT32 FLOAT64 FLOATTYPE FN FOR FORMAT FROM HASHMAP ID IDCHAR IDENTICO IDSTRING IF IGUAL IMPL IN INPUT INT128 INT16 INT32 INT64 INT8 INTERRO INTTYPE IO LCOR LET LINKEDLIST LLLAVE LOOP LPAREN MAINFN MATCH MAYORQUE MENORQUE MINUS MOVE MULTIASIGN MUT NEW NFLOATTYPE NINTTYPE OK OR PARSE PLUS POINT POINTERSIZE POP_BACK PORCENTAJE PRINTLN PRIV PUB PUSH PUSH_FRONT PUSH_STR RCOR READLINE REF RESTAASIGN RETURN RLLAVE RPAREN SELF SIZEOF STATIC STDIN STR STRING STRUCT SUMAASIGN SUPER TIMES TRUE TYPE TYPEOF UINT128 UINT16 UINT32 UINT64 UINT8 UNSAFE UNWRAPOR USE VEC WHERE WHILEcuerpo : metodo\n  | funcion\n  cuerpof : metodo\n  | metodo cuerpof\n  metodo : asignacion\n  | impresion\n  | loop\n  | ifblock\n  | elseifblock\n  | elseblock\n  | vectorpush\n  | llpushfront\n  | llpopback\n  | sumaint\n  | entrada\n  | while\n  | reasignacion\n  | pushString\n  | casting\n  valor : valornumerico\n  | TRUE\n  | FALSE\n  | ID\n  | IDCHAR\n  | IDSTRING\n  | expresion\n  | conectores\n  | comparacion\n  \n    estructuras : linkedlist\n    | hashmap\n    comparacion : ID signocompar ID\n  | IDCHAR signocompar IDCHAR\n  | IDSTRING signocompar IDSTRINGasignacion : LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHARwhile : WHILE ifparams LLLAVE cuerpof RLLAVEcomparacion : INTTYPE signocompar INTTYPE\n  | NINTTYPE signocompar NINTTYPE\n  | FLOATTYPE signocompar FLOATTYPE\n  \n  asignacion : CONST ID COLON intsize IGUAL INTTYPE ENDCHAR\n  | CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR\n  hashmap : HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPARENcomparacion : boolean signocompar booleanexpresion :  valornumerico signo valornumerico\n  datatype : intsize\n  | uintsize\n  | floatsize\n  | strsize\n  | STRING\n  | BOOL\n  valornumerico : NINTTYPE\n  | INTTYPE\n  | FLOATTYPE\n  | NFLOATTYPE\n  asignacion : CONST ID COLON uintsize IGUAL INTTYPE ENDCHARasignacion : CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHARsignocompar : MAYORQUE \n  | MENORQUE\n  | DIFERENTE\n  | IDENTICO\n  \n  intsize : INT8\n  | INT16\n  | INT32\n  | INT64\n  | INT128\n  signo : PLUS\n  | TIMES\n  | MINUS\n  | PORCENTAJE\n  | DIVIDE\n  asignacion : CONST ID COLON strsize IGUAL IDSTRING ENDCHARlinkedlist : LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHARconectores : boolean signoconect boolean \n  | EXCLAM boolean\n  | ID signoconect IDasignacion : CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR\n  floatsize : FLOAT32\n  | FLOAT64\n  entrada : IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR\n  | IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR\n  signoconect : DAMPERSAND\n  | OR\n  asignacion : CONST ID COLON STRING IGUAL IDSTRING ENDCHAR\n  uintsize : UINT8\n  | UINT16\n  | UINT32\n  | UINT64\n  | UINT128asignacion : CONST ID COLON BOOL IGUAL boolean ENDCHARloop : LOOP LLLAVE metodo RLLAVE\n  strsize : AMPERSAND COMILLA STATIC STR\n  | AMPERSAND STR\n  asignacion : CONST ID COLON CHAR IGUAL IDCHAR ENDCHARparams : ID COLON datatype \n  | ID COLON datatype COMA params\n  boolean : TRUE\n  | FALSE\n  impresion : PRINTLN LPAREN IDSTRING RPAREN ENDCHAR\n  vectorpush : ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR\n  \n  ifparams : ifcondicion\n  | boolean\n  | ID\n  \n  elseblock : ifblock ELSE LLLAVE cuerpof RLLAVE\n  | elseifblock ELSE LLLAVE cuerpof RLLAVE\n  \n  elseifblock : ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE\n  | ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE\n  asignacion : LET MUT ID IGUAL valor ENDCHAR\n  | LET MUT ID IGUAL estructuras ENDCHAR\n  ifblock : IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE\n  | IF ifparams LLLAVE cuerpof RLLAVE\n  \n  ifcondicion : comparacion\n  | comparacion signoconect ifcondicion\n  | LPAREN comparacion RPAREN\n  | LPAREN comparacion RPAREN signoconect ifcondicion\n  | LPAREN ifcondicion RPAREN\n  asignacion : LET ID IGUAL valor ENDCHAR\n  reasignacion : ID IGUAL valor ENDCHAR\n  \n  funcion : FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE\n  \n  funcion : FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR  RLLAVE\n  asignacion : LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHARfuncion : FN ID LPAREN params RPAREN LLLAVE cuerpof RLLAVE\n  pushString : ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR\n  | ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR\n  \n    casting : LET ID IGUAL ID AS uintsize\n    | LET ID IGUAL ID AS intsize\n  \n    casting : LET ID IGUAL ID AS CHAR\n  asignacion : LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR\n  llpushfront : ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR\n  \n  llpopback : ID POINT POP_BACK LPAREN RPAREN ENDCHAR\n  sumaint : ID signo ID\n   sumaint : LET ID IGUAL ID signo ID ENDCHAR\n  '
    
_lr_action_items = {'FN':([0,],[19,]),'LET':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,43,61,62,68,93,109,116,125,139,140,141,142,143,144,145,146,147,148,153,169,170,172,196,206,207,209,211,222,225,229,230,235,236,237,251,252,256,257,258,259,264,265,266,267,268,269,271,272,273,275,279,287,297,299,304,308,312,317,],[21,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,21,21,21,-129,21,21,21,-116,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-89,21,-102,-103,-115,-97,21,-109,-35,21,-128,-106,-107,-123,-124,-125,21,-105,-98,-127,-121,-122,-130,-39,-40,-54,-55,-70,-82,-88,-92,-108,21,-104,-34,-126,-119,-75,-78,-79,]),'CONST':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,43,61,62,68,93,109,116,125,139,140,141,142,143,144,145,146,147,148,153,169,170,172,196,206,207,209,211,222,225,229,230,235,236,237,251,252,256,257,258,259,264,265,266,267,268,269,271,272,273,275,279,287,297,299,304,308,312,317,],[22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,22,22,22,-129,22,22,22,-116,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-89,22,-102,-103,-115,-97,22,-109,-35,22,-128,-106,-107,-123,-124,-125,22,-105,-98,-127,-121,-122,-130,-39,-40,-54,-55,-70,-82,-88,-92,-108,22,-104,-34,-126,-119,-75,-78,-79,]),'PRINTLN':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,43,61,62,68,93,109,116,125,139,140,141,142,143,144,145,146,147,148,153,169,170,172,196,206,207,209,211,222,225,229,230,235,236,237,251,252,256,257,258,259,264,265,266,267,268,269,271,272,273,275,279,287,297,299,304,308,312,317,],[23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,23,23,23,-129,23,23,23,-116,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-89,23,-102,-103,-115,-97,23,-109,-35,23,-128,-106,-107,-123,-124,-125,23,-105,-98,-127,-121,-122,-130,-39,-40,-54,-55,-70,-82,-88,-92,-108,23,-104,-34,-126,-119,-75,-78,-79,]),'LOOP':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,43,61,62,68,93,109,116,125,139,140,141,142,143,144,145,146,147,148,153,169,170,172,196,206,207,209,211,222,225,229,230,235,236,237,251,252,256,257,258,259,264,265,266,267,268,269,271,272,273,275,279,287,297,299,304,308,312,317,],[24,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,24,24,24,-129,24,24,24,-116,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-89,24,-102,-103,-115,-97,24,-109,-35,24,-128,-106,-107,-123,-124,-125,24,-105,-98,-127,-121,-122,-130,-39,-40,-54,-55,-70,-82,-88,-92,-108,24,-104,-34,-126,-119,-75,-78,-79,]),'IF':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,28,43,61,62,68,93,109,116,125,139,140,141,142,143,144,145,146,147,148,153,169,170,172,196,206,207,209,211,222,225,229,230,235,236,237,251,252,256,257,258,259,264,265,266,267,268,269,271,272,273,275,279,287,297,299,304,308,312,317,],[25,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,60,25,25,25,-129,25,25,25,-116,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-89,25,-102,-103,-115,-97,25,-109,-35,25,-128,-106,-107,-123,-124,-125,25,-105,-98,-127,-121,-122,-130,-39,-40,-54,-55,-70,-82,-88,-92,-108,25,-104,-34,-126,-119,-75,-78,-79,]),'ID':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,25,27,32,33,34,35,36,37,38,39,43,44,59,60,61,62,63,68,86,93,95,96,97,98,99,100,101,102,109,113,116,124,125,129,139,140,141,142,143,144,145,146,147,148,153,169,170,171,172,194,196,206,207,208,209,211,222,225,229,230,235,236,237,251,252,253,256,257,258,259,264,265,266,267,268,269,271,272,273,275,279,287,288,296,297,299,301,304,308,312,317,],[20,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,30,40,41,48,48,68,69,-65,-66,-67,-68,-69,85,20,48,111,48,20,20,118,-129,130,20,-56,-57,-58,-59,159,111,-80,-81,20,48,20,180,-116,69,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-89,20,-102,-4,-103,234,-115,-97,20,111,-109,-35,20,-128,-106,-107,-123,-124,-125,20,-105,118,-98,-127,-121,-122,-130,-39,-40,-54,-55,-70,-82,-88,-92,-108,20,-104,295,48,-34,-126,306,-119,-75,-78,-79,]),'IO':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,43,61,62,68,93,109,116,125,139,140,141,142,143,144,145,146,147,148,153,169,170,172,196,206,207,209,211,222,225,229,230,235,236,237,251,252,256,257,258,259,264,265,266,267,268,269,271,272,273,275,279,287,297,299,304,308,312,317,],[26,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,26,26,26,-129,26,26,26,-116,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-89,26,-102,-103,-115,-97,26,-109,-35,26,-128,-106,-107,-123,-124,-125,26,-105,-98,-127,-121,-122,-130,-39,-40,-54,-55,-70,-82,-88,-92,-108,26,-104,-34,-126,-119,-75,-78,-79,]),'WHILE':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,43,61,62,68,93,109,116,125,139,140,141,142,143,144,145,146,147,148,153,169,170,172,196,206,207,209,211,222,225,229,230,235,236,237,251,252,256,257,258,259,264,265,266,267,268,269,271,272,273,275,279,287,297,299,304,308,312,317,],[27,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,27,27,27,-129,27,27,27,-116,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-89,27,-102,-103,-115,-97,27,-109,-35,27,-128,-106,-107,-123,-124,-125,27,-105,-98,-127,-121,-122,-130,-39,-40,-54,-55,-70,-82,-88,-92,-108,27,-104,-34,-126,-119,-75,-78,-79,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,68,125,139,140,141,142,143,144,145,146,147,148,153,170,172,196,206,209,211,225,229,230,235,236,237,252,256,257,258,259,264,265,266,267,268,269,271,272,273,275,280,287,297,299,302,304,308,310,312,317,],[0,-1,-2,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-129,-116,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-89,-102,-103,-115,-97,-109,-35,-128,-106,-107,-123,-124,-125,-105,-98,-127,-121,-122,-130,-39,-40,-54,-55,-70,-82,-88,-92,-108,-120,-104,-34,-126,-117,-119,-75,-118,-78,-79,]),'RLLAVE':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,68,89,115,116,117,125,139,140,141,142,143,144,145,146,147,148,153,157,167,170,171,172,196,206,209,211,213,225,229,230,235,236,237,248,252,255,256,257,258,259,264,265,266,267,268,269,271,272,273,275,277,287,295,297,299,304,307,308,312,317,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-129,153,170,-3,172,-116,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-89,209,211,-102,-4,-103,-115,-97,-109,-35,252,-128,-106,-107,-123,-124,-125,275,-105,280,-98,-127,-121,-122,-130,-39,-40,-54,-55,-70,-82,-88,-92,-108,287,-104,302,-34,-126,-119,310,-75,-78,-79,]),'RETURN':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,68,116,125,139,140,141,142,143,144,145,146,147,148,153,170,171,172,196,206,209,211,225,229,230,235,236,237,252,256,257,258,259,264,265,266,267,268,269,271,272,273,275,287,288,297,299,304,308,312,317,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-129,-3,-116,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-89,-102,-4,-103,-115,-97,-109,-35,-128,-106,-107,-123,-124,-125,-105,-98,-127,-121,-122,-130,-39,-40,-54,-55,-70,-82,-88,-92,-108,-104,296,-34,-126,-119,-75,-78,-79,]),'ELSE':([7,8,209,252,275,287,],[28,29,-109,-105,-108,-104,]),'POINT':([20,210,309,],[31,250,311,]),'IGUAL':([20,40,85,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,205,274,],[33,86,129,197,198,199,200,201,202,203,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-76,-77,-91,-90,]),'PLUS':([20,71,79,80,81,82,130,],[34,34,-50,-51,-52,-53,34,]),'TIMES':([20,71,79,80,81,82,130,],[35,35,-50,-51,-52,-53,35,]),'MINUS':([20,71,79,80,81,82,130,],[36,36,-50,-51,-52,-53,36,]),'PORCENTAJE':([20,71,79,80,81,82,130,],[37,37,-50,-51,-52,-53,37,]),'DIVIDE':([20,71,79,80,81,82,130,],[38,38,-50,-51,-52,-53,38,]),'MUT':([21,294,],[39,301,]),'LPAREN':([23,25,27,30,44,59,60,64,65,66,67,100,101,102,108,113,208,260,261,262,263,276,285,296,313,],[42,44,59,63,59,59,113,120,121,122,123,59,-80,-81,166,59,59,281,282,283,284,286,293,59,314,]),'LLLAVE':([24,28,29,45,46,47,48,49,50,51,58,114,139,140,141,142,143,144,145,146,147,148,149,150,154,155,156,158,159,160,161,162,163,164,165,174,205,212,215,216,217,218,219,220,249,254,274,],[43,61,62,93,-99,-100,-101,-110,-95,-96,109,169,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-76,-77,207,-112,-114,-42,-31,-111,-32,-33,-36,-37,-38,222,-91,251,-44,-45,-46,-47,-48,-49,-113,279,-90,]),'TRUE':([25,27,33,44,59,60,84,86,94,95,96,97,98,100,101,102,113,127,129,202,208,296,],[50,50,72,50,50,50,50,72,50,-56,-57,-58,-59,50,-80,-81,50,50,72,50,50,50,]),'FALSE':([25,27,33,44,59,60,84,86,94,95,96,97,98,100,101,102,113,127,129,202,208,296,],[51,51,73,51,51,51,51,73,51,-56,-57,-58,-59,51,-80,-81,51,51,73,51,51,51,]),'IDCHAR':([25,27,33,44,59,60,86,95,96,97,98,100,101,102,103,113,123,129,203,208,296,],[52,52,74,52,52,52,74,-56,-57,-58,-59,52,-80,-81,161,52,179,74,246,52,52,]),'IDSTRING':([25,27,33,42,44,59,60,86,95,96,97,98,100,101,102,104,113,123,129,200,201,208,282,293,296,314,],[53,53,75,88,53,53,53,75,-56,-57,-58,-59,53,-80,-81,162,53,178,75,242,244,53,290,300,53,315,]),'INTTYPE':([25,27,33,34,35,36,37,38,44,59,60,86,95,96,97,98,100,101,102,105,113,120,121,126,129,197,198,208,296,],[54,54,80,-65,-66,-67,-68,-69,54,54,54,80,-56,-57,-58,-59,54,-80,-81,163,54,175,176,183,80,238,240,54,54,]),'NINTTYPE':([25,27,33,34,35,36,37,38,44,59,60,86,95,96,97,98,100,101,102,106,113,126,129,197,208,296,],[55,55,79,-65,-66,-67,-68,-69,55,55,55,79,-56,-57,-58,-59,55,-80,-81,164,55,182,79,239,55,55,]),'FLOATTYPE':([25,27,33,34,35,36,37,38,44,59,60,86,95,96,97,98,100,101,102,107,113,126,129,199,208,296,],[56,56,81,-65,-66,-67,-68,-69,56,56,56,81,-56,-57,-58,-59,56,-80,-81,165,56,184,81,241,56,56,]),'DOSDOBLEPUNTOS':([26,186,189,190,193,243,],[57,228,231,232,233,270,]),'PUSH':([31,],[64,]),'PUSH_FRONT':([31,],[65,]),'POP_BACK':([31,],[66,]),'PUSH_STR':([31,],[67,]),'NFLOATTYPE':([33,34,35,36,37,38,86,126,129,],[82,-65,-66,-67,-68,-69,82,82,82,]),'EXCLAM':([33,86,129,],[84,84,84,]),'COLON':([41,118,],[87,173,]),'ENDCHAR':([46,47,48,49,50,51,69,70,71,72,73,74,75,76,77,78,79,80,81,82,128,130,131,152,155,156,158,159,160,161,162,163,164,165,177,180,181,182,183,184,185,187,188,191,192,223,224,226,227,234,238,239,240,241,242,244,245,246,249,289,291,292,298,299,303,305,309,316,],[-99,-100,-101,-110,-95,-96,-23,125,-20,-21,-22,-24,-25,-26,-27,-28,-50,-51,-52,-53,-73,-23,196,206,-112,-114,-42,-31,-111,-32,-33,-36,-37,-38,225,-74,-43,-50,-51,-52,-72,229,230,-29,-30,256,257,258,259,264,265,266,267,268,269,271,272,273,-113,297,299,-41,304,-71,307,308,312,317,]),'RPAREN':([47,48,49,50,51,88,90,91,92,110,119,122,139,140,141,142,143,144,145,146,147,148,149,150,155,156,158,159,160,161,162,163,164,165,166,168,175,176,178,179,205,214,215,216,217,218,219,220,249,274,278,281,283,284,290,300,306,315,],[-100,-101,-110,-95,-96,152,154,155,156,156,174,177,-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-76,-77,-112,-114,-42,-31,-111,-32,-33,-36,-37,-38,210,212,223,224,226,227,-91,-93,-44,-45,-46,-47,-48,-49,-113,-90,-94,289,291,292,298,305,309,316,]),'MAYORQUE':([47,48,50,51,52,53,54,55,56,69,72,73,74,75,79,80,81,83,111,112,130,],[95,95,-95,-96,95,95,95,95,95,95,-95,-96,95,95,95,95,95,95,95,95,95,]),'MENORQUE':([47,48,50,51,52,53,54,55,56,69,72,73,74,75,79,80,81,83,111,112,130,],[96,96,-95,-96,96,96,96,96,96,96,-95,-96,96,96,96,96,96,96,96,96,96,]),'DIFERENTE':([47,48,50,51,52,53,54,55,56,69,72,73,74,75,79,80,81,83,111,112,130,],[97,97,-95,-96,97,97,97,97,97,97,-95,-96,97,97,97,97,97,97,97,97,97,]),'IDENTICO':([47,48,50,51,52,53,54,55,56,69,72,73,74,75,79,80,81,83,111,112,130,],[98,98,-95,-96,98,98,98,98,98,98,-95,-96,98,98,98,98,98,98,98,98,98,]),'DAMPERSAND':([49,50,51,69,72,73,83,91,130,155,158,159,161,162,163,164,165,],[101,-95,-96,101,-95,-96,101,101,101,101,-42,-31,-32,-33,-36,-37,-38,]),'OR':([49,50,51,69,72,73,83,91,130,155,158,159,161,162,163,164,165,],[102,-95,-96,102,-95,-96,102,102,102,102,-42,-31,-32,-33,-36,-37,-38,]),'STDIN':([57,],[108,]),'STRING':([87,129,173,201,221,],[136,189,219,243,219,]),'BOOL':([87,173,221,],[137,220,220,]),'CHAR':([87,195,],[138,237,]),'INT8':([87,173,195,221,],[139,139,139,139,]),'INT16':([87,173,195,221,],[140,140,140,140,]),'INT32':([87,173,195,221,],[141,141,141,141,]),'INT64':([87,173,195,221,],[142,142,142,142,]),'INT128':([87,173,195,221,],[143,143,143,143,]),'UINT8':([87,173,195,221,],[144,144,144,144,]),'UINT16':([87,173,195,221,],[145,145,145,145,]),'UINT32':([87,173,195,221,],[146,146,146,146,]),'UINT64':([87,173,195,221,],[147,147,147,147,]),'UINT128':([87,173,195,221,],[148,148,148,148,]),'FLOAT32':([87,173,221,],[149,149,149,]),'FLOAT64':([87,173,221,],[150,150,150,]),'AMPERSAND':([87,173,221,286,],[151,151,151,294,]),'VEC':([129,],[186,]),'LINKEDLIST':([129,],[190,]),'HASHMAP':([129,],[193,]),'AS':([130,],[195,]),'COMA':([139,140,141,142,143,144,145,146,147,148,149,150,205,214,215,216,217,218,219,220,274,],[-60,-61,-62,-63,-64,-83,-84,-85,-86,-87,-76,-77,-91,253,-44,-45,-46,-47,-48,-49,-90,]),'COMILLA':([151,],[204,]),'STR':([151,247,],[205,274,]),'ARROWOPT':([174,],[221,]),'STATIC':([204,],[247,]),'NEW':([228,232,233,],[260,262,263,]),'FROM':([231,270,],[261,285,]),'READLINE':([250,],[276,]),'EXPECT':([311,],[313,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,],[1,]),'metodo':([0,43,61,62,93,109,116,169,207,222,251,279,],[2,89,116,116,116,116,116,116,116,116,116,116,]),'funcion':([0,],[3,]),'asignacion':([0,43,61,62,93,109,116,169,207,222,251,279,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'impresion':([0,43,61,62,93,109,116,169,207,222,251,279,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'loop':([0,43,61,62,93,109,116,169,207,222,251,279,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'ifblock':([0,43,61,62,93,109,116,169,207,222,251,279,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'elseifblock':([0,43,61,62,93,109,116,169,207,222,251,279,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'elseblock':([0,43,61,62,93,109,116,169,207,222,251,279,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'vectorpush':([0,43,61,62,93,109,116,169,207,222,251,279,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'llpushfront':([0,43,61,62,93,109,116,169,207,222,251,279,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'llpopback':([0,43,61,62,93,109,116,169,207,222,251,279,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'sumaint':([0,43,61,62,93,109,116,169,207,222,251,279,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'entrada':([0,43,61,62,93,109,116,169,207,222,251,279,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'while':([0,43,61,62,93,109,116,169,207,222,251,279,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'reasignacion':([0,43,61,62,93,109,116,169,207,222,251,279,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'pushString':([0,43,61,62,93,109,116,169,207,222,251,279,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'casting':([0,43,61,62,93,109,116,169,207,222,251,279,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'signo':([20,71,130,],[32,126,194,]),'ifparams':([25,27,44,60,113,296,],[45,58,90,114,168,303,]),'ifcondicion':([25,27,44,59,60,100,113,208,296,],[46,46,92,110,46,160,92,249,46,]),'boolean':([25,27,33,44,59,60,84,86,94,100,113,127,129,202,208,296,],[47,47,83,47,112,47,128,83,158,112,47,185,83,245,112,47,]),'comparacion':([25,27,33,44,59,60,86,100,113,129,208,296,],[49,49,78,91,91,49,78,49,91,78,49,49,]),'valor':([33,86,129,],[70,131,187,]),'valornumerico':([33,86,126,129,],[71,71,181,71,]),'expresion':([33,86,129,],[76,76,76,]),'conectores':([33,86,129,],[77,77,77,]),'signocompar':([47,48,52,53,54,55,56,69,74,75,79,80,81,83,111,112,130,],[94,99,103,104,105,106,107,99,103,104,106,105,107,94,99,94,99,]),'signoconect':([49,69,83,91,130,155,],[100,124,127,100,124,208,]),'cuerpof':([61,62,93,109,116,169,207,222,251,279,],[115,117,157,167,171,213,248,255,277,288,]),'params':([63,253,],[119,278,]),'intsize':([87,173,195,221,],[132,215,236,215,]),'uintsize':([87,173,195,221,],[133,216,235,216,]),'floatsize':([87,173,221,],[134,217,217,]),'strsize':([87,173,221,],[135,218,218,]),'estructuras':([129,],[188,]),'linkedlist':([129,],[191,]),'hashmap':([129,],[192,]),'datatype':([173,221,],[214,254,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> metodo','cuerpo',1,'p_cuerpo','sintaxisAB.py',3),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintaxisAB.py',4),
  ('cuerpof -> metodo','cuerpof',1,'p_cuerpof','sintaxisJJ.py',6),
  ('cuerpof -> metodo cuerpof','cuerpof',2,'p_cuerpof','sintaxisJJ.py',7),
  ('metodo -> asignacion','metodo',1,'p_metodo','sintaxisAB.py',7),
  ('metodo -> impresion','metodo',1,'p_metodo','sintaxisAB.py',8),
  ('metodo -> loop','metodo',1,'p_metodo','sintaxisAB.py',9),
  ('metodo -> ifblock','metodo',1,'p_metodo','sintaxisAB.py',10),
  ('metodo -> elseifblock','metodo',1,'p_metodo','sintaxisAB.py',11),
  ('metodo -> elseblock','metodo',1,'p_metodo','sintaxisAB.py',12),
  ('metodo -> vectorpush','metodo',1,'p_metodo','sintaxisAB.py',13),
  ('metodo -> llpushfront','metodo',1,'p_metodo','sintaxisAB.py',14),
  ('metodo -> llpopback','metodo',1,'p_metodo','sintaxisAB.py',15),
  ('metodo -> sumaint','metodo',1,'p_metodo','sintaxisAB.py',16),
  ('metodo -> entrada','metodo',1,'p_metodo','sintaxisAB.py',17),
  ('metodo -> while','metodo',1,'p_metodo','sintaxisAB.py',18),
  ('metodo -> reasignacion','metodo',1,'p_metodo','sintaxisAB.py',19),
  ('metodo -> pushString','metodo',1,'p_metodo','sintaxisAB.py',20),
  ('metodo -> casting','metodo',1,'p_metodo','sintaxisAB.py',21),
  ('valor -> valornumerico','valor',1,'p_valor','sintaxisPR.py',7),
  ('valor -> TRUE','valor',1,'p_valor','sintaxisPR.py',8),
  ('valor -> FALSE','valor',1,'p_valor','sintaxisPR.py',9),
  ('valor -> ID','valor',1,'p_valor','sintaxisPR.py',10),
  ('valor -> IDCHAR','valor',1,'p_valor','sintaxisPR.py',11),
  ('valor -> IDSTRING','valor',1,'p_valor','sintaxisPR.py',12),
  ('valor -> expresion','valor',1,'p_valor','sintaxisPR.py',13),
  ('valor -> conectores','valor',1,'p_valor','sintaxisPR.py',14),
  ('valor -> comparacion','valor',1,'p_valor','sintaxisPR.py',15),
  ('estructuras -> linkedlist','estructuras',1,'p_estructuras','sintaxisPR.py',22),
  ('estructuras -> hashmap','estructuras',1,'p_estructuras','sintaxisPR.py',23),
  ('comparacion -> ID signocompar ID','comparacion',3,'p_comparacion_id','sintaxisAB.py',25),
  ('comparacion -> IDCHAR signocompar IDCHAR','comparacion',3,'p_comparacion_id','sintaxisAB.py',26),
  ('comparacion -> IDSTRING signocompar IDSTRING','comparacion',3,'p_comparacion_id','sintaxisAB.py',27),
  ('asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR','asignacion',10,'p_asignacion_let_mut_vec','main.py',27),
  ('while -> WHILE ifparams LLLAVE cuerpof RLLAVE','while',5,'p_while','sintaxisPR.py',29),
  ('comparacion -> INTTYPE signocompar INTTYPE','comparacion',3,'p_comparacion_int','sintaxisAB.py',30),
  ('comparacion -> NINTTYPE signocompar NINTTYPE','comparacion',3,'p_comparacion_int','sintaxisAB.py',31),
  ('comparacion -> FLOATTYPE signocompar FLOATTYPE','comparacion',3,'p_comparacion_int','sintaxisAB.py',32),
  ('asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR','asignacion',7,'p_asignacion_const_int','main.py',34),
  ('asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR','asignacion',7,'p_asignacion_const_int','main.py',35),
  ('hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN','hashmap',5,'p_hashmap','sintaxisPR.py',34),
  ('comparacion -> boolean signocompar boolean','comparacion',3,'p_comparacion_bool','sintaxisAB.py',35),
  ('expresion -> valornumerico signo valornumerico','expresion',3,'p_expresion','sintaxisPR.py',38),
  ('datatype -> intsize','datatype',1,'p_datatype','sintaxisJJ.py',42),
  ('datatype -> uintsize','datatype',1,'p_datatype','sintaxisJJ.py',43),
  ('datatype -> floatsize','datatype',1,'p_datatype','sintaxisJJ.py',44),
  ('datatype -> strsize','datatype',1,'p_datatype','sintaxisJJ.py',45),
  ('datatype -> STRING','datatype',1,'p_datatype','sintaxisJJ.py',46),
  ('datatype -> BOOL','datatype',1,'p_datatype','sintaxisJJ.py',47),
  ('valornumerico -> NINTTYPE','valornumerico',1,'p_valornumerico','sintaxisPR.py',43),
  ('valornumerico -> INTTYPE','valornumerico',1,'p_valornumerico','sintaxisPR.py',44),
  ('valornumerico -> FLOATTYPE','valornumerico',1,'p_valornumerico','sintaxisPR.py',45),
  ('valornumerico -> NFLOATTYPE','valornumerico',1,'p_valornumerico','sintaxisPR.py',46),
  ('asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR','asignacion',7,'p_asignacion_const_uint','main.py',43),
  ('asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR','asignacion',7,'p_asignacion_const_float','main.py',49),
  ('signocompar -> MAYORQUE','signocompar',1,'p_signocompar','sintaxisAB.py',49),
  ('signocompar -> MENORQUE','signocompar',1,'p_signocompar','sintaxisAB.py',50),
  ('signocompar -> DIFERENTE','signocompar',1,'p_signocompar','sintaxisAB.py',51),
  ('signocompar -> IDENTICO','signocompar',1,'p_signocompar','sintaxisAB.py',52),
  ('intsize -> INT8','intsize',1,'p_intsize','sintaxisJJ.py',52),
  ('intsize -> INT16','intsize',1,'p_intsize','sintaxisJJ.py',53),
  ('intsize -> INT32','intsize',1,'p_intsize','sintaxisJJ.py',54),
  ('intsize -> INT64','intsize',1,'p_intsize','sintaxisJJ.py',55),
  ('intsize -> INT128','intsize',1,'p_intsize','sintaxisJJ.py',56),
  ('signo -> PLUS','signo',1,'p_signo','sintaxisPR.py',52),
  ('signo -> TIMES','signo',1,'p_signo','sintaxisPR.py',53),
  ('signo -> MINUS','signo',1,'p_signo','sintaxisPR.py',54),
  ('signo -> PORCENTAJE','signo',1,'p_signo','sintaxisPR.py',55),
  ('signo -> DIVIDE','signo',1,'p_signo','sintaxisPR.py',56),
  ('asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR','asignacion',7,'p_asignacion_const_str','main.py',54),
  ('linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR','linkedlist',6,'p_linkedlist','sintaxisAB.py',56),
  ('conectores -> boolean signoconect boolean','conectores',3,'p_conectores','sintaxisAB.py',59),
  ('conectores -> EXCLAM boolean','conectores',2,'p_conectores','sintaxisAB.py',60),
  ('conectores -> ID signoconect ID','conectores',3,'p_conectores','sintaxisAB.py',61),
  ('asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR','asignacion',12,'p_asignacion_const_string','main.py',60),
  ('floatsize -> FLOAT32','floatsize',1,'p_floatsize','sintaxisJJ.py',61),
  ('floatsize -> FLOAT64','floatsize',1,'p_floatsize','sintaxisJJ.py',62),
  ('entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR','entrada',13,'p_entrada','sintaxisPR.py',62),
  ('entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR','entrada',18,'p_entrada','sintaxisPR.py',63),
  ('signoconect -> DAMPERSAND','signoconect',1,'p_signoconect','sintaxisAB.py',64),
  ('signoconect -> OR','signoconect',1,'p_signoconect','sintaxisAB.py',65),
  ('asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR','asignacion',7,'p_asignacion_const_string2','main.py',66),
  ('uintsize -> UINT8','uintsize',1,'p_uintsize','sintaxisJJ.py',68),
  ('uintsize -> UINT16','uintsize',1,'p_uintsize','sintaxisJJ.py',69),
  ('uintsize -> UINT32','uintsize',1,'p_uintsize','sintaxisJJ.py',70),
  ('uintsize -> UINT64','uintsize',1,'p_uintsize','sintaxisJJ.py',71),
  ('uintsize -> UINT128','uintsize',1,'p_uintsize','sintaxisJJ.py',72),
  ('asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR','asignacion',7,'p_asignacion_const_bool','main.py',72),
  ('loop -> LOOP LLLAVE metodo RLLAVE','loop',4,'p_loop','sintaxisAB.py',75),
  ('strsize -> AMPERSAND COMILLA STATIC STR','strsize',4,'p_strsize','sintaxisJJ.py',77),
  ('strsize -> AMPERSAND STR','strsize',2,'p_strsize','sintaxisJJ.py',78),
  ('asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR','asignacion',7,'p_asignacion_const_char','main.py',78),
  ('params -> ID COLON datatype','params',3,'p_params','sintaxisAB.py',78),
  ('params -> ID COLON datatype COMA params','params',5,'p_params','sintaxisAB.py',79),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintaxisJJ.py',82),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintaxisJJ.py',83),
  ('impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR','impresion',5,'p_impresion','sintaxisAB.py',83),
  ('vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR','vectorpush',7,'p_vectorpush','main.py',85),
  ('ifparams -> ifcondicion','ifparams',1,'p_ifparams','sintaxisJJ.py',91),
  ('ifparams -> boolean','ifparams',1,'p_ifparams','sintaxisJJ.py',92),
  ('ifparams -> ID','ifparams',1,'p_ifparams','sintaxisJJ.py',93),
  ('elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE','elseblock',5,'p_elseblock','sintaxisJJ.py',98),
  ('elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE','elseblock',5,'p_elseblock','sintaxisJJ.py',99),
  ('elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE','elseifblock',9,'p_elseifblock','sintaxisJJ.py',104),
  ('elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE','elseifblock',7,'p_elseifblock','sintaxisJJ.py',105),
  ('asignacion -> LET MUT ID IGUAL valor ENDCHAR','asignacion',6,'p_asignacion_let_mut','main.py',107),
  ('asignacion -> LET MUT ID IGUAL estructuras ENDCHAR','asignacion',6,'p_asignacion_let_mut','main.py',108),
  ('ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE','ifblock',7,'p_ifblock','sintaxisJJ.py',110),
  ('ifblock -> IF ifparams LLLAVE cuerpof RLLAVE','ifblock',5,'p_ifblock','sintaxisJJ.py',111),
  ('ifcondicion -> comparacion','ifcondicion',1,'p_ifcondicion','sintaxisJJ.py',116),
  ('ifcondicion -> comparacion signoconect ifcondicion','ifcondicion',3,'p_ifcondicion','sintaxisJJ.py',117),
  ('ifcondicion -> LPAREN comparacion RPAREN','ifcondicion',3,'p_ifcondicion','sintaxisJJ.py',118),
  ('ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion','ifcondicion',5,'p_ifcondicion','sintaxisJJ.py',119),
  ('ifcondicion -> LPAREN ifcondicion RPAREN','ifcondicion',3,'p_ifcondicion','sintaxisJJ.py',120),
  ('asignacion -> LET ID IGUAL valor ENDCHAR','asignacion',5,'p_asignacion_let_int','main.py',117),
  ('reasignacion -> ID IGUAL valor ENDCHAR','reasignacion',4,'p_reasignacion','main.py',124),
  ('funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE','funcion',11,'p_funcion_returnimplicito','sintaxisJJ.py',129),
  ('funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE','funcion',13,'p_funcion_retorno','sintaxisJJ.py',134),
  ('asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR','asignacion',11,'p_asignacion_let_mut_string','main.py',136),
  ('funcion -> FN ID LPAREN params RPAREN LLLAVE cuerpof RLLAVE','funcion',8,'p_funcion_sinreturn','sintaxisJJ.py',138),
  ('pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR','pushString',7,'p_pushString','main.py',143),
  ('pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR','pushString',7,'p_pushString','main.py',144),
  ('casting -> LET ID IGUAL ID AS uintsize','casting',6,'p_casting_decimal','main.py',158),
  ('casting -> LET ID IGUAL ID AS intsize','casting',6,'p_casting_decimal','main.py',159),
  ('casting -> LET ID IGUAL ID AS CHAR','casting',6,'p_casting_char','main.py',174),
  ('asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR','asignacion',10,'p_asignacion_let_mut_ll','main.py',191),
  ('llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR','llpushfront',7,'p_llpushfront','main.py',198),
  ('llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR','llpopback',6,'p_llpopback','main.py',211),
  ('sumaint -> ID signo ID','sumaint',3,'p_sumaint','main.py',223),
  ('sumaint -> LET ID IGUAL ID signo ID ENDCHAR','sumaint',7,'p_sumaint_asignacion','main.py',235),
]
