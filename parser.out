Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASYNC
    AWAIT
    BREAK
    CONTINUE
    DIVASIGN
    DOLAR
    DYN
    ENUM
    ERR
    FINAL
    FOR
    FORMAT
    IMPL
    IN
    INPUT
    INTERRO
    LCOR
    MAINFN
    MATCH
    MOVE
    MULTIASIGN
    OK
    PARSE
    POINTERSIZE
    PRIV
    PUB
    RCOR
    REF
    RESTAASIGN
    SELF
    SIZEOF
    STRUCT
    SUMAASIGN
    SUPER
    TYPE
    TYPEOF
    UNSAFE
    UNWRAPOR
    USE
    WHERE

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> metodo
Rule 2     cuerpo -> funcion
Rule 3     cuerpof -> metodo
Rule 4     cuerpof -> metodo cuerpof
Rule 5     asignacion -> LET ID IGUAL valorPam ENDCHAR
Rule 6     metodo -> asignacion
Rule 7     metodo -> impresion
Rule 8     metodo -> comparacion
Rule 9     metodo -> linkedlist
Rule 10    metodo -> loop
Rule 11    metodo -> conectores
Rule 12    metodo -> ifblock
Rule 13    metodo -> elseifblock
Rule 14    metodo -> elseblock
Rule 15    metodo -> vectorpush
Rule 16    valorPam -> valornumerico
Rule 17    valorPam -> TRUE
Rule 18    valorPam -> FALSE
Rule 19    valorPam -> ID
Rule 20    valorPam -> IDCHAR
Rule 21    valorPam -> IDSTRING
Rule 22    valorPam -> expresion
Rule 23    valorPam -> conectores
Rule 24    valorPam -> comparacion
Rule 25    asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
Rule 26    asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
Rule 27    vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
Rule 28    asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
Rule 29    comparacion -> ID signocompar ID
Rule 30    comparacion -> IDCHAR signocompar IDCHAR
Rule 31    comparacion -> IDSTRING signocompar IDSTRING
Rule 32    asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
Rule 33    estructuras -> linkedlist
Rule 34    estructuras -> hashmap
Rule 35    asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
Rule 36    comparacion -> INTTYPE signocompar INTTYPE
Rule 37    comparacion -> NINTTYPE signocompar NINTTYPE
Rule 38    comparacion -> FLOATTYPE signocompar FLOATTYPE
Rule 39    asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
Rule 40    asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
Rule 41    while -> WHILE ifparams LLLAVE cuerpof RLLAVE
Rule 42    comparacion -> boolean signocompar boolean
Rule 43    valor -> INTTYPE
Rule 44    valor -> FLOATTYPE
Rule 45    valor -> NINTTYPE
Rule 46    valor -> ID
Rule 47    valor -> TRUE
Rule 48    valor -> FALSE
Rule 49    valor -> IDCHAR
Rule 50    valor -> IDSTRING
Rule 51    asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR
Rule 52    hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
Rule 53    asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
Rule 54    vec -> VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN
Rule 55    asignacion -> LET MUT ID IGUAL valorPam ENDCHAR
Rule 56    asignacion -> LET MUT ID IGUAL estructuras ENDCHAR
Rule 57    asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 58    expresion -> valornumerico signo valornumerico
Rule 59    signocompar -> MAYORQUE
Rule 60    signocompar -> MENORQUE
Rule 61    signocompar -> DIFERENTE
Rule 62    signocompar -> IDENTICO
Rule 63    valornumerico -> NINTTYPE
Rule 64    valornumerico -> INTTYPE
Rule 65    valornumerico -> FLOATTYPE
Rule 66    valornumerico -> NFLOATTYPE
Rule 67    datatype -> intsize
Rule 68    datatype -> uintsize
Rule 69    datatype -> floatsize
Rule 70    datatype -> strsize
Rule 71    datatype -> STRING
Rule 72    datatype -> BOOL
Rule 73    linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 74    conectores -> boolean signoconect boolean
Rule 75    conectores -> EXCLAM boolean
Rule 76    conectores -> ID signoconect ID
Rule 77    signo -> PLUS
Rule 78    signo -> TIMES
Rule 79    signo -> MINUS
Rule 80    signo -> PORCENTAJE
Rule 81    signo -> DIVIDE
Rule 82    intsize -> INT8
Rule 83    intsize -> INT16
Rule 84    intsize -> INT32
Rule 85    intsize -> INT64
Rule 86    intsize -> INT128
Rule 87    signoconect -> DAMPERSAND
Rule 88    signoconect -> OR
Rule 89    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
Rule 90    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
Rule 91    floatsize -> FLOAT32
Rule 92    floatsize -> FLOAT64
Rule 93    loop -> LOOP LLLAVE metodo RLLAVE
Rule 94    uintsize -> UINT8
Rule 95    uintsize -> UINT16
Rule 96    uintsize -> UINT32
Rule 97    uintsize -> UINT64
Rule 98    uintsize -> UINT128
Rule 99    params -> ID COLON datatype
Rule 100   params -> ID COLON datatype COMA params
Rule 101   funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE
Rule 102   impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR
Rule 103   strsize -> AMPERSAND COMILLA STATIC STR
Rule 104   strsize -> AMPERSAND STR
Rule 105   boolean -> TRUE
Rule 106   boolean -> FALSE
Rule 107   ifparams -> ifcondicion
Rule 108   ifparams -> boolean
Rule 109   ifparams -> ID
Rule 110   elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE
Rule 111   elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE
Rule 112   elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 113   elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
Rule 114   ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 115   ifblock -> IF ifparams LLLAVE cuerpof RLLAVE
Rule 116   ifcondicion -> comparacion
Rule 117   ifcondicion -> comparacion signoconect ifcondicion
Rule 118   ifcondicion -> LPAREN comparacion RPAREN
Rule 119   ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion
Rule 120   ifcondicion -> LPAREN ifcondicion RPAREN
Rule 121   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
Rule 122   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

Terminals, with rules where they appear

AMPERSAND            : 89 90 103 104
ARROWOPT             : 121 122
ASYNC                : 
AWAIT                : 
BOOL                 : 51 72
BREAK                : 
CHAR                 : 53
COLON                : 25 26 28 32 35 39 40 51 53 99 100
COMA                 : 100
COMILLA              : 103
CONST                : 25 26 28 32 35 39 40 51 53
CONTINUE             : 
DAMPERSAND           : 87
DIFERENTE            : 61
DIVASIGN             : 
DIVIDE               : 81
DOLAR                : 
DOSDOBLEPUNTOS       : 39 52 54 57 73 89 90
DYN                  : 
ELSE                 : 110 111 112 113
ENDCHAR              : 5 25 26 27 28 32 35 39 40 51 53 55 56 57 73 89 90 102 121
ENUM                 : 
ERR                  : 
EXCLAM               : 75
EXPECT               : 90
FALSE                : 18 48 106
FINAL                : 
FLOAT32              : 91
FLOAT64              : 92
FLOATTYPE            : 32 38 38 44 65
FN                   : 101 121 122
FOR                  : 
FORMAT               : 
FROM                 : 39
HASHMAP              : 52
ID                   : 5 19 25 26 27 28 29 29 32 35 39 40 46 51 53 55 56 57 73 76 76 89 90 99 100 101 109 121 122 122
IDCHAR               : 20 30 30 49 53
IDENTICO             : 62
IDSTRING             : 21 31 31 35 39 40 50 90
IF                   : 112 113 114 115
IGUAL                : 5 25 26 28 32 35 39 40 51 53 55 56 57 73
IMPL                 : 
IN                   : 
INPUT                : 
INT128               : 86
INT16                : 83
INT32                : 84
INT64                : 85
INT8                 : 82
INTERRO              : 
INTTYPE              : 25 27 28 36 36 43 64
IO                   : 89 90
LCOR                 : 
LET                  : 5 55 56 57 73
LINKEDLIST           : 73
LLLAVE               : 41 93 101 110 111 112 113 114 115 121 122
LOOP                 : 93
LPAREN               : 27 39 52 54 57 73 89 89 90 90 90 101 102 112 114 118 119 120 121 122
MAINFN               : 
MATCH                : 
MAYORQUE             : 59
MENORQUE             : 60
MINUS                : 79
MOVE                 : 
MULTIASIGN           : 
MUT                  : 55 56 57 73 89 90
NEW                  : 52 54 57 73
NFLOATTYPE           : 66
NINTTYPE             : 26 37 37 45 63
OK                   : 
OR                   : 88
PARSE                : 
PLUS                 : 77
POINT                : 27 89 90 90
POINTERSIZE          : 
PORCENTAJE           : 80
PRINTLN              : 102
PRIV                 : 
PUB                  : 
PUSH                 : 27
RCOR                 : 
READLINE             : 89 90
REF                  : 
RESTAASIGN           : 
RETURN               : 121
RLLAVE               : 41 93 101 110 111 112 113 114 115 121 122
RPAREN               : 27 39 52 54 57 73 89 89 90 90 90 101 102 112 114 118 119 120 121 122
SELF                 : 
SIZEOF               : 
STATIC               : 103
STDIN                : 89 90
STR                  : 103 104
STRING               : 39 39 40 71
STRUCT               : 
SUMAASIGN            : 
SUPER                : 
TIMES                : 78
TRUE                 : 17 47 105
TYPE                 : 
TYPEOF               : 
UINT128              : 98
UINT16               : 95
UINT32               : 96
UINT64               : 97
UINT8                : 94
UNSAFE               : 
UNWRAPOR             : 
USE                  : 
VEC                  : 54 57
WHERE                : 
WHILE                : 41
error                : 

Nonterminals, with rules where they appear

asignacion           : 6
boolean              : 42 42 51 74 74 75 108
comparacion          : 8 24 116 117 118 119
conectores           : 11 23
cuerpo               : 0
cuerpof              : 4 41 110 111 112 113 114 115 121 122
datatype             : 99 100 121 122
elseblock            : 14
elseifblock          : 13 111
entrada              : 
estructuras          : 56
expresion            : 22
floatsize            : 32 69
funcion              : 2
hashmap              : 34
ifblock              : 12 110 112 113
ifcondicion          : 107 117 119 120
ifparams             : 41 112 113 114 115 121
impresion            : 7
intsize              : 25 26 67
linkedlist           : 9 33
loop                 : 10
metodo               : 1 3 4 93 101
params               : 100 101 121 122
signo                : 58
signocompar          : 29 30 31 36 37 38 42
signoconect          : 74 76 117 119
strsize              : 35 70
uintsize             : 28 68
valor                : 102
valorPam             : 5 55
valornumerico        : 16 58 58
vec                  : 
vectorpush           : 15
while                : 

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . metodo
    (2) cuerpo -> . funcion
    (6) metodo -> . asignacion
    (7) metodo -> . impresion
    (8) metodo -> . comparacion
    (9) metodo -> . linkedlist
    (10) metodo -> . loop
    (11) metodo -> . conectores
    (12) metodo -> . ifblock
    (13) metodo -> . elseifblock
    (14) metodo -> . elseblock
    (15) metodo -> . vectorpush
    (101) funcion -> . FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE
    (121) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (122) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (5) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (25) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (55) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (56) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (57) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (102) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (73) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (114) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (112) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (111) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (27) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    FN              shift and go to state 14
    LET             shift and go to state 16
    CONST           shift and go to state 17
    PRINTLN         shift and go to state 24
    ID              shift and go to state 15
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LOOP            shift and go to state 25
    EXCLAM          shift and go to state 26
    IF              shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    cuerpo                         shift and go to state 1
    metodo                         shift and go to state 2
    funcion                        shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    vectorpush                     shift and go to state 13
    boolean                        shift and go to state 22

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> metodo .

    $end            reduce using rule 1 (cuerpo -> metodo .)


state 3

    (2) cuerpo -> funcion .

    $end            reduce using rule 2 (cuerpo -> funcion .)


state 4

    (6) metodo -> asignacion .

    $end            reduce using rule 6 (metodo -> asignacion .)
    RLLAVE          reduce using rule 6 (metodo -> asignacion .)
    LET             reduce using rule 6 (metodo -> asignacion .)
    CONST           reduce using rule 6 (metodo -> asignacion .)
    PRINTLN         reduce using rule 6 (metodo -> asignacion .)
    ID              reduce using rule 6 (metodo -> asignacion .)
    IDCHAR          reduce using rule 6 (metodo -> asignacion .)
    IDSTRING        reduce using rule 6 (metodo -> asignacion .)
    INTTYPE         reduce using rule 6 (metodo -> asignacion .)
    NINTTYPE        reduce using rule 6 (metodo -> asignacion .)
    FLOATTYPE       reduce using rule 6 (metodo -> asignacion .)
    LOOP            reduce using rule 6 (metodo -> asignacion .)
    EXCLAM          reduce using rule 6 (metodo -> asignacion .)
    IF              reduce using rule 6 (metodo -> asignacion .)
    TRUE            reduce using rule 6 (metodo -> asignacion .)
    FALSE           reduce using rule 6 (metodo -> asignacion .)
    RETURN          reduce using rule 6 (metodo -> asignacion .)


state 5

    (7) metodo -> impresion .

    $end            reduce using rule 7 (metodo -> impresion .)
    RLLAVE          reduce using rule 7 (metodo -> impresion .)
    LET             reduce using rule 7 (metodo -> impresion .)
    CONST           reduce using rule 7 (metodo -> impresion .)
    PRINTLN         reduce using rule 7 (metodo -> impresion .)
    ID              reduce using rule 7 (metodo -> impresion .)
    IDCHAR          reduce using rule 7 (metodo -> impresion .)
    IDSTRING        reduce using rule 7 (metodo -> impresion .)
    INTTYPE         reduce using rule 7 (metodo -> impresion .)
    NINTTYPE        reduce using rule 7 (metodo -> impresion .)
    FLOATTYPE       reduce using rule 7 (metodo -> impresion .)
    LOOP            reduce using rule 7 (metodo -> impresion .)
    EXCLAM          reduce using rule 7 (metodo -> impresion .)
    IF              reduce using rule 7 (metodo -> impresion .)
    TRUE            reduce using rule 7 (metodo -> impresion .)
    FALSE           reduce using rule 7 (metodo -> impresion .)
    RETURN          reduce using rule 7 (metodo -> impresion .)


state 6

    (8) metodo -> comparacion .

    $end            reduce using rule 8 (metodo -> comparacion .)
    RLLAVE          reduce using rule 8 (metodo -> comparacion .)
    LET             reduce using rule 8 (metodo -> comparacion .)
    CONST           reduce using rule 8 (metodo -> comparacion .)
    PRINTLN         reduce using rule 8 (metodo -> comparacion .)
    ID              reduce using rule 8 (metodo -> comparacion .)
    IDCHAR          reduce using rule 8 (metodo -> comparacion .)
    IDSTRING        reduce using rule 8 (metodo -> comparacion .)
    INTTYPE         reduce using rule 8 (metodo -> comparacion .)
    NINTTYPE        reduce using rule 8 (metodo -> comparacion .)
    FLOATTYPE       reduce using rule 8 (metodo -> comparacion .)
    LOOP            reduce using rule 8 (metodo -> comparacion .)
    EXCLAM          reduce using rule 8 (metodo -> comparacion .)
    IF              reduce using rule 8 (metodo -> comparacion .)
    TRUE            reduce using rule 8 (metodo -> comparacion .)
    FALSE           reduce using rule 8 (metodo -> comparacion .)
    RETURN          reduce using rule 8 (metodo -> comparacion .)


state 7

    (9) metodo -> linkedlist .

    $end            reduce using rule 9 (metodo -> linkedlist .)
    RLLAVE          reduce using rule 9 (metodo -> linkedlist .)
    LET             reduce using rule 9 (metodo -> linkedlist .)
    CONST           reduce using rule 9 (metodo -> linkedlist .)
    PRINTLN         reduce using rule 9 (metodo -> linkedlist .)
    ID              reduce using rule 9 (metodo -> linkedlist .)
    IDCHAR          reduce using rule 9 (metodo -> linkedlist .)
    IDSTRING        reduce using rule 9 (metodo -> linkedlist .)
    INTTYPE         reduce using rule 9 (metodo -> linkedlist .)
    NINTTYPE        reduce using rule 9 (metodo -> linkedlist .)
    FLOATTYPE       reduce using rule 9 (metodo -> linkedlist .)
    LOOP            reduce using rule 9 (metodo -> linkedlist .)
    EXCLAM          reduce using rule 9 (metodo -> linkedlist .)
    IF              reduce using rule 9 (metodo -> linkedlist .)
    TRUE            reduce using rule 9 (metodo -> linkedlist .)
    FALSE           reduce using rule 9 (metodo -> linkedlist .)
    RETURN          reduce using rule 9 (metodo -> linkedlist .)


state 8

    (10) metodo -> loop .

    $end            reduce using rule 10 (metodo -> loop .)
    RLLAVE          reduce using rule 10 (metodo -> loop .)
    LET             reduce using rule 10 (metodo -> loop .)
    CONST           reduce using rule 10 (metodo -> loop .)
    PRINTLN         reduce using rule 10 (metodo -> loop .)
    ID              reduce using rule 10 (metodo -> loop .)
    IDCHAR          reduce using rule 10 (metodo -> loop .)
    IDSTRING        reduce using rule 10 (metodo -> loop .)
    INTTYPE         reduce using rule 10 (metodo -> loop .)
    NINTTYPE        reduce using rule 10 (metodo -> loop .)
    FLOATTYPE       reduce using rule 10 (metodo -> loop .)
    LOOP            reduce using rule 10 (metodo -> loop .)
    EXCLAM          reduce using rule 10 (metodo -> loop .)
    IF              reduce using rule 10 (metodo -> loop .)
    TRUE            reduce using rule 10 (metodo -> loop .)
    FALSE           reduce using rule 10 (metodo -> loop .)
    RETURN          reduce using rule 10 (metodo -> loop .)


state 9

    (11) metodo -> conectores .

    $end            reduce using rule 11 (metodo -> conectores .)
    RLLAVE          reduce using rule 11 (metodo -> conectores .)
    LET             reduce using rule 11 (metodo -> conectores .)
    CONST           reduce using rule 11 (metodo -> conectores .)
    PRINTLN         reduce using rule 11 (metodo -> conectores .)
    ID              reduce using rule 11 (metodo -> conectores .)
    IDCHAR          reduce using rule 11 (metodo -> conectores .)
    IDSTRING        reduce using rule 11 (metodo -> conectores .)
    INTTYPE         reduce using rule 11 (metodo -> conectores .)
    NINTTYPE        reduce using rule 11 (metodo -> conectores .)
    FLOATTYPE       reduce using rule 11 (metodo -> conectores .)
    LOOP            reduce using rule 11 (metodo -> conectores .)
    EXCLAM          reduce using rule 11 (metodo -> conectores .)
    IF              reduce using rule 11 (metodo -> conectores .)
    TRUE            reduce using rule 11 (metodo -> conectores .)
    FALSE           reduce using rule 11 (metodo -> conectores .)
    RETURN          reduce using rule 11 (metodo -> conectores .)


state 10

    (12) metodo -> ifblock .
    (112) elseifblock -> ifblock . ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> ifblock . ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> ifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 12 (metodo -> ifblock .)
    RLLAVE          reduce using rule 12 (metodo -> ifblock .)
    LET             reduce using rule 12 (metodo -> ifblock .)
    CONST           reduce using rule 12 (metodo -> ifblock .)
    PRINTLN         reduce using rule 12 (metodo -> ifblock .)
    ID              reduce using rule 12 (metodo -> ifblock .)
    IDCHAR          reduce using rule 12 (metodo -> ifblock .)
    IDSTRING        reduce using rule 12 (metodo -> ifblock .)
    INTTYPE         reduce using rule 12 (metodo -> ifblock .)
    NINTTYPE        reduce using rule 12 (metodo -> ifblock .)
    FLOATTYPE       reduce using rule 12 (metodo -> ifblock .)
    LOOP            reduce using rule 12 (metodo -> ifblock .)
    EXCLAM          reduce using rule 12 (metodo -> ifblock .)
    IF              reduce using rule 12 (metodo -> ifblock .)
    TRUE            reduce using rule 12 (metodo -> ifblock .)
    FALSE           reduce using rule 12 (metodo -> ifblock .)
    RETURN          reduce using rule 12 (metodo -> ifblock .)
    ELSE            shift and go to state 30


state 11

    (13) metodo -> elseifblock .
    (111) elseblock -> elseifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 13 (metodo -> elseifblock .)
    RLLAVE          reduce using rule 13 (metodo -> elseifblock .)
    LET             reduce using rule 13 (metodo -> elseifblock .)
    CONST           reduce using rule 13 (metodo -> elseifblock .)
    PRINTLN         reduce using rule 13 (metodo -> elseifblock .)
    ID              reduce using rule 13 (metodo -> elseifblock .)
    IDCHAR          reduce using rule 13 (metodo -> elseifblock .)
    IDSTRING        reduce using rule 13 (metodo -> elseifblock .)
    INTTYPE         reduce using rule 13 (metodo -> elseifblock .)
    NINTTYPE        reduce using rule 13 (metodo -> elseifblock .)
    FLOATTYPE       reduce using rule 13 (metodo -> elseifblock .)
    LOOP            reduce using rule 13 (metodo -> elseifblock .)
    EXCLAM          reduce using rule 13 (metodo -> elseifblock .)
    IF              reduce using rule 13 (metodo -> elseifblock .)
    TRUE            reduce using rule 13 (metodo -> elseifblock .)
    FALSE           reduce using rule 13 (metodo -> elseifblock .)
    RETURN          reduce using rule 13 (metodo -> elseifblock .)
    ELSE            shift and go to state 31


state 12

    (14) metodo -> elseblock .

    $end            reduce using rule 14 (metodo -> elseblock .)
    RLLAVE          reduce using rule 14 (metodo -> elseblock .)
    LET             reduce using rule 14 (metodo -> elseblock .)
    CONST           reduce using rule 14 (metodo -> elseblock .)
    PRINTLN         reduce using rule 14 (metodo -> elseblock .)
    ID              reduce using rule 14 (metodo -> elseblock .)
    IDCHAR          reduce using rule 14 (metodo -> elseblock .)
    IDSTRING        reduce using rule 14 (metodo -> elseblock .)
    INTTYPE         reduce using rule 14 (metodo -> elseblock .)
    NINTTYPE        reduce using rule 14 (metodo -> elseblock .)
    FLOATTYPE       reduce using rule 14 (metodo -> elseblock .)
    LOOP            reduce using rule 14 (metodo -> elseblock .)
    EXCLAM          reduce using rule 14 (metodo -> elseblock .)
    IF              reduce using rule 14 (metodo -> elseblock .)
    TRUE            reduce using rule 14 (metodo -> elseblock .)
    FALSE           reduce using rule 14 (metodo -> elseblock .)
    RETURN          reduce using rule 14 (metodo -> elseblock .)


state 13

    (15) metodo -> vectorpush .

    $end            reduce using rule 15 (metodo -> vectorpush .)
    RLLAVE          reduce using rule 15 (metodo -> vectorpush .)
    LET             reduce using rule 15 (metodo -> vectorpush .)
    CONST           reduce using rule 15 (metodo -> vectorpush .)
    PRINTLN         reduce using rule 15 (metodo -> vectorpush .)
    ID              reduce using rule 15 (metodo -> vectorpush .)
    IDCHAR          reduce using rule 15 (metodo -> vectorpush .)
    IDSTRING        reduce using rule 15 (metodo -> vectorpush .)
    INTTYPE         reduce using rule 15 (metodo -> vectorpush .)
    NINTTYPE        reduce using rule 15 (metodo -> vectorpush .)
    FLOATTYPE       reduce using rule 15 (metodo -> vectorpush .)
    LOOP            reduce using rule 15 (metodo -> vectorpush .)
    EXCLAM          reduce using rule 15 (metodo -> vectorpush .)
    IF              reduce using rule 15 (metodo -> vectorpush .)
    TRUE            reduce using rule 15 (metodo -> vectorpush .)
    FALSE           reduce using rule 15 (metodo -> vectorpush .)
    RETURN          reduce using rule 15 (metodo -> vectorpush .)


state 14

    (101) funcion -> FN . ID LPAREN params RPAREN LLLAVE metodo RLLAVE
    (121) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (122) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    ID              shift and go to state 32


state 15

    (29) comparacion -> ID . signocompar ID
    (76) conectores -> ID . signoconect ID
    (27) vectorpush -> ID . POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO
    (87) signoconect -> . DAMPERSAND
    (88) signoconect -> . OR

    POINT           shift and go to state 35
    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39
    DAMPERSAND      shift and go to state 40
    OR              shift and go to state 41

    signocompar                    shift and go to state 33
    signoconect                    shift and go to state 34

state 16

    (5) asignacion -> LET . ID IGUAL valorPam ENDCHAR
    (55) asignacion -> LET . MUT ID IGUAL valorPam ENDCHAR
    (56) asignacion -> LET . MUT ID IGUAL estructuras ENDCHAR
    (57) asignacion -> LET . MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (73) linkedlist -> LET . MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    ID              shift and go to state 42
    MUT             shift and go to state 43


state 17

    (25) asignacion -> CONST . ID COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> CONST . ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> CONST . ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> CONST . ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> CONST . ID COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> CONST . ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> CONST . ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> CONST . ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> CONST . ID COLON CHAR IGUAL IDCHAR ENDCHAR

    ID              shift and go to state 44


state 18

    (36) comparacion -> INTTYPE . signocompar INTTYPE
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 45

state 19

    (37) comparacion -> NINTTYPE . signocompar NINTTYPE
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 46

state 20

    (38) comparacion -> FLOATTYPE . signocompar FLOATTYPE
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 47

state 21

    (31) comparacion -> IDSTRING . signocompar IDSTRING
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 48

state 22

    (42) comparacion -> boolean . signocompar boolean
    (74) conectores -> boolean . signoconect boolean
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO
    (87) signoconect -> . DAMPERSAND
    (88) signoconect -> . OR

    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39
    DAMPERSAND      shift and go to state 40
    OR              shift and go to state 41

    signocompar                    shift and go to state 49
    signoconect                    shift and go to state 50

state 23

    (30) comparacion -> IDCHAR . signocompar IDCHAR
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 51

state 24

    (102) impresion -> PRINTLN . LPAREN valor RPAREN ENDCHAR

    LPAREN          shift and go to state 52


state 25

    (93) loop -> LOOP . LLLAVE metodo RLLAVE

    LLLAVE          shift and go to state 53


state 26

    (75) conectores -> EXCLAM . boolean
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    boolean                        shift and go to state 54

state 27

    (114) ifblock -> IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifblock -> IF . ifparams LLLAVE cuerpof RLLAVE
    (107) ifparams -> . ifcondicion
    (108) ifparams -> . boolean
    (109) ifparams -> . ID
    (116) ifcondicion -> . comparacion
    (117) ifcondicion -> . comparacion signoconect ifcondicion
    (118) ifcondicion -> . LPAREN comparacion RPAREN
    (119) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (120) ifcondicion -> . LPAREN ifcondicion RPAREN
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean

    LPAREN          shift and go to state 55
    ID              shift and go to state 59
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20

    ifparams                       shift and go to state 56
    ifcondicion                    shift and go to state 57
    boolean                        shift and go to state 58
    comparacion                    shift and go to state 60

state 28

    (105) boolean -> TRUE .

    MAYORQUE        reduce using rule 105 (boolean -> TRUE .)
    MENORQUE        reduce using rule 105 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 105 (boolean -> TRUE .)
    IDENTICO        reduce using rule 105 (boolean -> TRUE .)
    DAMPERSAND      reduce using rule 105 (boolean -> TRUE .)
    OR              reduce using rule 105 (boolean -> TRUE .)
    $end            reduce using rule 105 (boolean -> TRUE .)
    RLLAVE          reduce using rule 105 (boolean -> TRUE .)
    LET             reduce using rule 105 (boolean -> TRUE .)
    CONST           reduce using rule 105 (boolean -> TRUE .)
    PRINTLN         reduce using rule 105 (boolean -> TRUE .)
    ID              reduce using rule 105 (boolean -> TRUE .)
    IDCHAR          reduce using rule 105 (boolean -> TRUE .)
    IDSTRING        reduce using rule 105 (boolean -> TRUE .)
    INTTYPE         reduce using rule 105 (boolean -> TRUE .)
    NINTTYPE        reduce using rule 105 (boolean -> TRUE .)
    FLOATTYPE       reduce using rule 105 (boolean -> TRUE .)
    LOOP            reduce using rule 105 (boolean -> TRUE .)
    EXCLAM          reduce using rule 105 (boolean -> TRUE .)
    IF              reduce using rule 105 (boolean -> TRUE .)
    TRUE            reduce using rule 105 (boolean -> TRUE .)
    FALSE           reduce using rule 105 (boolean -> TRUE .)
    ENDCHAR         reduce using rule 105 (boolean -> TRUE .)
    RETURN          reduce using rule 105 (boolean -> TRUE .)
    LLLAVE          reduce using rule 105 (boolean -> TRUE .)
    RPAREN          reduce using rule 105 (boolean -> TRUE .)


state 29

    (106) boolean -> FALSE .

    MAYORQUE        reduce using rule 106 (boolean -> FALSE .)
    MENORQUE        reduce using rule 106 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 106 (boolean -> FALSE .)
    IDENTICO        reduce using rule 106 (boolean -> FALSE .)
    DAMPERSAND      reduce using rule 106 (boolean -> FALSE .)
    OR              reduce using rule 106 (boolean -> FALSE .)
    $end            reduce using rule 106 (boolean -> FALSE .)
    RLLAVE          reduce using rule 106 (boolean -> FALSE .)
    LET             reduce using rule 106 (boolean -> FALSE .)
    CONST           reduce using rule 106 (boolean -> FALSE .)
    PRINTLN         reduce using rule 106 (boolean -> FALSE .)
    ID              reduce using rule 106 (boolean -> FALSE .)
    IDCHAR          reduce using rule 106 (boolean -> FALSE .)
    IDSTRING        reduce using rule 106 (boolean -> FALSE .)
    INTTYPE         reduce using rule 106 (boolean -> FALSE .)
    NINTTYPE        reduce using rule 106 (boolean -> FALSE .)
    FLOATTYPE       reduce using rule 106 (boolean -> FALSE .)
    LOOP            reduce using rule 106 (boolean -> FALSE .)
    EXCLAM          reduce using rule 106 (boolean -> FALSE .)
    IF              reduce using rule 106 (boolean -> FALSE .)
    TRUE            reduce using rule 106 (boolean -> FALSE .)
    FALSE           reduce using rule 106 (boolean -> FALSE .)
    ENDCHAR         reduce using rule 106 (boolean -> FALSE .)
    RETURN          reduce using rule 106 (boolean -> FALSE .)
    LLLAVE          reduce using rule 106 (boolean -> FALSE .)
    RPAREN          reduce using rule 106 (boolean -> FALSE .)


state 30

    (112) elseifblock -> ifblock ELSE . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> ifblock ELSE . IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> ifblock ELSE . LLLAVE cuerpof RLLAVE

    IF              shift and go to state 61
    LLLAVE          shift and go to state 62


state 31

    (111) elseblock -> elseifblock ELSE . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 63


state 32

    (101) funcion -> FN ID . LPAREN params RPAREN LLLAVE metodo RLLAVE
    (121) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (122) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    LPAREN          shift and go to state 64


state 33

    (29) comparacion -> ID signocompar . ID

    ID              shift and go to state 65


state 34

    (76) conectores -> ID signoconect . ID

    ID              shift and go to state 66


state 35

    (27) vectorpush -> ID POINT . PUSH LPAREN INTTYPE RPAREN ENDCHAR

    PUSH            shift and go to state 67


state 36

    (59) signocompar -> MAYORQUE .

    ID              reduce using rule 59 (signocompar -> MAYORQUE .)
    INTTYPE         reduce using rule 59 (signocompar -> MAYORQUE .)
    NINTTYPE        reduce using rule 59 (signocompar -> MAYORQUE .)
    FLOATTYPE       reduce using rule 59 (signocompar -> MAYORQUE .)
    IDSTRING        reduce using rule 59 (signocompar -> MAYORQUE .)
    TRUE            reduce using rule 59 (signocompar -> MAYORQUE .)
    FALSE           reduce using rule 59 (signocompar -> MAYORQUE .)
    IDCHAR          reduce using rule 59 (signocompar -> MAYORQUE .)


state 37

    (60) signocompar -> MENORQUE .

    ID              reduce using rule 60 (signocompar -> MENORQUE .)
    INTTYPE         reduce using rule 60 (signocompar -> MENORQUE .)
    NINTTYPE        reduce using rule 60 (signocompar -> MENORQUE .)
    FLOATTYPE       reduce using rule 60 (signocompar -> MENORQUE .)
    IDSTRING        reduce using rule 60 (signocompar -> MENORQUE .)
    TRUE            reduce using rule 60 (signocompar -> MENORQUE .)
    FALSE           reduce using rule 60 (signocompar -> MENORQUE .)
    IDCHAR          reduce using rule 60 (signocompar -> MENORQUE .)


state 38

    (61) signocompar -> DIFERENTE .

    ID              reduce using rule 61 (signocompar -> DIFERENTE .)
    INTTYPE         reduce using rule 61 (signocompar -> DIFERENTE .)
    NINTTYPE        reduce using rule 61 (signocompar -> DIFERENTE .)
    FLOATTYPE       reduce using rule 61 (signocompar -> DIFERENTE .)
    IDSTRING        reduce using rule 61 (signocompar -> DIFERENTE .)
    TRUE            reduce using rule 61 (signocompar -> DIFERENTE .)
    FALSE           reduce using rule 61 (signocompar -> DIFERENTE .)
    IDCHAR          reduce using rule 61 (signocompar -> DIFERENTE .)


state 39

    (62) signocompar -> IDENTICO .

    ID              reduce using rule 62 (signocompar -> IDENTICO .)
    INTTYPE         reduce using rule 62 (signocompar -> IDENTICO .)
    NINTTYPE        reduce using rule 62 (signocompar -> IDENTICO .)
    FLOATTYPE       reduce using rule 62 (signocompar -> IDENTICO .)
    IDSTRING        reduce using rule 62 (signocompar -> IDENTICO .)
    TRUE            reduce using rule 62 (signocompar -> IDENTICO .)
    FALSE           reduce using rule 62 (signocompar -> IDENTICO .)
    IDCHAR          reduce using rule 62 (signocompar -> IDENTICO .)


state 40

    (87) signoconect -> DAMPERSAND .

    ID              reduce using rule 87 (signoconect -> DAMPERSAND .)
    TRUE            reduce using rule 87 (signoconect -> DAMPERSAND .)
    FALSE           reduce using rule 87 (signoconect -> DAMPERSAND .)
    LPAREN          reduce using rule 87 (signoconect -> DAMPERSAND .)
    IDCHAR          reduce using rule 87 (signoconect -> DAMPERSAND .)
    IDSTRING        reduce using rule 87 (signoconect -> DAMPERSAND .)
    INTTYPE         reduce using rule 87 (signoconect -> DAMPERSAND .)
    NINTTYPE        reduce using rule 87 (signoconect -> DAMPERSAND .)
    FLOATTYPE       reduce using rule 87 (signoconect -> DAMPERSAND .)


state 41

    (88) signoconect -> OR .

    ID              reduce using rule 88 (signoconect -> OR .)
    TRUE            reduce using rule 88 (signoconect -> OR .)
    FALSE           reduce using rule 88 (signoconect -> OR .)
    LPAREN          reduce using rule 88 (signoconect -> OR .)
    IDCHAR          reduce using rule 88 (signoconect -> OR .)
    IDSTRING        reduce using rule 88 (signoconect -> OR .)
    INTTYPE         reduce using rule 88 (signoconect -> OR .)
    NINTTYPE        reduce using rule 88 (signoconect -> OR .)
    FLOATTYPE       reduce using rule 88 (signoconect -> OR .)


state 42

    (5) asignacion -> LET ID . IGUAL valorPam ENDCHAR

    IGUAL           shift and go to state 68


state 43

    (55) asignacion -> LET MUT . ID IGUAL valorPam ENDCHAR
    (56) asignacion -> LET MUT . ID IGUAL estructuras ENDCHAR
    (57) asignacion -> LET MUT . ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (73) linkedlist -> LET MUT . ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    ID              shift and go to state 69


state 44

    (25) asignacion -> CONST ID . COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> CONST ID . COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> CONST ID . COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> CONST ID . COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> CONST ID . COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> CONST ID . COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> CONST ID . COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> CONST ID . COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> CONST ID . COLON CHAR IGUAL IDCHAR ENDCHAR

    COLON           shift and go to state 70


state 45

    (36) comparacion -> INTTYPE signocompar . INTTYPE

    INTTYPE         shift and go to state 71


state 46

    (37) comparacion -> NINTTYPE signocompar . NINTTYPE

    NINTTYPE        shift and go to state 72


state 47

    (38) comparacion -> FLOATTYPE signocompar . FLOATTYPE

    FLOATTYPE       shift and go to state 73


state 48

    (31) comparacion -> IDSTRING signocompar . IDSTRING

    IDSTRING        shift and go to state 74


state 49

    (42) comparacion -> boolean signocompar . boolean
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    boolean                        shift and go to state 75

state 50

    (74) conectores -> boolean signoconect . boolean
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    boolean                        shift and go to state 76

state 51

    (30) comparacion -> IDCHAR signocompar . IDCHAR

    IDCHAR          shift and go to state 77


state 52

    (102) impresion -> PRINTLN LPAREN . valor RPAREN ENDCHAR
    (43) valor -> . INTTYPE
    (44) valor -> . FLOATTYPE
    (45) valor -> . NINTTYPE
    (46) valor -> . ID
    (47) valor -> . TRUE
    (48) valor -> . FALSE
    (49) valor -> . IDCHAR
    (50) valor -> . IDSTRING

    INTTYPE         shift and go to state 79
    FLOATTYPE       shift and go to state 80
    NINTTYPE        shift and go to state 81
    ID              shift and go to state 82
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    IDCHAR          shift and go to state 85
    IDSTRING        shift and go to state 86

    valor                          shift and go to state 78

state 53

    (93) loop -> LOOP LLLAVE . metodo RLLAVE
    (6) metodo -> . asignacion
    (7) metodo -> . impresion
    (8) metodo -> . comparacion
    (9) metodo -> . linkedlist
    (10) metodo -> . loop
    (11) metodo -> . conectores
    (12) metodo -> . ifblock
    (13) metodo -> . elseifblock
    (14) metodo -> . elseblock
    (15) metodo -> . vectorpush
    (5) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (25) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (55) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (56) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (57) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (102) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (73) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (114) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (112) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (111) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (27) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    LET             shift and go to state 16
    CONST           shift and go to state 17
    PRINTLN         shift and go to state 24
    ID              shift and go to state 15
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LOOP            shift and go to state 25
    EXCLAM          shift and go to state 26
    IF              shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    metodo                         shift and go to state 87
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    vectorpush                     shift and go to state 13
    boolean                        shift and go to state 22

state 54

    (75) conectores -> EXCLAM boolean .

    $end            reduce using rule 75 (conectores -> EXCLAM boolean .)
    RLLAVE          reduce using rule 75 (conectores -> EXCLAM boolean .)
    LET             reduce using rule 75 (conectores -> EXCLAM boolean .)
    CONST           reduce using rule 75 (conectores -> EXCLAM boolean .)
    PRINTLN         reduce using rule 75 (conectores -> EXCLAM boolean .)
    ID              reduce using rule 75 (conectores -> EXCLAM boolean .)
    IDCHAR          reduce using rule 75 (conectores -> EXCLAM boolean .)
    IDSTRING        reduce using rule 75 (conectores -> EXCLAM boolean .)
    INTTYPE         reduce using rule 75 (conectores -> EXCLAM boolean .)
    NINTTYPE        reduce using rule 75 (conectores -> EXCLAM boolean .)
    FLOATTYPE       reduce using rule 75 (conectores -> EXCLAM boolean .)
    LOOP            reduce using rule 75 (conectores -> EXCLAM boolean .)
    EXCLAM          reduce using rule 75 (conectores -> EXCLAM boolean .)
    IF              reduce using rule 75 (conectores -> EXCLAM boolean .)
    TRUE            reduce using rule 75 (conectores -> EXCLAM boolean .)
    FALSE           reduce using rule 75 (conectores -> EXCLAM boolean .)
    ENDCHAR         reduce using rule 75 (conectores -> EXCLAM boolean .)
    RETURN          reduce using rule 75 (conectores -> EXCLAM boolean .)


state 55

    (114) ifblock -> IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (118) ifcondicion -> LPAREN . comparacion RPAREN
    (119) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (120) ifcondicion -> LPAREN . ifcondicion RPAREN
    (107) ifparams -> . ifcondicion
    (108) ifparams -> . boolean
    (109) ifparams -> . ID
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (116) ifcondicion -> . comparacion
    (117) ifcondicion -> . comparacion signoconect ifcondicion
    (118) ifcondicion -> . LPAREN comparacion RPAREN
    (119) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (120) ifcondicion -> . LPAREN ifcondicion RPAREN
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    ID              shift and go to state 59
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LPAREN          shift and go to state 88
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    ifparams                       shift and go to state 89
    comparacion                    shift and go to state 90
    ifcondicion                    shift and go to state 91
    boolean                        shift and go to state 58

state 56

    (115) ifblock -> IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 92


state 57

    (107) ifparams -> ifcondicion .

    LLLAVE          reduce using rule 107 (ifparams -> ifcondicion .)
    ENDCHAR         reduce using rule 107 (ifparams -> ifcondicion .)


state 58

    (108) ifparams -> boolean .
    (42) comparacion -> boolean . signocompar boolean
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    LLLAVE          reduce using rule 108 (ifparams -> boolean .)
    RPAREN          reduce using rule 108 (ifparams -> boolean .)
    ENDCHAR         reduce using rule 108 (ifparams -> boolean .)
    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 49

state 59

    (109) ifparams -> ID .
    (29) comparacion -> ID . signocompar ID
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    LLLAVE          reduce using rule 109 (ifparams -> ID .)
    RPAREN          reduce using rule 109 (ifparams -> ID .)
    ENDCHAR         reduce using rule 109 (ifparams -> ID .)
    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 33

state 60

    (116) ifcondicion -> comparacion .
    (117) ifcondicion -> comparacion . signoconect ifcondicion
    (87) signoconect -> . DAMPERSAND
    (88) signoconect -> . OR

    LLLAVE          reduce using rule 116 (ifcondicion -> comparacion .)
    RPAREN          reduce using rule 116 (ifcondicion -> comparacion .)
    ENDCHAR         reduce using rule 116 (ifcondicion -> comparacion .)
    DAMPERSAND      shift and go to state 40
    OR              shift and go to state 41

    signoconect                    shift and go to state 93

state 61

    (112) elseifblock -> ifblock ELSE IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> ifblock ELSE IF . ifparams LLLAVE cuerpof RLLAVE
    (107) ifparams -> . ifcondicion
    (108) ifparams -> . boolean
    (109) ifparams -> . ID
    (116) ifcondicion -> . comparacion
    (117) ifcondicion -> . comparacion signoconect ifcondicion
    (118) ifcondicion -> . LPAREN comparacion RPAREN
    (119) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (120) ifcondicion -> . LPAREN ifcondicion RPAREN
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean

    LPAREN          shift and go to state 94
    ID              shift and go to state 59
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20

    ifparams                       shift and go to state 95
    ifcondicion                    shift and go to state 57
    boolean                        shift and go to state 58
    comparacion                    shift and go to state 60

state 62

    (110) elseblock -> ifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (6) metodo -> . asignacion
    (7) metodo -> . impresion
    (8) metodo -> . comparacion
    (9) metodo -> . linkedlist
    (10) metodo -> . loop
    (11) metodo -> . conectores
    (12) metodo -> . ifblock
    (13) metodo -> . elseifblock
    (14) metodo -> . elseblock
    (15) metodo -> . vectorpush
    (5) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (25) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (55) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (56) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (57) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (102) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (73) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (114) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (112) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (111) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (27) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    LET             shift and go to state 16
    CONST           shift and go to state 17
    PRINTLN         shift and go to state 24
    ID              shift and go to state 15
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LOOP            shift and go to state 25
    EXCLAM          shift and go to state 26
    IF              shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    ifblock                        shift and go to state 10
    cuerpof                        shift and go to state 96
    metodo                         shift and go to state 97
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    vectorpush                     shift and go to state 13
    boolean                        shift and go to state 22

state 63

    (111) elseblock -> elseifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (6) metodo -> . asignacion
    (7) metodo -> . impresion
    (8) metodo -> . comparacion
    (9) metodo -> . linkedlist
    (10) metodo -> . loop
    (11) metodo -> . conectores
    (12) metodo -> . ifblock
    (13) metodo -> . elseifblock
    (14) metodo -> . elseblock
    (15) metodo -> . vectorpush
    (5) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (25) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (55) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (56) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (57) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (102) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (73) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (114) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (112) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (111) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (27) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    LET             shift and go to state 16
    CONST           shift and go to state 17
    PRINTLN         shift and go to state 24
    ID              shift and go to state 15
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LOOP            shift and go to state 25
    EXCLAM          shift and go to state 26
    IF              shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    elseifblock                    shift and go to state 11
    cuerpof                        shift and go to state 98
    metodo                         shift and go to state 97
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseblock                      shift and go to state 12
    vectorpush                     shift and go to state 13
    boolean                        shift and go to state 22

state 64

    (101) funcion -> FN ID LPAREN . params RPAREN LLLAVE metodo RLLAVE
    (121) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (122) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (99) params -> . ID COLON datatype
    (100) params -> . ID COLON datatype COMA params

    ID              shift and go to state 99

    params                         shift and go to state 100

state 65

    (29) comparacion -> ID signocompar ID .

    $end            reduce using rule 29 (comparacion -> ID signocompar ID .)
    DAMPERSAND      reduce using rule 29 (comparacion -> ID signocompar ID .)
    OR              reduce using rule 29 (comparacion -> ID signocompar ID .)
    LLLAVE          reduce using rule 29 (comparacion -> ID signocompar ID .)
    RLLAVE          reduce using rule 29 (comparacion -> ID signocompar ID .)
    RPAREN          reduce using rule 29 (comparacion -> ID signocompar ID .)
    LET             reduce using rule 29 (comparacion -> ID signocompar ID .)
    CONST           reduce using rule 29 (comparacion -> ID signocompar ID .)
    PRINTLN         reduce using rule 29 (comparacion -> ID signocompar ID .)
    ID              reduce using rule 29 (comparacion -> ID signocompar ID .)
    IDCHAR          reduce using rule 29 (comparacion -> ID signocompar ID .)
    IDSTRING        reduce using rule 29 (comparacion -> ID signocompar ID .)
    INTTYPE         reduce using rule 29 (comparacion -> ID signocompar ID .)
    NINTTYPE        reduce using rule 29 (comparacion -> ID signocompar ID .)
    FLOATTYPE       reduce using rule 29 (comparacion -> ID signocompar ID .)
    LOOP            reduce using rule 29 (comparacion -> ID signocompar ID .)
    EXCLAM          reduce using rule 29 (comparacion -> ID signocompar ID .)
    IF              reduce using rule 29 (comparacion -> ID signocompar ID .)
    TRUE            reduce using rule 29 (comparacion -> ID signocompar ID .)
    FALSE           reduce using rule 29 (comparacion -> ID signocompar ID .)
    ENDCHAR         reduce using rule 29 (comparacion -> ID signocompar ID .)
    RETURN          reduce using rule 29 (comparacion -> ID signocompar ID .)


state 66

    (76) conectores -> ID signoconect ID .

    $end            reduce using rule 76 (conectores -> ID signoconect ID .)
    RLLAVE          reduce using rule 76 (conectores -> ID signoconect ID .)
    LET             reduce using rule 76 (conectores -> ID signoconect ID .)
    CONST           reduce using rule 76 (conectores -> ID signoconect ID .)
    PRINTLN         reduce using rule 76 (conectores -> ID signoconect ID .)
    ID              reduce using rule 76 (conectores -> ID signoconect ID .)
    IDCHAR          reduce using rule 76 (conectores -> ID signoconect ID .)
    IDSTRING        reduce using rule 76 (conectores -> ID signoconect ID .)
    INTTYPE         reduce using rule 76 (conectores -> ID signoconect ID .)
    NINTTYPE        reduce using rule 76 (conectores -> ID signoconect ID .)
    FLOATTYPE       reduce using rule 76 (conectores -> ID signoconect ID .)
    LOOP            reduce using rule 76 (conectores -> ID signoconect ID .)
    EXCLAM          reduce using rule 76 (conectores -> ID signoconect ID .)
    IF              reduce using rule 76 (conectores -> ID signoconect ID .)
    TRUE            reduce using rule 76 (conectores -> ID signoconect ID .)
    FALSE           reduce using rule 76 (conectores -> ID signoconect ID .)
    ENDCHAR         reduce using rule 76 (conectores -> ID signoconect ID .)
    RETURN          reduce using rule 76 (conectores -> ID signoconect ID .)


state 67

    (27) vectorpush -> ID POINT PUSH . LPAREN INTTYPE RPAREN ENDCHAR

    LPAREN          shift and go to state 101


state 68

    (5) asignacion -> LET ID IGUAL . valorPam ENDCHAR
    (16) valorPam -> . valornumerico
    (17) valorPam -> . TRUE
    (18) valorPam -> . FALSE
    (19) valorPam -> . ID
    (20) valorPam -> . IDCHAR
    (21) valorPam -> . IDSTRING
    (22) valorPam -> . expresion
    (23) valorPam -> . conectores
    (24) valorPam -> . comparacion
    (63) valornumerico -> . NINTTYPE
    (64) valornumerico -> . INTTYPE
    (65) valornumerico -> . FLOATTYPE
    (66) valornumerico -> . NFLOATTYPE
    (58) expresion -> . valornumerico signo valornumerico
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    ID              shift and go to state 102
    IDCHAR          shift and go to state 107
    IDSTRING        shift and go to state 108
    NINTTYPE        shift and go to state 112
    INTTYPE         shift and go to state 113
    FLOATTYPE       shift and go to state 114
    NFLOATTYPE      shift and go to state 115
    EXCLAM          shift and go to state 26

    valorPam                       shift and go to state 103
    valornumerico                  shift and go to state 104
    expresion                      shift and go to state 109
    conectores                     shift and go to state 110
    comparacion                    shift and go to state 111
    boolean                        shift and go to state 116

state 69

    (55) asignacion -> LET MUT ID . IGUAL valorPam ENDCHAR
    (56) asignacion -> LET MUT ID . IGUAL estructuras ENDCHAR
    (57) asignacion -> LET MUT ID . IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (73) linkedlist -> LET MUT ID . IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    IGUAL           shift and go to state 117


state 70

    (25) asignacion -> CONST ID COLON . intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> CONST ID COLON . intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> CONST ID COLON . uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> CONST ID COLON . floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> CONST ID COLON . strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> CONST ID COLON . STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> CONST ID COLON . STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> CONST ID COLON . BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> CONST ID COLON . CHAR IGUAL IDCHAR ENDCHAR
    (82) intsize -> . INT8
    (83) intsize -> . INT16
    (84) intsize -> . INT32
    (85) intsize -> . INT64
    (86) intsize -> . INT128
    (94) uintsize -> . UINT8
    (95) uintsize -> . UINT16
    (96) uintsize -> . UINT32
    (97) uintsize -> . UINT64
    (98) uintsize -> . UINT128
    (91) floatsize -> . FLOAT32
    (92) floatsize -> . FLOAT64
    (103) strsize -> . AMPERSAND COMILLA STATIC STR
    (104) strsize -> . AMPERSAND STR

    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    CHAR            shift and go to state 124
    INT8            shift and go to state 125
    INT16           shift and go to state 126
    INT32           shift and go to state 127
    INT64           shift and go to state 128
    INT128          shift and go to state 129
    UINT8           shift and go to state 130
    UINT16          shift and go to state 131
    UINT32          shift and go to state 132
    UINT64          shift and go to state 133
    UINT128         shift and go to state 134
    FLOAT32         shift and go to state 135
    FLOAT64         shift and go to state 136
    AMPERSAND       shift and go to state 137

    intsize                        shift and go to state 118
    uintsize                       shift and go to state 119
    floatsize                      shift and go to state 120
    strsize                        shift and go to state 121

state 71

    (36) comparacion -> INTTYPE signocompar INTTYPE .

    $end            reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    DAMPERSAND      reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    OR              reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    LLLAVE          reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    RLLAVE          reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    RPAREN          reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    LET             reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    CONST           reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    PRINTLN         reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    ID              reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    IDCHAR          reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    IDSTRING        reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    INTTYPE         reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    NINTTYPE        reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    FLOATTYPE       reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    LOOP            reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    EXCLAM          reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    IF              reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    TRUE            reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    FALSE           reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    ENDCHAR         reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    RETURN          reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)


state 72

    (37) comparacion -> NINTTYPE signocompar NINTTYPE .

    $end            reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    DAMPERSAND      reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    OR              reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    LLLAVE          reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    RLLAVE          reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    RPAREN          reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    LET             reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    CONST           reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    PRINTLN         reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    ID              reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    IDCHAR          reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    IDSTRING        reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    INTTYPE         reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    NINTTYPE        reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    FLOATTYPE       reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    LOOP            reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    EXCLAM          reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    IF              reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    TRUE            reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    FALSE           reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    ENDCHAR         reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    RETURN          reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)


state 73

    (38) comparacion -> FLOATTYPE signocompar FLOATTYPE .

    $end            reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    DAMPERSAND      reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    OR              reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    LLLAVE          reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    RLLAVE          reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    RPAREN          reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    LET             reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    CONST           reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    PRINTLN         reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    ID              reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    IDCHAR          reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    IDSTRING        reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    INTTYPE         reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    NINTTYPE        reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    FLOATTYPE       reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    LOOP            reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    EXCLAM          reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    IF              reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    TRUE            reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    FALSE           reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    ENDCHAR         reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    RETURN          reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)


state 74

    (31) comparacion -> IDSTRING signocompar IDSTRING .

    $end            reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    DAMPERSAND      reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    OR              reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    LLLAVE          reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    RLLAVE          reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    RPAREN          reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    LET             reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    CONST           reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    PRINTLN         reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    ID              reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    IDCHAR          reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    IDSTRING        reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    INTTYPE         reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    NINTTYPE        reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    FLOATTYPE       reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    LOOP            reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    EXCLAM          reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    IF              reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    TRUE            reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    FALSE           reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    ENDCHAR         reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    RETURN          reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)


state 75

    (42) comparacion -> boolean signocompar boolean .

    $end            reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    DAMPERSAND      reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    OR              reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    LLLAVE          reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    RLLAVE          reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    RPAREN          reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    LET             reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    CONST           reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    PRINTLN         reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    ID              reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    IDCHAR          reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    IDSTRING        reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    INTTYPE         reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    NINTTYPE        reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    FLOATTYPE       reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    LOOP            reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    EXCLAM          reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    IF              reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    TRUE            reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    FALSE           reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    ENDCHAR         reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    RETURN          reduce using rule 42 (comparacion -> boolean signocompar boolean .)


state 76

    (74) conectores -> boolean signoconect boolean .

    $end            reduce using rule 74 (conectores -> boolean signoconect boolean .)
    RLLAVE          reduce using rule 74 (conectores -> boolean signoconect boolean .)
    LET             reduce using rule 74 (conectores -> boolean signoconect boolean .)
    CONST           reduce using rule 74 (conectores -> boolean signoconect boolean .)
    PRINTLN         reduce using rule 74 (conectores -> boolean signoconect boolean .)
    ID              reduce using rule 74 (conectores -> boolean signoconect boolean .)
    IDCHAR          reduce using rule 74 (conectores -> boolean signoconect boolean .)
    IDSTRING        reduce using rule 74 (conectores -> boolean signoconect boolean .)
    INTTYPE         reduce using rule 74 (conectores -> boolean signoconect boolean .)
    NINTTYPE        reduce using rule 74 (conectores -> boolean signoconect boolean .)
    FLOATTYPE       reduce using rule 74 (conectores -> boolean signoconect boolean .)
    LOOP            reduce using rule 74 (conectores -> boolean signoconect boolean .)
    EXCLAM          reduce using rule 74 (conectores -> boolean signoconect boolean .)
    IF              reduce using rule 74 (conectores -> boolean signoconect boolean .)
    TRUE            reduce using rule 74 (conectores -> boolean signoconect boolean .)
    FALSE           reduce using rule 74 (conectores -> boolean signoconect boolean .)
    ENDCHAR         reduce using rule 74 (conectores -> boolean signoconect boolean .)
    RETURN          reduce using rule 74 (conectores -> boolean signoconect boolean .)


state 77

    (30) comparacion -> IDCHAR signocompar IDCHAR .

    $end            reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    DAMPERSAND      reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    OR              reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    LLLAVE          reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    RLLAVE          reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    RPAREN          reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    LET             reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    CONST           reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    PRINTLN         reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    ID              reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    IDCHAR          reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    IDSTRING        reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    INTTYPE         reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    NINTTYPE        reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    FLOATTYPE       reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    LOOP            reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    EXCLAM          reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    IF              reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    TRUE            reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    FALSE           reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    ENDCHAR         reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    RETURN          reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)


state 78

    (102) impresion -> PRINTLN LPAREN valor . RPAREN ENDCHAR

    RPAREN          shift and go to state 138


state 79

    (43) valor -> INTTYPE .

    RPAREN          reduce using rule 43 (valor -> INTTYPE .)


state 80

    (44) valor -> FLOATTYPE .

    RPAREN          reduce using rule 44 (valor -> FLOATTYPE .)


state 81

    (45) valor -> NINTTYPE .

    RPAREN          reduce using rule 45 (valor -> NINTTYPE .)


state 82

    (46) valor -> ID .

    RPAREN          reduce using rule 46 (valor -> ID .)


state 83

    (47) valor -> TRUE .

    RPAREN          reduce using rule 47 (valor -> TRUE .)


state 84

    (48) valor -> FALSE .

    RPAREN          reduce using rule 48 (valor -> FALSE .)


state 85

    (49) valor -> IDCHAR .

    RPAREN          reduce using rule 49 (valor -> IDCHAR .)


state 86

    (50) valor -> IDSTRING .

    RPAREN          reduce using rule 50 (valor -> IDSTRING .)


state 87

    (93) loop -> LOOP LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 139


state 88

    (118) ifcondicion -> LPAREN . comparacion RPAREN
    (119) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (120) ifcondicion -> LPAREN . ifcondicion RPAREN
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (116) ifcondicion -> . comparacion
    (117) ifcondicion -> . comparacion signoconect ifcondicion
    (118) ifcondicion -> . LPAREN comparacion RPAREN
    (119) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (120) ifcondicion -> . LPAREN ifcondicion RPAREN
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    ID              shift and go to state 141
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LPAREN          shift and go to state 88
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    comparacion                    shift and go to state 90
    ifcondicion                    shift and go to state 140
    boolean                        shift and go to state 142

state 89

    (114) ifblock -> IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 143


state 90

    (118) ifcondicion -> LPAREN comparacion . RPAREN
    (119) ifcondicion -> LPAREN comparacion . RPAREN signoconect ifcondicion
    (116) ifcondicion -> comparacion .
    (117) ifcondicion -> comparacion . signoconect ifcondicion
    (87) signoconect -> . DAMPERSAND
    (88) signoconect -> . OR

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 144
    DAMPERSAND      shift and go to state 40
    OR              shift and go to state 41

  ! RPAREN          [ reduce using rule 116 (ifcondicion -> comparacion .) ]

    signoconect                    shift and go to state 93

state 91

    (120) ifcondicion -> LPAREN ifcondicion . RPAREN
    (107) ifparams -> ifcondicion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 145

  ! RPAREN          [ reduce using rule 107 (ifparams -> ifcondicion .) ]


state 92

    (115) ifblock -> IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (6) metodo -> . asignacion
    (7) metodo -> . impresion
    (8) metodo -> . comparacion
    (9) metodo -> . linkedlist
    (10) metodo -> . loop
    (11) metodo -> . conectores
    (12) metodo -> . ifblock
    (13) metodo -> . elseifblock
    (14) metodo -> . elseblock
    (15) metodo -> . vectorpush
    (5) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (25) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (55) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (56) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (57) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (102) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (73) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (114) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (112) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (111) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (27) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    LET             shift and go to state 16
    CONST           shift and go to state 17
    PRINTLN         shift and go to state 24
    ID              shift and go to state 15
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LOOP            shift and go to state 25
    EXCLAM          shift and go to state 26
    IF              shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    cuerpof                        shift and go to state 146
    metodo                         shift and go to state 97
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    vectorpush                     shift and go to state 13
    boolean                        shift and go to state 22

state 93

    (117) ifcondicion -> comparacion signoconect . ifcondicion
    (116) ifcondicion -> . comparacion
    (117) ifcondicion -> . comparacion signoconect ifcondicion
    (118) ifcondicion -> . LPAREN comparacion RPAREN
    (119) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (120) ifcondicion -> . LPAREN ifcondicion RPAREN
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    LPAREN          shift and go to state 88
    ID              shift and go to state 141
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    comparacion                    shift and go to state 60
    ifcondicion                    shift and go to state 147
    boolean                        shift and go to state 142

state 94

    (112) elseifblock -> ifblock ELSE IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (118) ifcondicion -> LPAREN . comparacion RPAREN
    (119) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (120) ifcondicion -> LPAREN . ifcondicion RPAREN
    (107) ifparams -> . ifcondicion
    (108) ifparams -> . boolean
    (109) ifparams -> . ID
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (116) ifcondicion -> . comparacion
    (117) ifcondicion -> . comparacion signoconect ifcondicion
    (118) ifcondicion -> . LPAREN comparacion RPAREN
    (119) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (120) ifcondicion -> . LPAREN ifcondicion RPAREN
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    ID              shift and go to state 59
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LPAREN          shift and go to state 88
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    ifparams                       shift and go to state 148
    comparacion                    shift and go to state 90
    ifcondicion                    shift and go to state 91
    boolean                        shift and go to state 58

state 95

    (113) elseifblock -> ifblock ELSE IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 149


state 96

    (110) elseblock -> ifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 150


state 97

    (3) cuerpof -> metodo .
    (4) cuerpof -> metodo . cuerpof
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (6) metodo -> . asignacion
    (7) metodo -> . impresion
    (8) metodo -> . comparacion
    (9) metodo -> . linkedlist
    (10) metodo -> . loop
    (11) metodo -> . conectores
    (12) metodo -> . ifblock
    (13) metodo -> . elseifblock
    (14) metodo -> . elseblock
    (15) metodo -> . vectorpush
    (5) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (25) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (55) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (56) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (57) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (102) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (73) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (114) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (112) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (111) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (27) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          reduce using rule 3 (cuerpof -> metodo .)
    RETURN          reduce using rule 3 (cuerpof -> metodo .)
    LET             shift and go to state 16
    CONST           shift and go to state 17
    PRINTLN         shift and go to state 24
    ID              shift and go to state 15
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LOOP            shift and go to state 25
    EXCLAM          shift and go to state 26
    IF              shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

  ! ID              [ reduce using rule 3 (cuerpof -> metodo .) ]

    metodo                         shift and go to state 97
    cuerpof                        shift and go to state 151
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    vectorpush                     shift and go to state 13
    boolean                        shift and go to state 22

state 98

    (111) elseblock -> elseifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 152


state 99

    (99) params -> ID . COLON datatype
    (100) params -> ID . COLON datatype COMA params

    COLON           shift and go to state 153


state 100

    (101) funcion -> FN ID LPAREN params . RPAREN LLLAVE metodo RLLAVE
    (121) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (122) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    RPAREN          shift and go to state 154


state 101

    (27) vectorpush -> ID POINT PUSH LPAREN . INTTYPE RPAREN ENDCHAR

    INTTYPE         shift and go to state 155


state 102

    (19) valorPam -> ID .
    (76) conectores -> ID . signoconect ID
    (29) comparacion -> ID . signocompar ID
    (87) signoconect -> . DAMPERSAND
    (88) signoconect -> . OR
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 19 (valorPam -> ID .)
    DAMPERSAND      shift and go to state 40
    OR              shift and go to state 41
    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signoconect                    shift and go to state 34
    signocompar                    shift and go to state 33

state 103

    (5) asignacion -> LET ID IGUAL valorPam . ENDCHAR

    ENDCHAR         shift and go to state 156


state 104

    (16) valorPam -> valornumerico .
    (58) expresion -> valornumerico . signo valornumerico
    (77) signo -> . PLUS
    (78) signo -> . TIMES
    (79) signo -> . MINUS
    (80) signo -> . PORCENTAJE
    (81) signo -> . DIVIDE

    ENDCHAR         reduce using rule 16 (valorPam -> valornumerico .)
    PLUS            shift and go to state 158
    TIMES           shift and go to state 159
    MINUS           shift and go to state 160
    PORCENTAJE      shift and go to state 161
    DIVIDE          shift and go to state 162

    signo                          shift and go to state 157

state 105

    (17) valorPam -> TRUE .
    (105) boolean -> TRUE .

    ENDCHAR         reduce using rule 17 (valorPam -> TRUE .)
    DAMPERSAND      reduce using rule 105 (boolean -> TRUE .)
    OR              reduce using rule 105 (boolean -> TRUE .)
    MAYORQUE        reduce using rule 105 (boolean -> TRUE .)
    MENORQUE        reduce using rule 105 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 105 (boolean -> TRUE .)
    IDENTICO        reduce using rule 105 (boolean -> TRUE .)


state 106

    (18) valorPam -> FALSE .
    (106) boolean -> FALSE .

    ENDCHAR         reduce using rule 18 (valorPam -> FALSE .)
    DAMPERSAND      reduce using rule 106 (boolean -> FALSE .)
    OR              reduce using rule 106 (boolean -> FALSE .)
    MAYORQUE        reduce using rule 106 (boolean -> FALSE .)
    MENORQUE        reduce using rule 106 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 106 (boolean -> FALSE .)
    IDENTICO        reduce using rule 106 (boolean -> FALSE .)


state 107

    (20) valorPam -> IDCHAR .
    (30) comparacion -> IDCHAR . signocompar IDCHAR
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 20 (valorPam -> IDCHAR .)
    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 51

state 108

    (21) valorPam -> IDSTRING .
    (31) comparacion -> IDSTRING . signocompar IDSTRING
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 21 (valorPam -> IDSTRING .)
    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 48

state 109

    (22) valorPam -> expresion .

    ENDCHAR         reduce using rule 22 (valorPam -> expresion .)


state 110

    (23) valorPam -> conectores .

    ENDCHAR         reduce using rule 23 (valorPam -> conectores .)


state 111

    (24) valorPam -> comparacion .

    ENDCHAR         reduce using rule 24 (valorPam -> comparacion .)


state 112

    (63) valornumerico -> NINTTYPE .
    (37) comparacion -> NINTTYPE . signocompar NINTTYPE
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    PLUS            reduce using rule 63 (valornumerico -> NINTTYPE .)
    TIMES           reduce using rule 63 (valornumerico -> NINTTYPE .)
    MINUS           reduce using rule 63 (valornumerico -> NINTTYPE .)
    PORCENTAJE      reduce using rule 63 (valornumerico -> NINTTYPE .)
    DIVIDE          reduce using rule 63 (valornumerico -> NINTTYPE .)
    ENDCHAR         reduce using rule 63 (valornumerico -> NINTTYPE .)
    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 46

state 113

    (64) valornumerico -> INTTYPE .
    (36) comparacion -> INTTYPE . signocompar INTTYPE
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    PLUS            reduce using rule 64 (valornumerico -> INTTYPE .)
    TIMES           reduce using rule 64 (valornumerico -> INTTYPE .)
    MINUS           reduce using rule 64 (valornumerico -> INTTYPE .)
    PORCENTAJE      reduce using rule 64 (valornumerico -> INTTYPE .)
    DIVIDE          reduce using rule 64 (valornumerico -> INTTYPE .)
    ENDCHAR         reduce using rule 64 (valornumerico -> INTTYPE .)
    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 45

state 114

    (65) valornumerico -> FLOATTYPE .
    (38) comparacion -> FLOATTYPE . signocompar FLOATTYPE
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    PLUS            reduce using rule 65 (valornumerico -> FLOATTYPE .)
    TIMES           reduce using rule 65 (valornumerico -> FLOATTYPE .)
    MINUS           reduce using rule 65 (valornumerico -> FLOATTYPE .)
    PORCENTAJE      reduce using rule 65 (valornumerico -> FLOATTYPE .)
    DIVIDE          reduce using rule 65 (valornumerico -> FLOATTYPE .)
    ENDCHAR         reduce using rule 65 (valornumerico -> FLOATTYPE .)
    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 47

state 115

    (66) valornumerico -> NFLOATTYPE .

    PLUS            reduce using rule 66 (valornumerico -> NFLOATTYPE .)
    TIMES           reduce using rule 66 (valornumerico -> NFLOATTYPE .)
    MINUS           reduce using rule 66 (valornumerico -> NFLOATTYPE .)
    PORCENTAJE      reduce using rule 66 (valornumerico -> NFLOATTYPE .)
    DIVIDE          reduce using rule 66 (valornumerico -> NFLOATTYPE .)
    ENDCHAR         reduce using rule 66 (valornumerico -> NFLOATTYPE .)


state 116

    (74) conectores -> boolean . signoconect boolean
    (42) comparacion -> boolean . signocompar boolean
    (87) signoconect -> . DAMPERSAND
    (88) signoconect -> . OR
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    DAMPERSAND      shift and go to state 40
    OR              shift and go to state 41
    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signoconect                    shift and go to state 50
    signocompar                    shift and go to state 49

state 117

    (55) asignacion -> LET MUT ID IGUAL . valorPam ENDCHAR
    (56) asignacion -> LET MUT ID IGUAL . estructuras ENDCHAR
    (57) asignacion -> LET MUT ID IGUAL . VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (73) linkedlist -> LET MUT ID IGUAL . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (16) valorPam -> . valornumerico
    (17) valorPam -> . TRUE
    (18) valorPam -> . FALSE
    (19) valorPam -> . ID
    (20) valorPam -> . IDCHAR
    (21) valorPam -> . IDSTRING
    (22) valorPam -> . expresion
    (23) valorPam -> . conectores
    (24) valorPam -> . comparacion
    (33) estructuras -> . linkedlist
    (34) estructuras -> . hashmap
    (63) valornumerico -> . NINTTYPE
    (64) valornumerico -> . INTTYPE
    (65) valornumerico -> . FLOATTYPE
    (66) valornumerico -> . NFLOATTYPE
    (58) expresion -> . valornumerico signo valornumerico
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (73) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (52) hashmap -> . HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    VEC             shift and go to state 166
    LINKEDLIST      shift and go to state 167
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    ID              shift and go to state 102
    IDCHAR          shift and go to state 107
    IDSTRING        shift and go to state 108
    NINTTYPE        shift and go to state 112
    INTTYPE         shift and go to state 113
    FLOATTYPE       shift and go to state 114
    NFLOATTYPE      shift and go to state 115
    EXCLAM          shift and go to state 26
    LET             shift and go to state 163
    HASHMAP         shift and go to state 170

    valorPam                       shift and go to state 164
    estructuras                    shift and go to state 165
    valornumerico                  shift and go to state 104
    expresion                      shift and go to state 109
    conectores                     shift and go to state 110
    comparacion                    shift and go to state 111
    linkedlist                     shift and go to state 168
    hashmap                        shift and go to state 169
    boolean                        shift and go to state 116

state 118

    (25) asignacion -> CONST ID COLON intsize . IGUAL INTTYPE ENDCHAR
    (26) asignacion -> CONST ID COLON intsize . IGUAL NINTTYPE ENDCHAR

    IGUAL           shift and go to state 171


state 119

    (28) asignacion -> CONST ID COLON uintsize . IGUAL INTTYPE ENDCHAR

    IGUAL           shift and go to state 172


state 120

    (32) asignacion -> CONST ID COLON floatsize . IGUAL FLOATTYPE ENDCHAR

    IGUAL           shift and go to state 173


state 121

    (35) asignacion -> CONST ID COLON strsize . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 174


state 122

    (39) asignacion -> CONST ID COLON STRING . IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> CONST ID COLON STRING . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 175


state 123

    (51) asignacion -> CONST ID COLON BOOL . IGUAL boolean ENDCHAR

    IGUAL           shift and go to state 176


state 124

    (53) asignacion -> CONST ID COLON CHAR . IGUAL IDCHAR ENDCHAR

    IGUAL           shift and go to state 177


state 125

    (82) intsize -> INT8 .

    IGUAL           reduce using rule 82 (intsize -> INT8 .)
    COMA            reduce using rule 82 (intsize -> INT8 .)
    RPAREN          reduce using rule 82 (intsize -> INT8 .)
    LLLAVE          reduce using rule 82 (intsize -> INT8 .)


state 126

    (83) intsize -> INT16 .

    IGUAL           reduce using rule 83 (intsize -> INT16 .)
    COMA            reduce using rule 83 (intsize -> INT16 .)
    RPAREN          reduce using rule 83 (intsize -> INT16 .)
    LLLAVE          reduce using rule 83 (intsize -> INT16 .)


state 127

    (84) intsize -> INT32 .

    IGUAL           reduce using rule 84 (intsize -> INT32 .)
    COMA            reduce using rule 84 (intsize -> INT32 .)
    RPAREN          reduce using rule 84 (intsize -> INT32 .)
    LLLAVE          reduce using rule 84 (intsize -> INT32 .)


state 128

    (85) intsize -> INT64 .

    IGUAL           reduce using rule 85 (intsize -> INT64 .)
    COMA            reduce using rule 85 (intsize -> INT64 .)
    RPAREN          reduce using rule 85 (intsize -> INT64 .)
    LLLAVE          reduce using rule 85 (intsize -> INT64 .)


state 129

    (86) intsize -> INT128 .

    IGUAL           reduce using rule 86 (intsize -> INT128 .)
    COMA            reduce using rule 86 (intsize -> INT128 .)
    RPAREN          reduce using rule 86 (intsize -> INT128 .)
    LLLAVE          reduce using rule 86 (intsize -> INT128 .)


state 130

    (94) uintsize -> UINT8 .

    IGUAL           reduce using rule 94 (uintsize -> UINT8 .)
    COMA            reduce using rule 94 (uintsize -> UINT8 .)
    RPAREN          reduce using rule 94 (uintsize -> UINT8 .)
    LLLAVE          reduce using rule 94 (uintsize -> UINT8 .)


state 131

    (95) uintsize -> UINT16 .

    IGUAL           reduce using rule 95 (uintsize -> UINT16 .)
    COMA            reduce using rule 95 (uintsize -> UINT16 .)
    RPAREN          reduce using rule 95 (uintsize -> UINT16 .)
    LLLAVE          reduce using rule 95 (uintsize -> UINT16 .)


state 132

    (96) uintsize -> UINT32 .

    IGUAL           reduce using rule 96 (uintsize -> UINT32 .)
    COMA            reduce using rule 96 (uintsize -> UINT32 .)
    RPAREN          reduce using rule 96 (uintsize -> UINT32 .)
    LLLAVE          reduce using rule 96 (uintsize -> UINT32 .)


state 133

    (97) uintsize -> UINT64 .

    IGUAL           reduce using rule 97 (uintsize -> UINT64 .)
    COMA            reduce using rule 97 (uintsize -> UINT64 .)
    RPAREN          reduce using rule 97 (uintsize -> UINT64 .)
    LLLAVE          reduce using rule 97 (uintsize -> UINT64 .)


state 134

    (98) uintsize -> UINT128 .

    IGUAL           reduce using rule 98 (uintsize -> UINT128 .)
    COMA            reduce using rule 98 (uintsize -> UINT128 .)
    RPAREN          reduce using rule 98 (uintsize -> UINT128 .)
    LLLAVE          reduce using rule 98 (uintsize -> UINT128 .)


state 135

    (91) floatsize -> FLOAT32 .

    IGUAL           reduce using rule 91 (floatsize -> FLOAT32 .)
    COMA            reduce using rule 91 (floatsize -> FLOAT32 .)
    RPAREN          reduce using rule 91 (floatsize -> FLOAT32 .)
    LLLAVE          reduce using rule 91 (floatsize -> FLOAT32 .)


state 136

    (92) floatsize -> FLOAT64 .

    IGUAL           reduce using rule 92 (floatsize -> FLOAT64 .)
    COMA            reduce using rule 92 (floatsize -> FLOAT64 .)
    RPAREN          reduce using rule 92 (floatsize -> FLOAT64 .)
    LLLAVE          reduce using rule 92 (floatsize -> FLOAT64 .)


state 137

    (103) strsize -> AMPERSAND . COMILLA STATIC STR
    (104) strsize -> AMPERSAND . STR

    COMILLA         shift and go to state 178
    STR             shift and go to state 179


state 138

    (102) impresion -> PRINTLN LPAREN valor RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 180


state 139

    (93) loop -> LOOP LLLAVE metodo RLLAVE .

    $end            reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RLLAVE          reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LET             reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    CONST           reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    PRINTLN         reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    ID              reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IDCHAR          reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IDSTRING        reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    INTTYPE         reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    NINTTYPE        reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    FLOATTYPE       reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LOOP            reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    EXCLAM          reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IF              reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    TRUE            reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    FALSE           reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RETURN          reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)


state 140

    (120) ifcondicion -> LPAREN ifcondicion . RPAREN

    RPAREN          shift and go to state 145


state 141

    (29) comparacion -> ID . signocompar ID
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 33

state 142

    (42) comparacion -> boolean . signocompar boolean
    (59) signocompar -> . MAYORQUE
    (60) signocompar -> . MENORQUE
    (61) signocompar -> . DIFERENTE
    (62) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 36
    MENORQUE        shift and go to state 37
    DIFERENTE       shift and go to state 38
    IDENTICO        shift and go to state 39

    signocompar                    shift and go to state 49

state 143

    (114) ifblock -> IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 181


state 144

    (118) ifcondicion -> LPAREN comparacion RPAREN .
    (119) ifcondicion -> LPAREN comparacion RPAREN . signoconect ifcondicion
    (87) signoconect -> . DAMPERSAND
    (88) signoconect -> . OR

    LLLAVE          reduce using rule 118 (ifcondicion -> LPAREN comparacion RPAREN .)
    RPAREN          reduce using rule 118 (ifcondicion -> LPAREN comparacion RPAREN .)
    ENDCHAR         reduce using rule 118 (ifcondicion -> LPAREN comparacion RPAREN .)
    DAMPERSAND      shift and go to state 40
    OR              shift and go to state 41

    signoconect                    shift and go to state 182

state 145

    (120) ifcondicion -> LPAREN ifcondicion RPAREN .

    LLLAVE          reduce using rule 120 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    RPAREN          reduce using rule 120 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    ENDCHAR         reduce using rule 120 (ifcondicion -> LPAREN ifcondicion RPAREN .)


state 146

    (115) ifblock -> IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 183


state 147

    (117) ifcondicion -> comparacion signoconect ifcondicion .

    LLLAVE          reduce using rule 117 (ifcondicion -> comparacion signoconect ifcondicion .)
    RPAREN          reduce using rule 117 (ifcondicion -> comparacion signoconect ifcondicion .)
    ENDCHAR         reduce using rule 117 (ifcondicion -> comparacion signoconect ifcondicion .)


state 148

    (112) elseifblock -> ifblock ELSE IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 184


state 149

    (113) elseifblock -> ifblock ELSE IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (6) metodo -> . asignacion
    (7) metodo -> . impresion
    (8) metodo -> . comparacion
    (9) metodo -> . linkedlist
    (10) metodo -> . loop
    (11) metodo -> . conectores
    (12) metodo -> . ifblock
    (13) metodo -> . elseifblock
    (14) metodo -> . elseblock
    (15) metodo -> . vectorpush
    (5) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (25) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (55) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (56) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (57) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (102) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (73) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (114) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (112) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (111) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (27) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    LET             shift and go to state 16
    CONST           shift and go to state 17
    PRINTLN         shift and go to state 24
    ID              shift and go to state 15
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LOOP            shift and go to state 25
    EXCLAM          shift and go to state 26
    IF              shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    ifblock                        shift and go to state 10
    cuerpof                        shift and go to state 185
    metodo                         shift and go to state 97
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    vectorpush                     shift and go to state 13
    boolean                        shift and go to state 22

state 150

    (110) elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IDCHAR          reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IDSTRING        reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    INTTYPE         reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    NINTTYPE        reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    FLOATTYPE       reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    EXCLAM          reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    TRUE            reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    FALSE           reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 110 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)


state 151

    (4) cuerpof -> metodo cuerpof .

    RLLAVE          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    RETURN          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    ID              reduce using rule 4 (cuerpof -> metodo cuerpof .)


state 152

    (111) elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IDCHAR          reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IDSTRING        reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    INTTYPE         reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    NINTTYPE        reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    FLOATTYPE       reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    EXCLAM          reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    TRUE            reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    FALSE           reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 111 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)


state 153

    (99) params -> ID COLON . datatype
    (100) params -> ID COLON . datatype COMA params
    (67) datatype -> . intsize
    (68) datatype -> . uintsize
    (69) datatype -> . floatsize
    (70) datatype -> . strsize
    (71) datatype -> . STRING
    (72) datatype -> . BOOL
    (82) intsize -> . INT8
    (83) intsize -> . INT16
    (84) intsize -> . INT32
    (85) intsize -> . INT64
    (86) intsize -> . INT128
    (94) uintsize -> . UINT8
    (95) uintsize -> . UINT16
    (96) uintsize -> . UINT32
    (97) uintsize -> . UINT64
    (98) uintsize -> . UINT128
    (91) floatsize -> . FLOAT32
    (92) floatsize -> . FLOAT64
    (103) strsize -> . AMPERSAND COMILLA STATIC STR
    (104) strsize -> . AMPERSAND STR

    STRING          shift and go to state 191
    BOOL            shift and go to state 192
    INT8            shift and go to state 125
    INT16           shift and go to state 126
    INT32           shift and go to state 127
    INT64           shift and go to state 128
    INT128          shift and go to state 129
    UINT8           shift and go to state 130
    UINT16          shift and go to state 131
    UINT32          shift and go to state 132
    UINT64          shift and go to state 133
    UINT128         shift and go to state 134
    FLOAT32         shift and go to state 135
    FLOAT64         shift and go to state 136
    AMPERSAND       shift and go to state 137

    datatype                       shift and go to state 186
    intsize                        shift and go to state 187
    uintsize                       shift and go to state 188
    floatsize                      shift and go to state 189
    strsize                        shift and go to state 190

state 154

    (101) funcion -> FN ID LPAREN params RPAREN . LLLAVE metodo RLLAVE
    (121) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (122) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    LLLAVE          shift and go to state 193
    ARROWOPT        shift and go to state 194


state 155

    (27) vectorpush -> ID POINT PUSH LPAREN INTTYPE . RPAREN ENDCHAR

    RPAREN          shift and go to state 195


state 156

    (5) asignacion -> LET ID IGUAL valorPam ENDCHAR .

    $end            reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    RLLAVE          reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    LET             reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    CONST           reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    PRINTLN         reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    ID              reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    IDCHAR          reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    IDSTRING        reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    INTTYPE         reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    NINTTYPE        reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    FLOATTYPE       reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    LOOP            reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    EXCLAM          reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    IF              reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    TRUE            reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    FALSE           reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    RETURN          reduce using rule 5 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)


state 157

    (58) expresion -> valornumerico signo . valornumerico
    (63) valornumerico -> . NINTTYPE
    (64) valornumerico -> . INTTYPE
    (65) valornumerico -> . FLOATTYPE
    (66) valornumerico -> . NFLOATTYPE

    NINTTYPE        shift and go to state 197
    INTTYPE         shift and go to state 198
    FLOATTYPE       shift and go to state 199
    NFLOATTYPE      shift and go to state 115

    valornumerico                  shift and go to state 196

state 158

    (77) signo -> PLUS .

    NINTTYPE        reduce using rule 77 (signo -> PLUS .)
    INTTYPE         reduce using rule 77 (signo -> PLUS .)
    FLOATTYPE       reduce using rule 77 (signo -> PLUS .)
    NFLOATTYPE      reduce using rule 77 (signo -> PLUS .)


state 159

    (78) signo -> TIMES .

    NINTTYPE        reduce using rule 78 (signo -> TIMES .)
    INTTYPE         reduce using rule 78 (signo -> TIMES .)
    FLOATTYPE       reduce using rule 78 (signo -> TIMES .)
    NFLOATTYPE      reduce using rule 78 (signo -> TIMES .)


state 160

    (79) signo -> MINUS .

    NINTTYPE        reduce using rule 79 (signo -> MINUS .)
    INTTYPE         reduce using rule 79 (signo -> MINUS .)
    FLOATTYPE       reduce using rule 79 (signo -> MINUS .)
    NFLOATTYPE      reduce using rule 79 (signo -> MINUS .)


state 161

    (80) signo -> PORCENTAJE .

    NINTTYPE        reduce using rule 80 (signo -> PORCENTAJE .)
    INTTYPE         reduce using rule 80 (signo -> PORCENTAJE .)
    FLOATTYPE       reduce using rule 80 (signo -> PORCENTAJE .)
    NFLOATTYPE      reduce using rule 80 (signo -> PORCENTAJE .)


state 162

    (81) signo -> DIVIDE .

    NINTTYPE        reduce using rule 81 (signo -> DIVIDE .)
    INTTYPE         reduce using rule 81 (signo -> DIVIDE .)
    FLOATTYPE       reduce using rule 81 (signo -> DIVIDE .)
    NFLOATTYPE      reduce using rule 81 (signo -> DIVIDE .)


state 163

    (73) linkedlist -> LET . MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    MUT             shift and go to state 200


state 164

    (55) asignacion -> LET MUT ID IGUAL valorPam . ENDCHAR

    ENDCHAR         shift and go to state 201


state 165

    (56) asignacion -> LET MUT ID IGUAL estructuras . ENDCHAR

    ENDCHAR         shift and go to state 202


state 166

    (57) asignacion -> LET MUT ID IGUAL VEC . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 203


state 167

    (73) linkedlist -> LET MUT ID IGUAL LINKEDLIST . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 204


state 168

    (33) estructuras -> linkedlist .

    ENDCHAR         reduce using rule 33 (estructuras -> linkedlist .)


state 169

    (34) estructuras -> hashmap .

    ENDCHAR         reduce using rule 34 (estructuras -> hashmap .)


state 170

    (52) hashmap -> HASHMAP . DOSDOBLEPUNTOS NEW LPAREN RPAREN

    DOSDOBLEPUNTOS  shift and go to state 205


state 171

    (25) asignacion -> CONST ID COLON intsize IGUAL . INTTYPE ENDCHAR
    (26) asignacion -> CONST ID COLON intsize IGUAL . NINTTYPE ENDCHAR

    INTTYPE         shift and go to state 206
    NINTTYPE        shift and go to state 207


state 172

    (28) asignacion -> CONST ID COLON uintsize IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 208


state 173

    (32) asignacion -> CONST ID COLON floatsize IGUAL . FLOATTYPE ENDCHAR

    FLOATTYPE       shift and go to state 209


state 174

    (35) asignacion -> CONST ID COLON strsize IGUAL . IDSTRING ENDCHAR

    IDSTRING        shift and go to state 210


state 175

    (39) asignacion -> CONST ID COLON STRING IGUAL . STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> CONST ID COLON STRING IGUAL . IDSTRING ENDCHAR

    STRING          shift and go to state 211
    IDSTRING        shift and go to state 212


state 176

    (51) asignacion -> CONST ID COLON BOOL IGUAL . boolean ENDCHAR
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    boolean                        shift and go to state 213

state 177

    (53) asignacion -> CONST ID COLON CHAR IGUAL . IDCHAR ENDCHAR

    IDCHAR          shift and go to state 214


state 178

    (103) strsize -> AMPERSAND COMILLA . STATIC STR

    STATIC          shift and go to state 215


state 179

    (104) strsize -> AMPERSAND STR .

    IGUAL           reduce using rule 104 (strsize -> AMPERSAND STR .)
    COMA            reduce using rule 104 (strsize -> AMPERSAND STR .)
    RPAREN          reduce using rule 104 (strsize -> AMPERSAND STR .)
    LLLAVE          reduce using rule 104 (strsize -> AMPERSAND STR .)


state 180

    (102) impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .

    $end            reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    LET             reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    CONST           reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    ID              reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    IDCHAR          reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    IDSTRING        reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    INTTYPE         reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    NINTTYPE        reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    FLOATTYPE       reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    LOOP            reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    EXCLAM          reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    IF              reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    TRUE            reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    FALSE           reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    RETURN          reduce using rule 102 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)


state 181

    (114) ifblock -> IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (6) metodo -> . asignacion
    (7) metodo -> . impresion
    (8) metodo -> . comparacion
    (9) metodo -> . linkedlist
    (10) metodo -> . loop
    (11) metodo -> . conectores
    (12) metodo -> . ifblock
    (13) metodo -> . elseifblock
    (14) metodo -> . elseblock
    (15) metodo -> . vectorpush
    (5) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (25) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (55) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (56) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (57) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (102) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (73) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (114) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (112) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (111) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (27) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    LET             shift and go to state 16
    CONST           shift and go to state 17
    PRINTLN         shift and go to state 24
    ID              shift and go to state 15
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LOOP            shift and go to state 25
    EXCLAM          shift and go to state 26
    IF              shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    cuerpof                        shift and go to state 216
    metodo                         shift and go to state 97
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    vectorpush                     shift and go to state 13
    boolean                        shift and go to state 22

state 182

    (119) ifcondicion -> LPAREN comparacion RPAREN signoconect . ifcondicion
    (116) ifcondicion -> . comparacion
    (117) ifcondicion -> . comparacion signoconect ifcondicion
    (118) ifcondicion -> . LPAREN comparacion RPAREN
    (119) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (120) ifcondicion -> . LPAREN ifcondicion RPAREN
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    LPAREN          shift and go to state 88
    ID              shift and go to state 141
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    comparacion                    shift and go to state 60
    ifcondicion                    shift and go to state 217
    boolean                        shift and go to state 142

state 183

    (115) ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IDCHAR          reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IDSTRING        reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    INTTYPE         reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    NINTTYPE        reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    FLOATTYPE       reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    EXCLAM          reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    TRUE            reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    FALSE           reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 115 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)


state 184

    (112) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 218


state 185

    (113) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 219


state 186

    (99) params -> ID COLON datatype .
    (100) params -> ID COLON datatype . COMA params

    RPAREN          reduce using rule 99 (params -> ID COLON datatype .)
    COMA            shift and go to state 220


state 187

    (67) datatype -> intsize .

    COMA            reduce using rule 67 (datatype -> intsize .)
    RPAREN          reduce using rule 67 (datatype -> intsize .)
    LLLAVE          reduce using rule 67 (datatype -> intsize .)


state 188

    (68) datatype -> uintsize .

    COMA            reduce using rule 68 (datatype -> uintsize .)
    RPAREN          reduce using rule 68 (datatype -> uintsize .)
    LLLAVE          reduce using rule 68 (datatype -> uintsize .)


state 189

    (69) datatype -> floatsize .

    COMA            reduce using rule 69 (datatype -> floatsize .)
    RPAREN          reduce using rule 69 (datatype -> floatsize .)
    LLLAVE          reduce using rule 69 (datatype -> floatsize .)


state 190

    (70) datatype -> strsize .

    COMA            reduce using rule 70 (datatype -> strsize .)
    RPAREN          reduce using rule 70 (datatype -> strsize .)
    LLLAVE          reduce using rule 70 (datatype -> strsize .)


state 191

    (71) datatype -> STRING .

    COMA            reduce using rule 71 (datatype -> STRING .)
    RPAREN          reduce using rule 71 (datatype -> STRING .)
    LLLAVE          reduce using rule 71 (datatype -> STRING .)


state 192

    (72) datatype -> BOOL .

    COMA            reduce using rule 72 (datatype -> BOOL .)
    RPAREN          reduce using rule 72 (datatype -> BOOL .)
    LLLAVE          reduce using rule 72 (datatype -> BOOL .)


state 193

    (101) funcion -> FN ID LPAREN params RPAREN LLLAVE . metodo RLLAVE
    (6) metodo -> . asignacion
    (7) metodo -> . impresion
    (8) metodo -> . comparacion
    (9) metodo -> . linkedlist
    (10) metodo -> . loop
    (11) metodo -> . conectores
    (12) metodo -> . ifblock
    (13) metodo -> . elseifblock
    (14) metodo -> . elseblock
    (15) metodo -> . vectorpush
    (5) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (25) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (55) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (56) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (57) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (102) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (73) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (114) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (112) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (111) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (27) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    LET             shift and go to state 16
    CONST           shift and go to state 17
    PRINTLN         shift and go to state 24
    ID              shift and go to state 15
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LOOP            shift and go to state 25
    EXCLAM          shift and go to state 26
    IF              shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    metodo                         shift and go to state 221
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    vectorpush                     shift and go to state 13
    boolean                        shift and go to state 22

state 194

    (121) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (122) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof ID RLLAVE
    (67) datatype -> . intsize
    (68) datatype -> . uintsize
    (69) datatype -> . floatsize
    (70) datatype -> . strsize
    (71) datatype -> . STRING
    (72) datatype -> . BOOL
    (82) intsize -> . INT8
    (83) intsize -> . INT16
    (84) intsize -> . INT32
    (85) intsize -> . INT64
    (86) intsize -> . INT128
    (94) uintsize -> . UINT8
    (95) uintsize -> . UINT16
    (96) uintsize -> . UINT32
    (97) uintsize -> . UINT64
    (98) uintsize -> . UINT128
    (91) floatsize -> . FLOAT32
    (92) floatsize -> . FLOAT64
    (103) strsize -> . AMPERSAND COMILLA STATIC STR
    (104) strsize -> . AMPERSAND STR

    STRING          shift and go to state 191
    BOOL            shift and go to state 192
    INT8            shift and go to state 125
    INT16           shift and go to state 126
    INT32           shift and go to state 127
    INT64           shift and go to state 128
    INT128          shift and go to state 129
    UINT8           shift and go to state 130
    UINT16          shift and go to state 131
    UINT32          shift and go to state 132
    UINT64          shift and go to state 133
    UINT128         shift and go to state 134
    FLOAT32         shift and go to state 135
    FLOAT64         shift and go to state 136
    AMPERSAND       shift and go to state 137

    datatype                       shift and go to state 222
    intsize                        shift and go to state 187
    uintsize                       shift and go to state 188
    floatsize                      shift and go to state 189
    strsize                        shift and go to state 190

state 195

    (27) vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 223


state 196

    (58) expresion -> valornumerico signo valornumerico .

    ENDCHAR         reduce using rule 58 (expresion -> valornumerico signo valornumerico .)


state 197

    (63) valornumerico -> NINTTYPE .

    ENDCHAR         reduce using rule 63 (valornumerico -> NINTTYPE .)


state 198

    (64) valornumerico -> INTTYPE .

    ENDCHAR         reduce using rule 64 (valornumerico -> INTTYPE .)


state 199

    (65) valornumerico -> FLOATTYPE .

    ENDCHAR         reduce using rule 65 (valornumerico -> FLOATTYPE .)


state 200

    (73) linkedlist -> LET MUT . ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    ID              shift and go to state 224


state 201

    (55) asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .

    $end            reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    RLLAVE          reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    LET             reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    CONST           reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    PRINTLN         reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    ID              reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    IDCHAR          reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    IDSTRING        reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    INTTYPE         reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    NINTTYPE        reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    FLOATTYPE       reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    LOOP            reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    EXCLAM          reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    IF              reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    TRUE            reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    FALSE           reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    RETURN          reduce using rule 55 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)


state 202

    (56) asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .

    $end            reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RLLAVE          reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LET             reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    CONST           reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    PRINTLN         reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    ID              reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IDCHAR          reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IDSTRING        reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    INTTYPE         reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    NINTTYPE        reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    FLOATTYPE       reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LOOP            reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    EXCLAM          reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IF              reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    TRUE            reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    FALSE           reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RETURN          reduce using rule 56 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)


state 203

    (57) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR

    NEW             shift and go to state 225


state 204

    (73) linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR

    NEW             shift and go to state 226


state 205

    (52) hashmap -> HASHMAP DOSDOBLEPUNTOS . NEW LPAREN RPAREN

    NEW             shift and go to state 227


state 206

    (25) asignacion -> CONST ID COLON intsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 228


state 207

    (26) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 229


state 208

    (28) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 230


state 209

    (32) asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE . ENDCHAR

    ENDCHAR         shift and go to state 231


state 210

    (35) asignacion -> CONST ID COLON strsize IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 232


state 211

    (39) asignacion -> CONST ID COLON STRING IGUAL STRING . DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 233


state 212

    (40) asignacion -> CONST ID COLON STRING IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 234


state 213

    (51) asignacion -> CONST ID COLON BOOL IGUAL boolean . ENDCHAR

    ENDCHAR         shift and go to state 235


state 214

    (53) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR . ENDCHAR

    ENDCHAR         shift and go to state 236


state 215

    (103) strsize -> AMPERSAND COMILLA STATIC . STR

    STR             shift and go to state 237


state 216

    (114) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 238


state 217

    (119) ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .

    LLLAVE          reduce using rule 119 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    RPAREN          reduce using rule 119 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    ENDCHAR         reduce using rule 119 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)


state 218

    (112) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (6) metodo -> . asignacion
    (7) metodo -> . impresion
    (8) metodo -> . comparacion
    (9) metodo -> . linkedlist
    (10) metodo -> . loop
    (11) metodo -> . conectores
    (12) metodo -> . ifblock
    (13) metodo -> . elseifblock
    (14) metodo -> . elseblock
    (15) metodo -> . vectorpush
    (5) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (25) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (55) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (56) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (57) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (102) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (73) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (114) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (112) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (111) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (27) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    LET             shift and go to state 16
    CONST           shift and go to state 17
    PRINTLN         shift and go to state 24
    ID              shift and go to state 15
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LOOP            shift and go to state 25
    EXCLAM          shift and go to state 26
    IF              shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    ifblock                        shift and go to state 10
    cuerpof                        shift and go to state 239
    metodo                         shift and go to state 97
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    vectorpush                     shift and go to state 13
    boolean                        shift and go to state 22

state 219

    (113) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IDCHAR          reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IDSTRING        reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    INTTYPE         reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    NINTTYPE        reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    FLOATTYPE       reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    EXCLAM          reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    TRUE            reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    FALSE           reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 113 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)


state 220

    (100) params -> ID COLON datatype COMA . params
    (99) params -> . ID COLON datatype
    (100) params -> . ID COLON datatype COMA params

    ID              shift and go to state 99

    params                         shift and go to state 240

state 221

    (101) funcion -> FN ID LPAREN params RPAREN LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 241


state 222

    (121) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (122) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof ID RLLAVE

    LLLAVE          shift and go to state 242


state 223

    (27) vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .

    $end            reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    LET             reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    CONST           reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    ID              reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    IDCHAR          reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    IDSTRING        reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    INTTYPE         reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    NINTTYPE        reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    FLOATTYPE       reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    LOOP            reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    EXCLAM          reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    IF              reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    TRUE            reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    FALSE           reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    RETURN          reduce using rule 27 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)


state 224

    (73) linkedlist -> LET MUT ID . IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    IGUAL           shift and go to state 243


state 225

    (57) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 244


state 226

    (73) linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 245


state 227

    (52) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW . LPAREN RPAREN

    LPAREN          shift and go to state 246


state 228

    (25) asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IDCHAR          reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IDSTRING        reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    INTTYPE         reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    NINTTYPE        reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    FLOATTYPE       reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    EXCLAM          reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    TRUE            reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    FALSE           reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 25 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)


state 229

    (26) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .

    $end            reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LET             reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    CONST           reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    ID              reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IDCHAR          reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IDSTRING        reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    INTTYPE         reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    NINTTYPE        reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    FLOATTYPE       reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LOOP            reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    EXCLAM          reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IF              reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    TRUE            reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    FALSE           reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RETURN          reduce using rule 26 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)


state 230

    (28) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IDCHAR          reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IDSTRING        reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    INTTYPE         reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    NINTTYPE        reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    FLOATTYPE       reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    EXCLAM          reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    TRUE            reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    FALSE           reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)


state 231

    (32) asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .

    $end            reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    RLLAVE          reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    LET             reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    CONST           reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    PRINTLN         reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    ID              reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IDCHAR          reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IDSTRING        reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    INTTYPE         reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    NINTTYPE        reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    FLOATTYPE       reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    LOOP            reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    EXCLAM          reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IF              reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    TRUE            reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    FALSE           reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    RETURN          reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)


state 232

    (35) asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IDCHAR          reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IDSTRING        reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    INTTYPE         reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    NINTTYPE        reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    FLOATTYPE       reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    EXCLAM          reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    TRUE            reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    FALSE           reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 35 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)


state 233

    (39) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS . FROM LPAREN IDSTRING RPAREN ENDCHAR

    FROM            shift and go to state 247


state 234

    (40) asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IDCHAR          reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IDSTRING        reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    INTTYPE         reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    NINTTYPE        reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    FLOATTYPE       reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    EXCLAM          reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    TRUE            reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    FALSE           reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 40 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)


state 235

    (51) asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .

    $end            reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RLLAVE          reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LET             reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    CONST           reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    PRINTLN         reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    ID              reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IDCHAR          reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IDSTRING        reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    INTTYPE         reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    NINTTYPE        reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    FLOATTYPE       reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LOOP            reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    EXCLAM          reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IF              reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    TRUE            reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    FALSE           reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RETURN          reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)


state 236

    (53) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .

    $end            reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RLLAVE          reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LET             reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    CONST           reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    PRINTLN         reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    ID              reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IDCHAR          reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IDSTRING        reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    INTTYPE         reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    NINTTYPE        reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    FLOATTYPE       reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LOOP            reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    EXCLAM          reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IF              reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    TRUE            reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    FALSE           reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RETURN          reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)


state 237

    (103) strsize -> AMPERSAND COMILLA STATIC STR .

    IGUAL           reduce using rule 103 (strsize -> AMPERSAND COMILLA STATIC STR .)
    COMA            reduce using rule 103 (strsize -> AMPERSAND COMILLA STATIC STR .)
    RPAREN          reduce using rule 103 (strsize -> AMPERSAND COMILLA STATIC STR .)
    LLLAVE          reduce using rule 103 (strsize -> AMPERSAND COMILLA STATIC STR .)


state 238

    (114) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IDCHAR          reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IDSTRING        reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    INTTYPE         reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    NINTTYPE        reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    FLOATTYPE       reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    EXCLAM          reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    TRUE            reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    FALSE           reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 114 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 239

    (112) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 248


state 240

    (100) params -> ID COLON datatype COMA params .

    RPAREN          reduce using rule 100 (params -> ID COLON datatype COMA params .)


state 241

    (101) funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE .

    $end            reduce using rule 101 (funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE .)


state 242

    (121) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof RETURN ifparams ENDCHAR RLLAVE
    (122) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof ID RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (6) metodo -> . asignacion
    (7) metodo -> . impresion
    (8) metodo -> . comparacion
    (9) metodo -> . linkedlist
    (10) metodo -> . loop
    (11) metodo -> . conectores
    (12) metodo -> . ifblock
    (13) metodo -> . elseifblock
    (14) metodo -> . elseblock
    (15) metodo -> . vectorpush
    (5) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (25) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (26) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (35) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (39) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (40) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (55) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (56) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (57) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (102) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (73) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (74) conectores -> . boolean signoconect boolean
    (75) conectores -> . EXCLAM boolean
    (76) conectores -> . ID signoconect ID
    (114) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (112) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (113) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (110) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (111) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (27) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE

    LET             shift and go to state 16
    CONST           shift and go to state 17
    PRINTLN         shift and go to state 24
    ID              shift and go to state 15
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20
    LOOP            shift and go to state 25
    EXCLAM          shift and go to state 26
    IF              shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    cuerpof                        shift and go to state 249
    metodo                         shift and go to state 97
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    vectorpush                     shift and go to state 13
    boolean                        shift and go to state 22

state 243

    (73) linkedlist -> LET MUT ID IGUAL . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    LINKEDLIST      shift and go to state 167


state 244

    (57) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 250


state 245

    (73) linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 251


state 246

    (52) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN . RPAREN

    RPAREN          shift and go to state 252


state 247

    (39) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 253


state 248

    (112) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IDCHAR          reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IDSTRING        reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    INTTYPE         reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    NINTTYPE        reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    FLOATTYPE       reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    EXCLAM          reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    TRUE            reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    FALSE           reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 112 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 249

    (121) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . RETURN ifparams ENDCHAR RLLAVE
    (122) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . ID RLLAVE

    RETURN          shift and go to state 255
    ID              shift and go to state 254


state 250

    (57) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 256


state 251

    (73) linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 257


state 252

    (52) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .

    ENDCHAR         reduce using rule 52 (hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .)


state 253

    (39) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 258


state 254

    (122) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID . RLLAVE

    RLLAVE          shift and go to state 259


state 255

    (121) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN . ifparams ENDCHAR RLLAVE
    (107) ifparams -> . ifcondicion
    (108) ifparams -> . boolean
    (109) ifparams -> . ID
    (116) ifcondicion -> . comparacion
    (117) ifcondicion -> . comparacion signoconect ifcondicion
    (118) ifcondicion -> . LPAREN comparacion RPAREN
    (119) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (120) ifcondicion -> . LPAREN ifcondicion RPAREN
    (105) boolean -> . TRUE
    (106) boolean -> . FALSE
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean

    ID              shift and go to state 59
    LPAREN          shift and go to state 88
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    IDCHAR          shift and go to state 23
    IDSTRING        shift and go to state 21
    INTTYPE         shift and go to state 18
    NINTTYPE        shift and go to state 19
    FLOATTYPE       shift and go to state 20

    ifparams                       shift and go to state 260
    ifcondicion                    shift and go to state 57
    boolean                        shift and go to state 58
    comparacion                    shift and go to state 60

state 256

    (57) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IDCHAR          reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IDSTRING        reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    INTTYPE         reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    NINTTYPE        reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    FLOATTYPE       reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    EXCLAM          reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    TRUE            reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    FALSE           reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 57 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)


state 257

    (73) linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IDCHAR          reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IDSTRING        reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    INTTYPE         reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    NINTTYPE        reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    FLOATTYPE       reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    EXCLAM          reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    TRUE            reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    FALSE           reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ENDCHAR         reduce using rule 73 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)


state 258

    (39) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 261


state 259

    (122) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .

    $end            reduce using rule 122 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .)


state 260

    (121) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams . ENDCHAR RLLAVE

    ENDCHAR         shift and go to state 262


state 261

    (39) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 263


state 262

    (121) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR . RLLAVE

    RLLAVE          shift and go to state 264


state 263

    (39) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IDCHAR          reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IDSTRING        reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    INTTYPE         reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    NINTTYPE        reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    FLOATTYPE       reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    EXCLAM          reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    TRUE            reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    FALSE           reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 39 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)


state 264

    (121) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .

    $end            reduce using rule 121 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 90 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 91 resolved as shift
WARNING: shift/reduce conflict for ID in state 97 resolved as shift
