Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASYNC
    AWAIT
    BREAK
    CONTINUE
    DIVASIGN
    DOLAR
    DYN
    ENUM
    ERR
    FINAL
    FOR
    FORMAT
    IMPL
    IN
    INPUT
    INTERRO
    LCOR
    MAINFN
    MATCH
    MOVE
    MULTIASIGN
    OK
    PARSE
    POINTERSIZE
    PRIV
    PUB
    RCOR
    REF
    RESTAASIGN
    SELF
    SIZEOF
    STRUCT
    SUMAASIGN
    SUPER
    TYPE
    TYPEOF
    UNSAFE
    UNWRAPOR
    USE
    WHERE

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> metodo
Rule 2     cuerpo -> funcion
Rule 3     cuerpof -> metodo
Rule 4     cuerpof -> metodo cuerpof
Rule 5     metodo -> asignacion
Rule 6     metodo -> impresion
Rule 7     metodo -> loop
Rule 8     metodo -> ifblock
Rule 9     metodo -> elseifblock
Rule 10    metodo -> elseblock
Rule 11    metodo -> vectorpush
Rule 12    metodo -> llpushfront
Rule 13    metodo -> llpopback
Rule 14    metodo -> sumaint
Rule 15    metodo -> entrada
Rule 16    metodo -> while
Rule 17    metodo -> reasignacion
Rule 18    metodo -> pushString
Rule 19    metodo -> casting
Rule 20    valor -> valornumerico
Rule 21    valor -> TRUE
Rule 22    valor -> FALSE
Rule 23    valor -> ID
Rule 24    valor -> IDCHAR
Rule 25    valor -> IDSTRING
Rule 26    valor -> expresion
Rule 27    valor -> conectores
Rule 28    valor -> comparacion
Rule 29    estructuras -> linkedlist
Rule 30    estructuras -> hashmap
Rule 31    comparacion -> ID signocompar ID
Rule 32    comparacion -> IDCHAR signocompar IDCHAR
Rule 33    comparacion -> IDSTRING signocompar IDSTRING
Rule 34    asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 35    while -> WHILE ifparams LLLAVE cuerpof RLLAVE
Rule 36    comparacion -> INTTYPE signocompar INTTYPE
Rule 37    comparacion -> NINTTYPE signocompar NINTTYPE
Rule 38    comparacion -> FLOATTYPE signocompar FLOATTYPE
Rule 39    asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
Rule 40    asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
Rule 41    hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
Rule 42    comparacion -> boolean signocompar boolean
Rule 43    expresion -> valornumerico signo valornumerico
Rule 44    datatype -> intsize
Rule 45    datatype -> uintsize
Rule 46    datatype -> floatsize
Rule 47    datatype -> strsize
Rule 48    datatype -> STRING
Rule 49    datatype -> BOOL
Rule 50    valornumerico -> NINTTYPE
Rule 51    valornumerico -> INTTYPE
Rule 52    valornumerico -> FLOATTYPE
Rule 53    valornumerico -> NFLOATTYPE
Rule 54    asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
Rule 55    asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
Rule 56    signocompar -> MAYORQUE
Rule 57    signocompar -> MENORQUE
Rule 58    signocompar -> DIFERENTE
Rule 59    signocompar -> IDENTICO
Rule 60    intsize -> INT8
Rule 61    intsize -> INT16
Rule 62    intsize -> INT32
Rule 63    intsize -> INT64
Rule 64    intsize -> INT128
Rule 65    signo -> PLUS
Rule 66    signo -> TIMES
Rule 67    signo -> MINUS
Rule 68    signo -> PORCENTAJE
Rule 69    signo -> DIVIDE
Rule 70    asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
Rule 71    linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 72    conectores -> boolean signoconect boolean
Rule 73    conectores -> EXCLAM boolean
Rule 74    conectores -> ID signoconect ID
Rule 75    asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
Rule 76    floatsize -> FLOAT32
Rule 77    floatsize -> FLOAT64
Rule 78    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
Rule 79    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
Rule 80    signoconect -> DAMPERSAND
Rule 81    signoconect -> OR
Rule 82    asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
Rule 83    uintsize -> UINT8
Rule 84    uintsize -> UINT16
Rule 85    uintsize -> UINT32
Rule 86    uintsize -> UINT64
Rule 87    uintsize -> UINT128
Rule 88    asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR
Rule 89    loop -> LOOP LLLAVE metodo RLLAVE
Rule 90    strsize -> AMPERSAND COMILLA STATIC STR
Rule 91    strsize -> AMPERSAND STR
Rule 92    asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
Rule 93    params -> ID COLON datatype
Rule 94    params -> ID COLON datatype COMA params
Rule 95    boolean -> TRUE
Rule 96    boolean -> FALSE
Rule 97    impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
Rule 98    vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
Rule 99    ifparams -> ifcondicion
Rule 100   ifparams -> boolean
Rule 101   ifparams -> ID
Rule 102   elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE
Rule 103   elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE
Rule 104   elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 105   elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
Rule 106   asignacion -> LET MUT ID IGUAL valor ENDCHAR
Rule 107   asignacion -> LET MUT ID IGUAL estructuras ENDCHAR
Rule 108   ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 109   ifblock -> IF ifparams LLLAVE cuerpof RLLAVE
Rule 110   ifcondicion -> comparacion
Rule 111   ifcondicion -> comparacion signoconect ifcondicion
Rule 112   ifcondicion -> LPAREN comparacion RPAREN
Rule 113   ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion
Rule 114   ifcondicion -> LPAREN ifcondicion RPAREN
Rule 115   asignacion -> LET ID IGUAL valor ENDCHAR
Rule 116   reasignacion -> ID IGUAL valor ENDCHAR
Rule 117   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
Rule 118   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
Rule 119   asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
Rule 120   funcion -> FN ID LPAREN params RPAREN LLLAVE cuerpof RLLAVE
Rule 121   pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
Rule 122   pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
Rule 123   casting -> LET ID IGUAL ID AS uintsize
Rule 124   casting -> LET ID IGUAL ID AS intsize
Rule 125   casting -> LET ID IGUAL ID AS CHAR
Rule 126   asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 127   llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
Rule 128   llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR
Rule 129   sumaint -> ID signo ID
Rule 130   sumaint -> LET ID IGUAL ID signo ID ENDCHAR

Terminals, with rules where they appear

AMPERSAND            : 78 79 90 91
ARROWOPT             : 117 118
AS                   : 123 124 125
ASYNC                : 
AWAIT                : 
BOOL                 : 49 88
BREAK                : 
CHAR                 : 92 125
COLON                : 39 40 54 55 70 75 82 88 92 93 94
COMA                 : 94
COMILLA              : 90
CONST                : 39 40 54 55 70 75 82 88 92
CONTINUE             : 
DAMPERSAND           : 80
DIFERENTE            : 58
DIVASIGN             : 
DIVIDE               : 69
DOLAR                : 
DOSDOBLEPUNTOS       : 34 41 71 75 78 79 119 126
DYN                  : 
ELSE                 : 102 103 104 105
ENDCHAR              : 34 39 40 54 55 70 71 75 78 79 82 88 92 97 98 106 107 115 116 118 119 121 122 126 127 128 130
ENUM                 : 
ERR                  : 
EXCLAM               : 73
EXPECT               : 79
FALSE                : 22 96
FINAL                : 
FLOAT32              : 76
FLOAT64              : 77
FLOATTYPE            : 38 38 52 55
FN                   : 117 118 120
FOR                  : 
FORMAT               : 
FROM                 : 75 119
HASHMAP              : 41
ID                   : 23 31 31 34 39 40 54 55 70 74 74 75 78 79 82 88 92 93 94 98 101 106 107 115 116 117 117 118 119 120 121 122 123 123 124 124 125 125 126 127 128 129 129 130 130 130
IDCHAR               : 24 32 32 92 122
IDENTICO             : 59
IDSTRING             : 25 33 33 70 75 79 82 97 119 121
IF                   : 104 105 108 109
IGUAL                : 34 39 40 54 55 70 75 82 88 92 106 107 115 116 119 123 124 125 126 130
IMPL                 : 
IN                   : 
INPUT                : 
INT128               : 64
INT16                : 61
INT32                : 62
INT64                : 63
INT8                 : 60
INTERRO              : 
INTTYPE              : 36 36 39 51 54 98 127
IO                   : 78 79
LCOR                 : 
LET                  : 34 106 107 115 119 123 124 125 126 130
LINKEDLIST           : 71 126
LLLAVE               : 35 89 102 103 104 105 108 109 117 118 120
LOOP                 : 89
LPAREN               : 34 41 71 75 78 78 79 79 79 97 98 104 108 112 113 114 117 118 119 120 121 122 126 127 128
MAINFN               : 
MATCH                : 
MAYORQUE             : 56
MENORQUE             : 57
MINUS                : 67
MOVE                 : 
MULTIASIGN           : 
MUT                  : 34 78 79 106 107 119 126
NEW                  : 34 41 71 126
NFLOATTYPE           : 53
NINTTYPE             : 37 37 40 50
OK                   : 
OR                   : 81
PARSE                : 
PLUS                 : 65
POINT                : 78 79 79 98 121 122 127 128
POINTERSIZE          : 
POP_BACK             : 128
PORCENTAJE           : 68
PRINTLN              : 97
PRIV                 : 
PUB                  : 
PUSH                 : 98
PUSH_FRONT           : 127
PUSH_STR             : 121 122
RCOR                 : 
READLINE             : 78 79
REF                  : 
RESTAASIGN           : 
RETURN               : 118
RLLAVE               : 35 89 102 103 104 105 108 109 117 118 120
RPAREN               : 34 41 71 75 78 78 79 79 79 97 98 104 108 112 113 114 117 118 119 120 121 122 126 127 128
SELF                 : 
SIZEOF               : 
STATIC               : 90
STDIN                : 78 79
STR                  : 90 91
STRING               : 48 75 75 82 119
STRUCT               : 
SUMAASIGN            : 
SUPER                : 
TIMES                : 66
TRUE                 : 21 95
TYPE                 : 
TYPEOF               : 
UINT128              : 87
UINT16               : 84
UINT32               : 85
UINT64               : 86
UINT8                : 83
UNSAFE               : 
UNWRAPOR             : 
USE                  : 
VEC                  : 34
WHERE                : 
WHILE                : 35
error                : 

Nonterminals, with rules where they appear

asignacion           : 5
boolean              : 42 42 72 72 73 88 100
casting              : 19
comparacion          : 28 110 111 112 113
conectores           : 27
cuerpo               : 0
cuerpof              : 4 35 102 103 104 105 108 109 117 118 120
datatype             : 93 94 117 118
elseblock            : 10
elseifblock          : 9 103
entrada              : 15
estructuras          : 107
expresion            : 26
floatsize            : 46 55
funcion              : 2
hashmap              : 30
ifblock              : 8 102 104 105
ifcondicion          : 99 111 113 114
ifparams             : 35 104 105 108 109 118
impresion            : 6
intsize              : 39 40 44 124
linkedlist           : 29
llpopback            : 13
llpushfront          : 12
loop                 : 7
metodo               : 1 3 4 89
params               : 94 117 118 120
pushString           : 18
reasignacion         : 17
signo                : 43 129 130
signocompar          : 31 32 33 36 37 38 42
signoconect          : 72 74 111 113
strsize              : 47 70
sumaint              : 14
uintsize             : 45 54 123
valor                : 106 115 116
valornumerico        : 20 43 43
vectorpush           : 11
while                : 16

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . metodo
    (2) cuerpo -> . funcion
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (17) metodo -> . reasignacion
    (18) metodo -> . pushString
    (19) metodo -> . casting
    (117) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (118) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> . FN ID LPAREN params RPAREN LLLAVE cuerpof RLLAVE
    (34) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (106) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> . LET ID IGUAL valor ENDCHAR
    (119) asignacion -> . LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (97) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (89) loop -> . LOOP LLLAVE metodo RLLAVE
    (108) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (104) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (103) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (98) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> . ID signo ID
    (130) sumaint -> . LET ID IGUAL ID signo ID ENDCHAR
    (78) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE
    (116) reasignacion -> . ID IGUAL valor ENDCHAR
    (121) pushString -> . ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> . ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (123) casting -> . LET ID IGUAL ID AS uintsize
    (124) casting -> . LET ID IGUAL ID AS intsize
    (125) casting -> . LET ID IGUAL ID AS CHAR

    FN              shift and go to state 19
    LET             shift and go to state 21
    CONST           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOOP            shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 20
    IO              shift and go to state 26
    WHILE           shift and go to state 27

    cuerpo                         shift and go to state 1
    metodo                         shift and go to state 2
    funcion                        shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    reasignacion                   shift and go to state 16
    pushString                     shift and go to state 17
    casting                        shift and go to state 18

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> metodo .

    $end            reduce using rule 1 (cuerpo -> metodo .)


state 3

    (2) cuerpo -> funcion .

    $end            reduce using rule 2 (cuerpo -> funcion .)


state 4

    (5) metodo -> asignacion .

    $end            reduce using rule 5 (metodo -> asignacion .)
    RLLAVE          reduce using rule 5 (metodo -> asignacion .)
    LET             reduce using rule 5 (metodo -> asignacion .)
    CONST           reduce using rule 5 (metodo -> asignacion .)
    PRINTLN         reduce using rule 5 (metodo -> asignacion .)
    LOOP            reduce using rule 5 (metodo -> asignacion .)
    IF              reduce using rule 5 (metodo -> asignacion .)
    ID              reduce using rule 5 (metodo -> asignacion .)
    IO              reduce using rule 5 (metodo -> asignacion .)
    WHILE           reduce using rule 5 (metodo -> asignacion .)
    RETURN          reduce using rule 5 (metodo -> asignacion .)


state 5

    (6) metodo -> impresion .

    $end            reduce using rule 6 (metodo -> impresion .)
    RLLAVE          reduce using rule 6 (metodo -> impresion .)
    LET             reduce using rule 6 (metodo -> impresion .)
    CONST           reduce using rule 6 (metodo -> impresion .)
    PRINTLN         reduce using rule 6 (metodo -> impresion .)
    LOOP            reduce using rule 6 (metodo -> impresion .)
    IF              reduce using rule 6 (metodo -> impresion .)
    ID              reduce using rule 6 (metodo -> impresion .)
    IO              reduce using rule 6 (metodo -> impresion .)
    WHILE           reduce using rule 6 (metodo -> impresion .)
    RETURN          reduce using rule 6 (metodo -> impresion .)


state 6

    (7) metodo -> loop .

    $end            reduce using rule 7 (metodo -> loop .)
    RLLAVE          reduce using rule 7 (metodo -> loop .)
    LET             reduce using rule 7 (metodo -> loop .)
    CONST           reduce using rule 7 (metodo -> loop .)
    PRINTLN         reduce using rule 7 (metodo -> loop .)
    LOOP            reduce using rule 7 (metodo -> loop .)
    IF              reduce using rule 7 (metodo -> loop .)
    ID              reduce using rule 7 (metodo -> loop .)
    IO              reduce using rule 7 (metodo -> loop .)
    WHILE           reduce using rule 7 (metodo -> loop .)
    RETURN          reduce using rule 7 (metodo -> loop .)


state 7

    (8) metodo -> ifblock .
    (104) elseifblock -> ifblock . ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> ifblock . ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> ifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 8 (metodo -> ifblock .)
    RLLAVE          reduce using rule 8 (metodo -> ifblock .)
    LET             reduce using rule 8 (metodo -> ifblock .)
    CONST           reduce using rule 8 (metodo -> ifblock .)
    PRINTLN         reduce using rule 8 (metodo -> ifblock .)
    LOOP            reduce using rule 8 (metodo -> ifblock .)
    IF              reduce using rule 8 (metodo -> ifblock .)
    ID              reduce using rule 8 (metodo -> ifblock .)
    IO              reduce using rule 8 (metodo -> ifblock .)
    WHILE           reduce using rule 8 (metodo -> ifblock .)
    RETURN          reduce using rule 8 (metodo -> ifblock .)
    ELSE            shift and go to state 28


state 8

    (9) metodo -> elseifblock .
    (103) elseblock -> elseifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 9 (metodo -> elseifblock .)
    RLLAVE          reduce using rule 9 (metodo -> elseifblock .)
    LET             reduce using rule 9 (metodo -> elseifblock .)
    CONST           reduce using rule 9 (metodo -> elseifblock .)
    PRINTLN         reduce using rule 9 (metodo -> elseifblock .)
    LOOP            reduce using rule 9 (metodo -> elseifblock .)
    IF              reduce using rule 9 (metodo -> elseifblock .)
    ID              reduce using rule 9 (metodo -> elseifblock .)
    IO              reduce using rule 9 (metodo -> elseifblock .)
    WHILE           reduce using rule 9 (metodo -> elseifblock .)
    RETURN          reduce using rule 9 (metodo -> elseifblock .)
    ELSE            shift and go to state 29


state 9

    (10) metodo -> elseblock .

    $end            reduce using rule 10 (metodo -> elseblock .)
    RLLAVE          reduce using rule 10 (metodo -> elseblock .)
    LET             reduce using rule 10 (metodo -> elseblock .)
    CONST           reduce using rule 10 (metodo -> elseblock .)
    PRINTLN         reduce using rule 10 (metodo -> elseblock .)
    LOOP            reduce using rule 10 (metodo -> elseblock .)
    IF              reduce using rule 10 (metodo -> elseblock .)
    ID              reduce using rule 10 (metodo -> elseblock .)
    IO              reduce using rule 10 (metodo -> elseblock .)
    WHILE           reduce using rule 10 (metodo -> elseblock .)
    RETURN          reduce using rule 10 (metodo -> elseblock .)


state 10

    (11) metodo -> vectorpush .

    $end            reduce using rule 11 (metodo -> vectorpush .)
    RLLAVE          reduce using rule 11 (metodo -> vectorpush .)
    LET             reduce using rule 11 (metodo -> vectorpush .)
    CONST           reduce using rule 11 (metodo -> vectorpush .)
    PRINTLN         reduce using rule 11 (metodo -> vectorpush .)
    LOOP            reduce using rule 11 (metodo -> vectorpush .)
    IF              reduce using rule 11 (metodo -> vectorpush .)
    ID              reduce using rule 11 (metodo -> vectorpush .)
    IO              reduce using rule 11 (metodo -> vectorpush .)
    WHILE           reduce using rule 11 (metodo -> vectorpush .)
    RETURN          reduce using rule 11 (metodo -> vectorpush .)


state 11

    (12) metodo -> llpushfront .

    $end            reduce using rule 12 (metodo -> llpushfront .)
    RLLAVE          reduce using rule 12 (metodo -> llpushfront .)
    LET             reduce using rule 12 (metodo -> llpushfront .)
    CONST           reduce using rule 12 (metodo -> llpushfront .)
    PRINTLN         reduce using rule 12 (metodo -> llpushfront .)
    LOOP            reduce using rule 12 (metodo -> llpushfront .)
    IF              reduce using rule 12 (metodo -> llpushfront .)
    ID              reduce using rule 12 (metodo -> llpushfront .)
    IO              reduce using rule 12 (metodo -> llpushfront .)
    WHILE           reduce using rule 12 (metodo -> llpushfront .)
    RETURN          reduce using rule 12 (metodo -> llpushfront .)


state 12

    (13) metodo -> llpopback .

    $end            reduce using rule 13 (metodo -> llpopback .)
    RLLAVE          reduce using rule 13 (metodo -> llpopback .)
    LET             reduce using rule 13 (metodo -> llpopback .)
    CONST           reduce using rule 13 (metodo -> llpopback .)
    PRINTLN         reduce using rule 13 (metodo -> llpopback .)
    LOOP            reduce using rule 13 (metodo -> llpopback .)
    IF              reduce using rule 13 (metodo -> llpopback .)
    ID              reduce using rule 13 (metodo -> llpopback .)
    IO              reduce using rule 13 (metodo -> llpopback .)
    WHILE           reduce using rule 13 (metodo -> llpopback .)
    RETURN          reduce using rule 13 (metodo -> llpopback .)


state 13

    (14) metodo -> sumaint .

    $end            reduce using rule 14 (metodo -> sumaint .)
    RLLAVE          reduce using rule 14 (metodo -> sumaint .)
    LET             reduce using rule 14 (metodo -> sumaint .)
    CONST           reduce using rule 14 (metodo -> sumaint .)
    PRINTLN         reduce using rule 14 (metodo -> sumaint .)
    LOOP            reduce using rule 14 (metodo -> sumaint .)
    IF              reduce using rule 14 (metodo -> sumaint .)
    ID              reduce using rule 14 (metodo -> sumaint .)
    IO              reduce using rule 14 (metodo -> sumaint .)
    WHILE           reduce using rule 14 (metodo -> sumaint .)
    RETURN          reduce using rule 14 (metodo -> sumaint .)


state 14

    (15) metodo -> entrada .

    $end            reduce using rule 15 (metodo -> entrada .)
    RLLAVE          reduce using rule 15 (metodo -> entrada .)
    LET             reduce using rule 15 (metodo -> entrada .)
    CONST           reduce using rule 15 (metodo -> entrada .)
    PRINTLN         reduce using rule 15 (metodo -> entrada .)
    LOOP            reduce using rule 15 (metodo -> entrada .)
    IF              reduce using rule 15 (metodo -> entrada .)
    ID              reduce using rule 15 (metodo -> entrada .)
    IO              reduce using rule 15 (metodo -> entrada .)
    WHILE           reduce using rule 15 (metodo -> entrada .)
    RETURN          reduce using rule 15 (metodo -> entrada .)


state 15

    (16) metodo -> while .

    $end            reduce using rule 16 (metodo -> while .)
    RLLAVE          reduce using rule 16 (metodo -> while .)
    LET             reduce using rule 16 (metodo -> while .)
    CONST           reduce using rule 16 (metodo -> while .)
    PRINTLN         reduce using rule 16 (metodo -> while .)
    LOOP            reduce using rule 16 (metodo -> while .)
    IF              reduce using rule 16 (metodo -> while .)
    ID              reduce using rule 16 (metodo -> while .)
    IO              reduce using rule 16 (metodo -> while .)
    WHILE           reduce using rule 16 (metodo -> while .)
    RETURN          reduce using rule 16 (metodo -> while .)


state 16

    (17) metodo -> reasignacion .

    $end            reduce using rule 17 (metodo -> reasignacion .)
    RLLAVE          reduce using rule 17 (metodo -> reasignacion .)
    LET             reduce using rule 17 (metodo -> reasignacion .)
    CONST           reduce using rule 17 (metodo -> reasignacion .)
    PRINTLN         reduce using rule 17 (metodo -> reasignacion .)
    LOOP            reduce using rule 17 (metodo -> reasignacion .)
    IF              reduce using rule 17 (metodo -> reasignacion .)
    ID              reduce using rule 17 (metodo -> reasignacion .)
    IO              reduce using rule 17 (metodo -> reasignacion .)
    WHILE           reduce using rule 17 (metodo -> reasignacion .)
    RETURN          reduce using rule 17 (metodo -> reasignacion .)


state 17

    (18) metodo -> pushString .

    $end            reduce using rule 18 (metodo -> pushString .)
    RLLAVE          reduce using rule 18 (metodo -> pushString .)
    LET             reduce using rule 18 (metodo -> pushString .)
    CONST           reduce using rule 18 (metodo -> pushString .)
    PRINTLN         reduce using rule 18 (metodo -> pushString .)
    LOOP            reduce using rule 18 (metodo -> pushString .)
    IF              reduce using rule 18 (metodo -> pushString .)
    ID              reduce using rule 18 (metodo -> pushString .)
    IO              reduce using rule 18 (metodo -> pushString .)
    WHILE           reduce using rule 18 (metodo -> pushString .)
    RETURN          reduce using rule 18 (metodo -> pushString .)


state 18

    (19) metodo -> casting .

    $end            reduce using rule 19 (metodo -> casting .)
    RLLAVE          reduce using rule 19 (metodo -> casting .)
    LET             reduce using rule 19 (metodo -> casting .)
    CONST           reduce using rule 19 (metodo -> casting .)
    PRINTLN         reduce using rule 19 (metodo -> casting .)
    LOOP            reduce using rule 19 (metodo -> casting .)
    IF              reduce using rule 19 (metodo -> casting .)
    ID              reduce using rule 19 (metodo -> casting .)
    IO              reduce using rule 19 (metodo -> casting .)
    WHILE           reduce using rule 19 (metodo -> casting .)
    RETURN          reduce using rule 19 (metodo -> casting .)


state 19

    (117) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (118) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN . ID LPAREN params RPAREN LLLAVE cuerpof RLLAVE

    ID              shift and go to state 30


state 20

    (98) vectorpush -> ID . POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> ID . POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> ID . POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> ID . signo ID
    (116) reasignacion -> ID . IGUAL valor ENDCHAR
    (121) pushString -> ID . POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> ID . POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (65) signo -> . PLUS
    (66) signo -> . TIMES
    (67) signo -> . MINUS
    (68) signo -> . PORCENTAJE
    (69) signo -> . DIVIDE

    POINT           shift and go to state 31
    IGUAL           shift and go to state 33
    PLUS            shift and go to state 34
    TIMES           shift and go to state 35
    MINUS           shift and go to state 36
    PORCENTAJE      shift and go to state 37
    DIVIDE          shift and go to state 38

    signo                          shift and go to state 32

state 21

    (34) asignacion -> LET . MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (106) asignacion -> LET . MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> LET . MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> LET . ID IGUAL valor ENDCHAR
    (119) asignacion -> LET . MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> LET . MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (130) sumaint -> LET . ID IGUAL ID signo ID ENDCHAR
    (123) casting -> LET . ID IGUAL ID AS uintsize
    (124) casting -> LET . ID IGUAL ID AS intsize
    (125) casting -> LET . ID IGUAL ID AS CHAR

    MUT             shift and go to state 39
    ID              shift and go to state 40


state 22

    (39) asignacion -> CONST . ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> CONST . ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> CONST . ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> CONST . ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> CONST . ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> CONST . ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> CONST . ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> CONST . ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> CONST . ID COLON CHAR IGUAL IDCHAR ENDCHAR

    ID              shift and go to state 41


state 23

    (97) impresion -> PRINTLN . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 42


state 24

    (89) loop -> LOOP . LLLAVE metodo RLLAVE

    LLLAVE          shift and go to state 43


state 25

    (108) ifblock -> IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> IF . ifparams LLLAVE cuerpof RLLAVE
    (99) ifparams -> . ifcondicion
    (100) ifparams -> . boolean
    (101) ifparams -> . ID
    (110) ifcondicion -> . comparacion
    (111) ifcondicion -> . comparacion signoconect ifcondicion
    (112) ifcondicion -> . LPAREN comparacion RPAREN
    (113) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (114) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE
    (31) comparacion -> . ID signocompar ID
    (32) comparacion -> . IDCHAR signocompar IDCHAR
    (33) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean

    LPAREN          shift and go to state 44
    ID              shift and go to state 48
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    IDCHAR          shift and go to state 52
    IDSTRING        shift and go to state 53
    INTTYPE         shift and go to state 54
    NINTTYPE        shift and go to state 55
    FLOATTYPE       shift and go to state 56

    ifparams                       shift and go to state 45
    ifcondicion                    shift and go to state 46
    boolean                        shift and go to state 47
    comparacion                    shift and go to state 49

state 26

    (78) entrada -> IO . DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> IO . DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 57


state 27

    (35) while -> WHILE . ifparams LLLAVE cuerpof RLLAVE
    (99) ifparams -> . ifcondicion
    (100) ifparams -> . boolean
    (101) ifparams -> . ID
    (110) ifcondicion -> . comparacion
    (111) ifcondicion -> . comparacion signoconect ifcondicion
    (112) ifcondicion -> . LPAREN comparacion RPAREN
    (113) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (114) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE
    (31) comparacion -> . ID signocompar ID
    (32) comparacion -> . IDCHAR signocompar IDCHAR
    (33) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean

    ID              shift and go to state 48
    LPAREN          shift and go to state 59
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    IDCHAR          shift and go to state 52
    IDSTRING        shift and go to state 53
    INTTYPE         shift and go to state 54
    NINTTYPE        shift and go to state 55
    FLOATTYPE       shift and go to state 56

    ifparams                       shift and go to state 58
    ifcondicion                    shift and go to state 46
    boolean                        shift and go to state 47
    comparacion                    shift and go to state 49

state 28

    (104) elseifblock -> ifblock ELSE . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> ifblock ELSE . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> ifblock ELSE . LLLAVE cuerpof RLLAVE

    IF              shift and go to state 60
    LLLAVE          shift and go to state 61


state 29

    (103) elseblock -> elseifblock ELSE . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 62


state 30

    (117) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (118) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN ID . LPAREN params RPAREN LLLAVE cuerpof RLLAVE

    LPAREN          shift and go to state 63


state 31

    (98) vectorpush -> ID POINT . PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> ID POINT . PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> ID POINT . POP_BACK LPAREN RPAREN ENDCHAR
    (121) pushString -> ID POINT . PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> ID POINT . PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR

    PUSH            shift and go to state 64
    PUSH_FRONT      shift and go to state 65
    POP_BACK        shift and go to state 66
    PUSH_STR        shift and go to state 67


state 32

    (129) sumaint -> ID signo . ID

    ID              shift and go to state 68


state 33

    (116) reasignacion -> ID IGUAL . valor ENDCHAR
    (20) valor -> . valornumerico
    (21) valor -> . TRUE
    (22) valor -> . FALSE
    (23) valor -> . ID
    (24) valor -> . IDCHAR
    (25) valor -> . IDSTRING
    (26) valor -> . expresion
    (27) valor -> . conectores
    (28) valor -> . comparacion
    (50) valornumerico -> . NINTTYPE
    (51) valornumerico -> . INTTYPE
    (52) valornumerico -> . FLOATTYPE
    (53) valornumerico -> . NFLOATTYPE
    (43) expresion -> . valornumerico signo valornumerico
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (31) comparacion -> . ID signocompar ID
    (32) comparacion -> . IDCHAR signocompar IDCHAR
    (33) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    ID              shift and go to state 69
    IDCHAR          shift and go to state 74
    IDSTRING        shift and go to state 75
    NINTTYPE        shift and go to state 79
    INTTYPE         shift and go to state 80
    FLOATTYPE       shift and go to state 81
    NFLOATTYPE      shift and go to state 82
    EXCLAM          shift and go to state 84

    valor                          shift and go to state 70
    valornumerico                  shift and go to state 71
    expresion                      shift and go to state 76
    conectores                     shift and go to state 77
    comparacion                    shift and go to state 78
    boolean                        shift and go to state 83

state 34

    (65) signo -> PLUS .

    ID              reduce using rule 65 (signo -> PLUS .)
    NINTTYPE        reduce using rule 65 (signo -> PLUS .)
    INTTYPE         reduce using rule 65 (signo -> PLUS .)
    FLOATTYPE       reduce using rule 65 (signo -> PLUS .)
    NFLOATTYPE      reduce using rule 65 (signo -> PLUS .)


state 35

    (66) signo -> TIMES .

    ID              reduce using rule 66 (signo -> TIMES .)
    NINTTYPE        reduce using rule 66 (signo -> TIMES .)
    INTTYPE         reduce using rule 66 (signo -> TIMES .)
    FLOATTYPE       reduce using rule 66 (signo -> TIMES .)
    NFLOATTYPE      reduce using rule 66 (signo -> TIMES .)


state 36

    (67) signo -> MINUS .

    ID              reduce using rule 67 (signo -> MINUS .)
    NINTTYPE        reduce using rule 67 (signo -> MINUS .)
    INTTYPE         reduce using rule 67 (signo -> MINUS .)
    FLOATTYPE       reduce using rule 67 (signo -> MINUS .)
    NFLOATTYPE      reduce using rule 67 (signo -> MINUS .)


state 37

    (68) signo -> PORCENTAJE .

    ID              reduce using rule 68 (signo -> PORCENTAJE .)
    NINTTYPE        reduce using rule 68 (signo -> PORCENTAJE .)
    INTTYPE         reduce using rule 68 (signo -> PORCENTAJE .)
    FLOATTYPE       reduce using rule 68 (signo -> PORCENTAJE .)
    NFLOATTYPE      reduce using rule 68 (signo -> PORCENTAJE .)


state 38

    (69) signo -> DIVIDE .

    ID              reduce using rule 69 (signo -> DIVIDE .)
    NINTTYPE        reduce using rule 69 (signo -> DIVIDE .)
    INTTYPE         reduce using rule 69 (signo -> DIVIDE .)
    FLOATTYPE       reduce using rule 69 (signo -> DIVIDE .)
    NFLOATTYPE      reduce using rule 69 (signo -> DIVIDE .)


state 39

    (34) asignacion -> LET MUT . ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (106) asignacion -> LET MUT . ID IGUAL valor ENDCHAR
    (107) asignacion -> LET MUT . ID IGUAL estructuras ENDCHAR
    (119) asignacion -> LET MUT . ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> LET MUT . ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    ID              shift and go to state 85


state 40

    (115) asignacion -> LET ID . IGUAL valor ENDCHAR
    (130) sumaint -> LET ID . IGUAL ID signo ID ENDCHAR
    (123) casting -> LET ID . IGUAL ID AS uintsize
    (124) casting -> LET ID . IGUAL ID AS intsize
    (125) casting -> LET ID . IGUAL ID AS CHAR

    IGUAL           shift and go to state 86


state 41

    (39) asignacion -> CONST ID . COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> CONST ID . COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> CONST ID . COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> CONST ID . COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> CONST ID . COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> CONST ID . COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> CONST ID . COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> CONST ID . COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> CONST ID . COLON CHAR IGUAL IDCHAR ENDCHAR

    COLON           shift and go to state 87


state 42

    (97) impresion -> PRINTLN LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 88


state 43

    (89) loop -> LOOP LLLAVE . metodo RLLAVE
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (17) metodo -> . reasignacion
    (18) metodo -> . pushString
    (19) metodo -> . casting
    (34) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (106) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> . LET ID IGUAL valor ENDCHAR
    (119) asignacion -> . LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (97) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (89) loop -> . LOOP LLLAVE metodo RLLAVE
    (108) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (104) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (103) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (98) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> . ID signo ID
    (130) sumaint -> . LET ID IGUAL ID signo ID ENDCHAR
    (78) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE
    (116) reasignacion -> . ID IGUAL valor ENDCHAR
    (121) pushString -> . ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> . ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (123) casting -> . LET ID IGUAL ID AS uintsize
    (124) casting -> . LET ID IGUAL ID AS intsize
    (125) casting -> . LET ID IGUAL ID AS CHAR

    LET             shift and go to state 21
    CONST           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOOP            shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 20
    IO              shift and go to state 26
    WHILE           shift and go to state 27

    metodo                         shift and go to state 89
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    reasignacion                   shift and go to state 16
    pushString                     shift and go to state 17
    casting                        shift and go to state 18

state 44

    (108) ifblock -> IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifcondicion -> LPAREN . comparacion RPAREN
    (113) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (114) ifcondicion -> LPAREN . ifcondicion RPAREN
    (99) ifparams -> . ifcondicion
    (100) ifparams -> . boolean
    (101) ifparams -> . ID
    (31) comparacion -> . ID signocompar ID
    (32) comparacion -> . IDCHAR signocompar IDCHAR
    (33) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (110) ifcondicion -> . comparacion
    (111) ifcondicion -> . comparacion signoconect ifcondicion
    (112) ifcondicion -> . LPAREN comparacion RPAREN
    (113) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (114) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    ID              shift and go to state 48
    IDCHAR          shift and go to state 52
    IDSTRING        shift and go to state 53
    INTTYPE         shift and go to state 54
    NINTTYPE        shift and go to state 55
    FLOATTYPE       shift and go to state 56
    LPAREN          shift and go to state 59
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    ifparams                       shift and go to state 90
    comparacion                    shift and go to state 91
    ifcondicion                    shift and go to state 92
    boolean                        shift and go to state 47

state 45

    (109) ifblock -> IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 93


state 46

    (99) ifparams -> ifcondicion .

    LLLAVE          reduce using rule 99 (ifparams -> ifcondicion .)
    ENDCHAR         reduce using rule 99 (ifparams -> ifcondicion .)


state 47

    (100) ifparams -> boolean .
    (42) comparacion -> boolean . signocompar boolean
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    LLLAVE          reduce using rule 100 (ifparams -> boolean .)
    RPAREN          reduce using rule 100 (ifparams -> boolean .)
    ENDCHAR         reduce using rule 100 (ifparams -> boolean .)
    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 94

state 48

    (101) ifparams -> ID .
    (31) comparacion -> ID . signocompar ID
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    LLLAVE          reduce using rule 101 (ifparams -> ID .)
    RPAREN          reduce using rule 101 (ifparams -> ID .)
    ENDCHAR         reduce using rule 101 (ifparams -> ID .)
    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 99

state 49

    (110) ifcondicion -> comparacion .
    (111) ifcondicion -> comparacion . signoconect ifcondicion
    (80) signoconect -> . DAMPERSAND
    (81) signoconect -> . OR

    LLLAVE          reduce using rule 110 (ifcondicion -> comparacion .)
    RPAREN          reduce using rule 110 (ifcondicion -> comparacion .)
    ENDCHAR         reduce using rule 110 (ifcondicion -> comparacion .)
    DAMPERSAND      shift and go to state 101
    OR              shift and go to state 102

    signoconect                    shift and go to state 100

state 50

    (95) boolean -> TRUE .

    MAYORQUE        reduce using rule 95 (boolean -> TRUE .)
    MENORQUE        reduce using rule 95 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 95 (boolean -> TRUE .)
    IDENTICO        reduce using rule 95 (boolean -> TRUE .)
    LLLAVE          reduce using rule 95 (boolean -> TRUE .)
    RPAREN          reduce using rule 95 (boolean -> TRUE .)
    ENDCHAR         reduce using rule 95 (boolean -> TRUE .)
    DAMPERSAND      reduce using rule 95 (boolean -> TRUE .)
    OR              reduce using rule 95 (boolean -> TRUE .)


state 51

    (96) boolean -> FALSE .

    MAYORQUE        reduce using rule 96 (boolean -> FALSE .)
    MENORQUE        reduce using rule 96 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 96 (boolean -> FALSE .)
    IDENTICO        reduce using rule 96 (boolean -> FALSE .)
    LLLAVE          reduce using rule 96 (boolean -> FALSE .)
    RPAREN          reduce using rule 96 (boolean -> FALSE .)
    ENDCHAR         reduce using rule 96 (boolean -> FALSE .)
    DAMPERSAND      reduce using rule 96 (boolean -> FALSE .)
    OR              reduce using rule 96 (boolean -> FALSE .)


state 52

    (32) comparacion -> IDCHAR . signocompar IDCHAR
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 103

state 53

    (33) comparacion -> IDSTRING . signocompar IDSTRING
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 104

state 54

    (36) comparacion -> INTTYPE . signocompar INTTYPE
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 105

state 55

    (37) comparacion -> NINTTYPE . signocompar NINTTYPE
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 106

state 56

    (38) comparacion -> FLOATTYPE . signocompar FLOATTYPE
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 107

state 57

    (78) entrada -> IO DOSDOBLEPUNTOS . STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> IO DOSDOBLEPUNTOS . STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    STDIN           shift and go to state 108


state 58

    (35) while -> WHILE ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 109


state 59

    (112) ifcondicion -> LPAREN . comparacion RPAREN
    (113) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (114) ifcondicion -> LPAREN . ifcondicion RPAREN
    (31) comparacion -> . ID signocompar ID
    (32) comparacion -> . IDCHAR signocompar IDCHAR
    (33) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (110) ifcondicion -> . comparacion
    (111) ifcondicion -> . comparacion signoconect ifcondicion
    (112) ifcondicion -> . LPAREN comparacion RPAREN
    (113) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (114) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    ID              shift and go to state 111
    IDCHAR          shift and go to state 52
    IDSTRING        shift and go to state 53
    INTTYPE         shift and go to state 54
    NINTTYPE        shift and go to state 55
    FLOATTYPE       shift and go to state 56
    LPAREN          shift and go to state 59
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    comparacion                    shift and go to state 91
    ifcondicion                    shift and go to state 110
    boolean                        shift and go to state 112

state 60

    (104) elseifblock -> ifblock ELSE IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> ifblock ELSE IF . ifparams LLLAVE cuerpof RLLAVE
    (99) ifparams -> . ifcondicion
    (100) ifparams -> . boolean
    (101) ifparams -> . ID
    (110) ifcondicion -> . comparacion
    (111) ifcondicion -> . comparacion signoconect ifcondicion
    (112) ifcondicion -> . LPAREN comparacion RPAREN
    (113) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (114) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE
    (31) comparacion -> . ID signocompar ID
    (32) comparacion -> . IDCHAR signocompar IDCHAR
    (33) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean

    LPAREN          shift and go to state 113
    ID              shift and go to state 48
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    IDCHAR          shift and go to state 52
    IDSTRING        shift and go to state 53
    INTTYPE         shift and go to state 54
    NINTTYPE        shift and go to state 55
    FLOATTYPE       shift and go to state 56

    ifparams                       shift and go to state 114
    ifcondicion                    shift and go to state 46
    boolean                        shift and go to state 47
    comparacion                    shift and go to state 49

state 61

    (102) elseblock -> ifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (17) metodo -> . reasignacion
    (18) metodo -> . pushString
    (19) metodo -> . casting
    (34) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (106) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> . LET ID IGUAL valor ENDCHAR
    (119) asignacion -> . LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (97) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (89) loop -> . LOOP LLLAVE metodo RLLAVE
    (108) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (104) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (103) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (98) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> . ID signo ID
    (130) sumaint -> . LET ID IGUAL ID signo ID ENDCHAR
    (78) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE
    (116) reasignacion -> . ID IGUAL valor ENDCHAR
    (121) pushString -> . ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> . ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (123) casting -> . LET ID IGUAL ID AS uintsize
    (124) casting -> . LET ID IGUAL ID AS intsize
    (125) casting -> . LET ID IGUAL ID AS CHAR

    LET             shift and go to state 21
    CONST           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOOP            shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 20
    IO              shift and go to state 26
    WHILE           shift and go to state 27

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 115
    metodo                         shift and go to state 116
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    reasignacion                   shift and go to state 16
    pushString                     shift and go to state 17
    casting                        shift and go to state 18

state 62

    (103) elseblock -> elseifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (17) metodo -> . reasignacion
    (18) metodo -> . pushString
    (19) metodo -> . casting
    (34) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (106) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> . LET ID IGUAL valor ENDCHAR
    (119) asignacion -> . LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (97) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (89) loop -> . LOOP LLLAVE metodo RLLAVE
    (108) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (104) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (103) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (98) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> . ID signo ID
    (130) sumaint -> . LET ID IGUAL ID signo ID ENDCHAR
    (78) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE
    (116) reasignacion -> . ID IGUAL valor ENDCHAR
    (121) pushString -> . ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> . ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (123) casting -> . LET ID IGUAL ID AS uintsize
    (124) casting -> . LET ID IGUAL ID AS intsize
    (125) casting -> . LET ID IGUAL ID AS CHAR

    LET             shift and go to state 21
    CONST           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOOP            shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 20
    IO              shift and go to state 26
    WHILE           shift and go to state 27

    elseifblock                    shift and go to state 8
    cuerpof                        shift and go to state 117
    metodo                         shift and go to state 116
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    reasignacion                   shift and go to state 16
    pushString                     shift and go to state 17
    casting                        shift and go to state 18

state 63

    (117) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (118) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN ID LPAREN . params RPAREN LLLAVE cuerpof RLLAVE
    (93) params -> . ID COLON datatype
    (94) params -> . ID COLON datatype COMA params

    ID              shift and go to state 118

    params                         shift and go to state 119

state 64

    (98) vectorpush -> ID POINT PUSH . LPAREN INTTYPE RPAREN ENDCHAR

    LPAREN          shift and go to state 120


state 65

    (127) llpushfront -> ID POINT PUSH_FRONT . LPAREN INTTYPE RPAREN ENDCHAR

    LPAREN          shift and go to state 121


state 66

    (128) llpopback -> ID POINT POP_BACK . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 122


state 67

    (121) pushString -> ID POINT PUSH_STR . LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> ID POINT PUSH_STR . LPAREN IDCHAR RPAREN ENDCHAR

    LPAREN          shift and go to state 123


state 68

    (129) sumaint -> ID signo ID .

    $end            reduce using rule 129 (sumaint -> ID signo ID .)
    RLLAVE          reduce using rule 129 (sumaint -> ID signo ID .)
    LET             reduce using rule 129 (sumaint -> ID signo ID .)
    CONST           reduce using rule 129 (sumaint -> ID signo ID .)
    PRINTLN         reduce using rule 129 (sumaint -> ID signo ID .)
    LOOP            reduce using rule 129 (sumaint -> ID signo ID .)
    IF              reduce using rule 129 (sumaint -> ID signo ID .)
    ID              reduce using rule 129 (sumaint -> ID signo ID .)
    IO              reduce using rule 129 (sumaint -> ID signo ID .)
    WHILE           reduce using rule 129 (sumaint -> ID signo ID .)
    RETURN          reduce using rule 129 (sumaint -> ID signo ID .)


state 69

    (23) valor -> ID .
    (74) conectores -> ID . signoconect ID
    (31) comparacion -> ID . signocompar ID
    (80) signoconect -> . DAMPERSAND
    (81) signoconect -> . OR
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 23 (valor -> ID .)
    DAMPERSAND      shift and go to state 101
    OR              shift and go to state 102
    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signoconect                    shift and go to state 124
    signocompar                    shift and go to state 99

state 70

    (116) reasignacion -> ID IGUAL valor . ENDCHAR

    ENDCHAR         shift and go to state 125


state 71

    (20) valor -> valornumerico .
    (43) expresion -> valornumerico . signo valornumerico
    (65) signo -> . PLUS
    (66) signo -> . TIMES
    (67) signo -> . MINUS
    (68) signo -> . PORCENTAJE
    (69) signo -> . DIVIDE

    ENDCHAR         reduce using rule 20 (valor -> valornumerico .)
    PLUS            shift and go to state 34
    TIMES           shift and go to state 35
    MINUS           shift and go to state 36
    PORCENTAJE      shift and go to state 37
    DIVIDE          shift and go to state 38

    signo                          shift and go to state 126

state 72

    (21) valor -> TRUE .
    (95) boolean -> TRUE .

    ENDCHAR         reduce using rule 21 (valor -> TRUE .)
    DAMPERSAND      reduce using rule 95 (boolean -> TRUE .)
    OR              reduce using rule 95 (boolean -> TRUE .)
    MAYORQUE        reduce using rule 95 (boolean -> TRUE .)
    MENORQUE        reduce using rule 95 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 95 (boolean -> TRUE .)
    IDENTICO        reduce using rule 95 (boolean -> TRUE .)


state 73

    (22) valor -> FALSE .
    (96) boolean -> FALSE .

    ENDCHAR         reduce using rule 22 (valor -> FALSE .)
    DAMPERSAND      reduce using rule 96 (boolean -> FALSE .)
    OR              reduce using rule 96 (boolean -> FALSE .)
    MAYORQUE        reduce using rule 96 (boolean -> FALSE .)
    MENORQUE        reduce using rule 96 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 96 (boolean -> FALSE .)
    IDENTICO        reduce using rule 96 (boolean -> FALSE .)


state 74

    (24) valor -> IDCHAR .
    (32) comparacion -> IDCHAR . signocompar IDCHAR
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 24 (valor -> IDCHAR .)
    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 103

state 75

    (25) valor -> IDSTRING .
    (33) comparacion -> IDSTRING . signocompar IDSTRING
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 25 (valor -> IDSTRING .)
    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 104

state 76

    (26) valor -> expresion .

    ENDCHAR         reduce using rule 26 (valor -> expresion .)


state 77

    (27) valor -> conectores .

    ENDCHAR         reduce using rule 27 (valor -> conectores .)


state 78

    (28) valor -> comparacion .

    ENDCHAR         reduce using rule 28 (valor -> comparacion .)


state 79

    (50) valornumerico -> NINTTYPE .
    (37) comparacion -> NINTTYPE . signocompar NINTTYPE
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    PLUS            reduce using rule 50 (valornumerico -> NINTTYPE .)
    TIMES           reduce using rule 50 (valornumerico -> NINTTYPE .)
    MINUS           reduce using rule 50 (valornumerico -> NINTTYPE .)
    PORCENTAJE      reduce using rule 50 (valornumerico -> NINTTYPE .)
    DIVIDE          reduce using rule 50 (valornumerico -> NINTTYPE .)
    ENDCHAR         reduce using rule 50 (valornumerico -> NINTTYPE .)
    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 106

state 80

    (51) valornumerico -> INTTYPE .
    (36) comparacion -> INTTYPE . signocompar INTTYPE
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    PLUS            reduce using rule 51 (valornumerico -> INTTYPE .)
    TIMES           reduce using rule 51 (valornumerico -> INTTYPE .)
    MINUS           reduce using rule 51 (valornumerico -> INTTYPE .)
    PORCENTAJE      reduce using rule 51 (valornumerico -> INTTYPE .)
    DIVIDE          reduce using rule 51 (valornumerico -> INTTYPE .)
    ENDCHAR         reduce using rule 51 (valornumerico -> INTTYPE .)
    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 105

state 81

    (52) valornumerico -> FLOATTYPE .
    (38) comparacion -> FLOATTYPE . signocompar FLOATTYPE
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    PLUS            reduce using rule 52 (valornumerico -> FLOATTYPE .)
    TIMES           reduce using rule 52 (valornumerico -> FLOATTYPE .)
    MINUS           reduce using rule 52 (valornumerico -> FLOATTYPE .)
    PORCENTAJE      reduce using rule 52 (valornumerico -> FLOATTYPE .)
    DIVIDE          reduce using rule 52 (valornumerico -> FLOATTYPE .)
    ENDCHAR         reduce using rule 52 (valornumerico -> FLOATTYPE .)
    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 107

state 82

    (53) valornumerico -> NFLOATTYPE .

    PLUS            reduce using rule 53 (valornumerico -> NFLOATTYPE .)
    TIMES           reduce using rule 53 (valornumerico -> NFLOATTYPE .)
    MINUS           reduce using rule 53 (valornumerico -> NFLOATTYPE .)
    PORCENTAJE      reduce using rule 53 (valornumerico -> NFLOATTYPE .)
    DIVIDE          reduce using rule 53 (valornumerico -> NFLOATTYPE .)
    ENDCHAR         reduce using rule 53 (valornumerico -> NFLOATTYPE .)


state 83

    (72) conectores -> boolean . signoconect boolean
    (42) comparacion -> boolean . signocompar boolean
    (80) signoconect -> . DAMPERSAND
    (81) signoconect -> . OR
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    DAMPERSAND      shift and go to state 101
    OR              shift and go to state 102
    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signoconect                    shift and go to state 127
    signocompar                    shift and go to state 94

state 84

    (73) conectores -> EXCLAM . boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    boolean                        shift and go to state 128

state 85

    (34) asignacion -> LET MUT ID . IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (106) asignacion -> LET MUT ID . IGUAL valor ENDCHAR
    (107) asignacion -> LET MUT ID . IGUAL estructuras ENDCHAR
    (119) asignacion -> LET MUT ID . IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> LET MUT ID . IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    IGUAL           shift and go to state 129


state 86

    (115) asignacion -> LET ID IGUAL . valor ENDCHAR
    (130) sumaint -> LET ID IGUAL . ID signo ID ENDCHAR
    (123) casting -> LET ID IGUAL . ID AS uintsize
    (124) casting -> LET ID IGUAL . ID AS intsize
    (125) casting -> LET ID IGUAL . ID AS CHAR
    (20) valor -> . valornumerico
    (21) valor -> . TRUE
    (22) valor -> . FALSE
    (23) valor -> . ID
    (24) valor -> . IDCHAR
    (25) valor -> . IDSTRING
    (26) valor -> . expresion
    (27) valor -> . conectores
    (28) valor -> . comparacion
    (50) valornumerico -> . NINTTYPE
    (51) valornumerico -> . INTTYPE
    (52) valornumerico -> . FLOATTYPE
    (53) valornumerico -> . NFLOATTYPE
    (43) expresion -> . valornumerico signo valornumerico
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (31) comparacion -> . ID signocompar ID
    (32) comparacion -> . IDCHAR signocompar IDCHAR
    (33) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    ID              shift and go to state 130
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    IDCHAR          shift and go to state 74
    IDSTRING        shift and go to state 75
    NINTTYPE        shift and go to state 79
    INTTYPE         shift and go to state 80
    FLOATTYPE       shift and go to state 81
    NFLOATTYPE      shift and go to state 82
    EXCLAM          shift and go to state 84

    valor                          shift and go to state 131
    valornumerico                  shift and go to state 71
    expresion                      shift and go to state 76
    conectores                     shift and go to state 77
    comparacion                    shift and go to state 78
    boolean                        shift and go to state 83

state 87

    (39) asignacion -> CONST ID COLON . intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> CONST ID COLON . intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> CONST ID COLON . uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> CONST ID COLON . floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> CONST ID COLON . strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> CONST ID COLON . STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> CONST ID COLON . STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> CONST ID COLON . BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> CONST ID COLON . CHAR IGUAL IDCHAR ENDCHAR
    (60) intsize -> . INT8
    (61) intsize -> . INT16
    (62) intsize -> . INT32
    (63) intsize -> . INT64
    (64) intsize -> . INT128
    (83) uintsize -> . UINT8
    (84) uintsize -> . UINT16
    (85) uintsize -> . UINT32
    (86) uintsize -> . UINT64
    (87) uintsize -> . UINT128
    (76) floatsize -> . FLOAT32
    (77) floatsize -> . FLOAT64
    (90) strsize -> . AMPERSAND COMILLA STATIC STR
    (91) strsize -> . AMPERSAND STR

    STRING          shift and go to state 136
    BOOL            shift and go to state 137
    CHAR            shift and go to state 138
    INT8            shift and go to state 139
    INT16           shift and go to state 140
    INT32           shift and go to state 141
    INT64           shift and go to state 142
    INT128          shift and go to state 143
    UINT8           shift and go to state 144
    UINT16          shift and go to state 145
    UINT32          shift and go to state 146
    UINT64          shift and go to state 147
    UINT128         shift and go to state 148
    FLOAT32         shift and go to state 149
    FLOAT64         shift and go to state 150
    AMPERSAND       shift and go to state 151

    intsize                        shift and go to state 132
    uintsize                       shift and go to state 133
    floatsize                      shift and go to state 134
    strsize                        shift and go to state 135

state 88

    (97) impresion -> PRINTLN LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 152


state 89

    (89) loop -> LOOP LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 153


state 90

    (108) ifblock -> IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 154


state 91

    (112) ifcondicion -> LPAREN comparacion . RPAREN
    (113) ifcondicion -> LPAREN comparacion . RPAREN signoconect ifcondicion
    (110) ifcondicion -> comparacion .
    (111) ifcondicion -> comparacion . signoconect ifcondicion
    (80) signoconect -> . DAMPERSAND
    (81) signoconect -> . OR

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 155
    DAMPERSAND      shift and go to state 101
    OR              shift and go to state 102

  ! RPAREN          [ reduce using rule 110 (ifcondicion -> comparacion .) ]

    signoconect                    shift and go to state 100

state 92

    (114) ifcondicion -> LPAREN ifcondicion . RPAREN
    (99) ifparams -> ifcondicion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 156

  ! RPAREN          [ reduce using rule 99 (ifparams -> ifcondicion .) ]


state 93

    (109) ifblock -> IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (17) metodo -> . reasignacion
    (18) metodo -> . pushString
    (19) metodo -> . casting
    (34) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (106) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> . LET ID IGUAL valor ENDCHAR
    (119) asignacion -> . LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (97) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (89) loop -> . LOOP LLLAVE metodo RLLAVE
    (108) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (104) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (103) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (98) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> . ID signo ID
    (130) sumaint -> . LET ID IGUAL ID signo ID ENDCHAR
    (78) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE
    (116) reasignacion -> . ID IGUAL valor ENDCHAR
    (121) pushString -> . ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> . ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (123) casting -> . LET ID IGUAL ID AS uintsize
    (124) casting -> . LET ID IGUAL ID AS intsize
    (125) casting -> . LET ID IGUAL ID AS CHAR

    LET             shift and go to state 21
    CONST           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOOP            shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 20
    IO              shift and go to state 26
    WHILE           shift and go to state 27

    cuerpof                        shift and go to state 157
    metodo                         shift and go to state 116
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    reasignacion                   shift and go to state 16
    pushString                     shift and go to state 17
    casting                        shift and go to state 18

state 94

    (42) comparacion -> boolean signocompar . boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    boolean                        shift and go to state 158

state 95

    (56) signocompar -> MAYORQUE .

    TRUE            reduce using rule 56 (signocompar -> MAYORQUE .)
    FALSE           reduce using rule 56 (signocompar -> MAYORQUE .)
    ID              reduce using rule 56 (signocompar -> MAYORQUE .)
    IDCHAR          reduce using rule 56 (signocompar -> MAYORQUE .)
    IDSTRING        reduce using rule 56 (signocompar -> MAYORQUE .)
    INTTYPE         reduce using rule 56 (signocompar -> MAYORQUE .)
    NINTTYPE        reduce using rule 56 (signocompar -> MAYORQUE .)
    FLOATTYPE       reduce using rule 56 (signocompar -> MAYORQUE .)


state 96

    (57) signocompar -> MENORQUE .

    TRUE            reduce using rule 57 (signocompar -> MENORQUE .)
    FALSE           reduce using rule 57 (signocompar -> MENORQUE .)
    ID              reduce using rule 57 (signocompar -> MENORQUE .)
    IDCHAR          reduce using rule 57 (signocompar -> MENORQUE .)
    IDSTRING        reduce using rule 57 (signocompar -> MENORQUE .)
    INTTYPE         reduce using rule 57 (signocompar -> MENORQUE .)
    NINTTYPE        reduce using rule 57 (signocompar -> MENORQUE .)
    FLOATTYPE       reduce using rule 57 (signocompar -> MENORQUE .)


state 97

    (58) signocompar -> DIFERENTE .

    TRUE            reduce using rule 58 (signocompar -> DIFERENTE .)
    FALSE           reduce using rule 58 (signocompar -> DIFERENTE .)
    ID              reduce using rule 58 (signocompar -> DIFERENTE .)
    IDCHAR          reduce using rule 58 (signocompar -> DIFERENTE .)
    IDSTRING        reduce using rule 58 (signocompar -> DIFERENTE .)
    INTTYPE         reduce using rule 58 (signocompar -> DIFERENTE .)
    NINTTYPE        reduce using rule 58 (signocompar -> DIFERENTE .)
    FLOATTYPE       reduce using rule 58 (signocompar -> DIFERENTE .)


state 98

    (59) signocompar -> IDENTICO .

    TRUE            reduce using rule 59 (signocompar -> IDENTICO .)
    FALSE           reduce using rule 59 (signocompar -> IDENTICO .)
    ID              reduce using rule 59 (signocompar -> IDENTICO .)
    IDCHAR          reduce using rule 59 (signocompar -> IDENTICO .)
    IDSTRING        reduce using rule 59 (signocompar -> IDENTICO .)
    INTTYPE         reduce using rule 59 (signocompar -> IDENTICO .)
    NINTTYPE        reduce using rule 59 (signocompar -> IDENTICO .)
    FLOATTYPE       reduce using rule 59 (signocompar -> IDENTICO .)


state 99

    (31) comparacion -> ID signocompar . ID

    ID              shift and go to state 159


state 100

    (111) ifcondicion -> comparacion signoconect . ifcondicion
    (110) ifcondicion -> . comparacion
    (111) ifcondicion -> . comparacion signoconect ifcondicion
    (112) ifcondicion -> . LPAREN comparacion RPAREN
    (113) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (114) ifcondicion -> . LPAREN ifcondicion RPAREN
    (31) comparacion -> . ID signocompar ID
    (32) comparacion -> . IDCHAR signocompar IDCHAR
    (33) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    LPAREN          shift and go to state 59
    ID              shift and go to state 111
    IDCHAR          shift and go to state 52
    IDSTRING        shift and go to state 53
    INTTYPE         shift and go to state 54
    NINTTYPE        shift and go to state 55
    FLOATTYPE       shift and go to state 56
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    comparacion                    shift and go to state 49
    ifcondicion                    shift and go to state 160
    boolean                        shift and go to state 112

state 101

    (80) signoconect -> DAMPERSAND .

    LPAREN          reduce using rule 80 (signoconect -> DAMPERSAND .)
    ID              reduce using rule 80 (signoconect -> DAMPERSAND .)
    IDCHAR          reduce using rule 80 (signoconect -> DAMPERSAND .)
    IDSTRING        reduce using rule 80 (signoconect -> DAMPERSAND .)
    INTTYPE         reduce using rule 80 (signoconect -> DAMPERSAND .)
    NINTTYPE        reduce using rule 80 (signoconect -> DAMPERSAND .)
    FLOATTYPE       reduce using rule 80 (signoconect -> DAMPERSAND .)
    TRUE            reduce using rule 80 (signoconect -> DAMPERSAND .)
    FALSE           reduce using rule 80 (signoconect -> DAMPERSAND .)


state 102

    (81) signoconect -> OR .

    LPAREN          reduce using rule 81 (signoconect -> OR .)
    ID              reduce using rule 81 (signoconect -> OR .)
    IDCHAR          reduce using rule 81 (signoconect -> OR .)
    IDSTRING        reduce using rule 81 (signoconect -> OR .)
    INTTYPE         reduce using rule 81 (signoconect -> OR .)
    NINTTYPE        reduce using rule 81 (signoconect -> OR .)
    FLOATTYPE       reduce using rule 81 (signoconect -> OR .)
    TRUE            reduce using rule 81 (signoconect -> OR .)
    FALSE           reduce using rule 81 (signoconect -> OR .)


state 103

    (32) comparacion -> IDCHAR signocompar . IDCHAR

    IDCHAR          shift and go to state 161


state 104

    (33) comparacion -> IDSTRING signocompar . IDSTRING

    IDSTRING        shift and go to state 162


state 105

    (36) comparacion -> INTTYPE signocompar . INTTYPE

    INTTYPE         shift and go to state 163


state 106

    (37) comparacion -> NINTTYPE signocompar . NINTTYPE

    NINTTYPE        shift and go to state 164


state 107

    (38) comparacion -> FLOATTYPE signocompar . FLOATTYPE

    FLOATTYPE       shift and go to state 165


state 108

    (78) entrada -> IO DOSDOBLEPUNTOS STDIN . LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> IO DOSDOBLEPUNTOS STDIN . LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 166


state 109

    (35) while -> WHILE ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (17) metodo -> . reasignacion
    (18) metodo -> . pushString
    (19) metodo -> . casting
    (34) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (106) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> . LET ID IGUAL valor ENDCHAR
    (119) asignacion -> . LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (97) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (89) loop -> . LOOP LLLAVE metodo RLLAVE
    (108) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (104) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (103) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (98) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> . ID signo ID
    (130) sumaint -> . LET ID IGUAL ID signo ID ENDCHAR
    (78) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE
    (116) reasignacion -> . ID IGUAL valor ENDCHAR
    (121) pushString -> . ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> . ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (123) casting -> . LET ID IGUAL ID AS uintsize
    (124) casting -> . LET ID IGUAL ID AS intsize
    (125) casting -> . LET ID IGUAL ID AS CHAR

    LET             shift and go to state 21
    CONST           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOOP            shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 20
    IO              shift and go to state 26
    WHILE           shift and go to state 27

    cuerpof                        shift and go to state 167
    metodo                         shift and go to state 116
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    reasignacion                   shift and go to state 16
    pushString                     shift and go to state 17
    casting                        shift and go to state 18

state 110

    (114) ifcondicion -> LPAREN ifcondicion . RPAREN

    RPAREN          shift and go to state 156


state 111

    (31) comparacion -> ID . signocompar ID
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 99

state 112

    (42) comparacion -> boolean . signocompar boolean
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signocompar                    shift and go to state 94

state 113

    (104) elseifblock -> ifblock ELSE IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifcondicion -> LPAREN . comparacion RPAREN
    (113) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (114) ifcondicion -> LPAREN . ifcondicion RPAREN
    (99) ifparams -> . ifcondicion
    (100) ifparams -> . boolean
    (101) ifparams -> . ID
    (31) comparacion -> . ID signocompar ID
    (32) comparacion -> . IDCHAR signocompar IDCHAR
    (33) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (110) ifcondicion -> . comparacion
    (111) ifcondicion -> . comparacion signoconect ifcondicion
    (112) ifcondicion -> . LPAREN comparacion RPAREN
    (113) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (114) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    ID              shift and go to state 48
    IDCHAR          shift and go to state 52
    IDSTRING        shift and go to state 53
    INTTYPE         shift and go to state 54
    NINTTYPE        shift and go to state 55
    FLOATTYPE       shift and go to state 56
    LPAREN          shift and go to state 59
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    ifparams                       shift and go to state 168
    comparacion                    shift and go to state 91
    ifcondicion                    shift and go to state 92
    boolean                        shift and go to state 47

state 114

    (105) elseifblock -> ifblock ELSE IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 169


state 115

    (102) elseblock -> ifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 170


state 116

    (3) cuerpof -> metodo .
    (4) cuerpof -> metodo . cuerpof
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (17) metodo -> . reasignacion
    (18) metodo -> . pushString
    (19) metodo -> . casting
    (34) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (106) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> . LET ID IGUAL valor ENDCHAR
    (119) asignacion -> . LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (97) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (89) loop -> . LOOP LLLAVE metodo RLLAVE
    (108) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (104) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (103) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (98) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> . ID signo ID
    (130) sumaint -> . LET ID IGUAL ID signo ID ENDCHAR
    (78) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE
    (116) reasignacion -> . ID IGUAL valor ENDCHAR
    (121) pushString -> . ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> . ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (123) casting -> . LET ID IGUAL ID AS uintsize
    (124) casting -> . LET ID IGUAL ID AS intsize
    (125) casting -> . LET ID IGUAL ID AS CHAR

  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          reduce using rule 3 (cuerpof -> metodo .)
    RETURN          reduce using rule 3 (cuerpof -> metodo .)
    LET             shift and go to state 21
    CONST           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOOP            shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 20
    IO              shift and go to state 26
    WHILE           shift and go to state 27

  ! ID              [ reduce using rule 3 (cuerpof -> metodo .) ]

    metodo                         shift and go to state 116
    cuerpof                        shift and go to state 171
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    reasignacion                   shift and go to state 16
    pushString                     shift and go to state 17
    casting                        shift and go to state 18

state 117

    (103) elseblock -> elseifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 172


state 118

    (93) params -> ID . COLON datatype
    (94) params -> ID . COLON datatype COMA params

    COLON           shift and go to state 173


state 119

    (117) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (118) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN ID LPAREN params . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 174


state 120

    (98) vectorpush -> ID POINT PUSH LPAREN . INTTYPE RPAREN ENDCHAR

    INTTYPE         shift and go to state 175


state 121

    (127) llpushfront -> ID POINT PUSH_FRONT LPAREN . INTTYPE RPAREN ENDCHAR

    INTTYPE         shift and go to state 176


state 122

    (128) llpopback -> ID POINT POP_BACK LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 177


state 123

    (121) pushString -> ID POINT PUSH_STR LPAREN . IDSTRING RPAREN ENDCHAR
    (122) pushString -> ID POINT PUSH_STR LPAREN . IDCHAR RPAREN ENDCHAR

    IDSTRING        shift and go to state 178
    IDCHAR          shift and go to state 179


state 124

    (74) conectores -> ID signoconect . ID

    ID              shift and go to state 180


state 125

    (116) reasignacion -> ID IGUAL valor ENDCHAR .

    $end            reduce using rule 116 (reasignacion -> ID IGUAL valor ENDCHAR .)
    RLLAVE          reduce using rule 116 (reasignacion -> ID IGUAL valor ENDCHAR .)
    LET             reduce using rule 116 (reasignacion -> ID IGUAL valor ENDCHAR .)
    CONST           reduce using rule 116 (reasignacion -> ID IGUAL valor ENDCHAR .)
    PRINTLN         reduce using rule 116 (reasignacion -> ID IGUAL valor ENDCHAR .)
    LOOP            reduce using rule 116 (reasignacion -> ID IGUAL valor ENDCHAR .)
    IF              reduce using rule 116 (reasignacion -> ID IGUAL valor ENDCHAR .)
    ID              reduce using rule 116 (reasignacion -> ID IGUAL valor ENDCHAR .)
    IO              reduce using rule 116 (reasignacion -> ID IGUAL valor ENDCHAR .)
    WHILE           reduce using rule 116 (reasignacion -> ID IGUAL valor ENDCHAR .)
    RETURN          reduce using rule 116 (reasignacion -> ID IGUAL valor ENDCHAR .)


state 126

    (43) expresion -> valornumerico signo . valornumerico
    (50) valornumerico -> . NINTTYPE
    (51) valornumerico -> . INTTYPE
    (52) valornumerico -> . FLOATTYPE
    (53) valornumerico -> . NFLOATTYPE

    NINTTYPE        shift and go to state 182
    INTTYPE         shift and go to state 183
    FLOATTYPE       shift and go to state 184
    NFLOATTYPE      shift and go to state 82

    valornumerico                  shift and go to state 181

state 127

    (72) conectores -> boolean signoconect . boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    boolean                        shift and go to state 185

state 128

    (73) conectores -> EXCLAM boolean .

    ENDCHAR         reduce using rule 73 (conectores -> EXCLAM boolean .)


state 129

    (34) asignacion -> LET MUT ID IGUAL . VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (106) asignacion -> LET MUT ID IGUAL . valor ENDCHAR
    (107) asignacion -> LET MUT ID IGUAL . estructuras ENDCHAR
    (119) asignacion -> LET MUT ID IGUAL . STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> LET MUT ID IGUAL . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (20) valor -> . valornumerico
    (21) valor -> . TRUE
    (22) valor -> . FALSE
    (23) valor -> . ID
    (24) valor -> . IDCHAR
    (25) valor -> . IDSTRING
    (26) valor -> . expresion
    (27) valor -> . conectores
    (28) valor -> . comparacion
    (29) estructuras -> . linkedlist
    (30) estructuras -> . hashmap
    (50) valornumerico -> . NINTTYPE
    (51) valornumerico -> . INTTYPE
    (52) valornumerico -> . FLOATTYPE
    (53) valornumerico -> . NFLOATTYPE
    (43) expresion -> . valornumerico signo valornumerico
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (31) comparacion -> . ID signocompar ID
    (32) comparacion -> . IDCHAR signocompar IDCHAR
    (33) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (41) hashmap -> . HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    VEC             shift and go to state 186
    STRING          shift and go to state 189
    LINKEDLIST      shift and go to state 190
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    ID              shift and go to state 69
    IDCHAR          shift and go to state 74
    IDSTRING        shift and go to state 75
    NINTTYPE        shift and go to state 79
    INTTYPE         shift and go to state 80
    FLOATTYPE       shift and go to state 81
    NFLOATTYPE      shift and go to state 82
    EXCLAM          shift and go to state 84
    HASHMAP         shift and go to state 193

    valor                          shift and go to state 187
    estructuras                    shift and go to state 188
    valornumerico                  shift and go to state 71
    expresion                      shift and go to state 76
    conectores                     shift and go to state 77
    comparacion                    shift and go to state 78
    linkedlist                     shift and go to state 191
    hashmap                        shift and go to state 192
    boolean                        shift and go to state 83

state 130

    (130) sumaint -> LET ID IGUAL ID . signo ID ENDCHAR
    (123) casting -> LET ID IGUAL ID . AS uintsize
    (124) casting -> LET ID IGUAL ID . AS intsize
    (125) casting -> LET ID IGUAL ID . AS CHAR
    (23) valor -> ID .
    (74) conectores -> ID . signoconect ID
    (31) comparacion -> ID . signocompar ID
    (65) signo -> . PLUS
    (66) signo -> . TIMES
    (67) signo -> . MINUS
    (68) signo -> . PORCENTAJE
    (69) signo -> . DIVIDE
    (80) signoconect -> . DAMPERSAND
    (81) signoconect -> . OR
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    AS              shift and go to state 195
    ENDCHAR         reduce using rule 23 (valor -> ID .)
    PLUS            shift and go to state 34
    TIMES           shift and go to state 35
    MINUS           shift and go to state 36
    PORCENTAJE      shift and go to state 37
    DIVIDE          shift and go to state 38
    DAMPERSAND      shift and go to state 101
    OR              shift and go to state 102
    MAYORQUE        shift and go to state 95
    MENORQUE        shift and go to state 96
    DIFERENTE       shift and go to state 97
    IDENTICO        shift and go to state 98

    signo                          shift and go to state 194
    signoconect                    shift and go to state 124
    signocompar                    shift and go to state 99

state 131

    (115) asignacion -> LET ID IGUAL valor . ENDCHAR

    ENDCHAR         shift and go to state 196


state 132

    (39) asignacion -> CONST ID COLON intsize . IGUAL INTTYPE ENDCHAR
    (40) asignacion -> CONST ID COLON intsize . IGUAL NINTTYPE ENDCHAR

    IGUAL           shift and go to state 197


state 133

    (54) asignacion -> CONST ID COLON uintsize . IGUAL INTTYPE ENDCHAR

    IGUAL           shift and go to state 198


state 134

    (55) asignacion -> CONST ID COLON floatsize . IGUAL FLOATTYPE ENDCHAR

    IGUAL           shift and go to state 199


state 135

    (70) asignacion -> CONST ID COLON strsize . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 200


state 136

    (75) asignacion -> CONST ID COLON STRING . IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> CONST ID COLON STRING . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 201


state 137

    (88) asignacion -> CONST ID COLON BOOL . IGUAL boolean ENDCHAR

    IGUAL           shift and go to state 202


state 138

    (92) asignacion -> CONST ID COLON CHAR . IGUAL IDCHAR ENDCHAR

    IGUAL           shift and go to state 203


state 139

    (60) intsize -> INT8 .

    IGUAL           reduce using rule 60 (intsize -> INT8 .)
    COMA            reduce using rule 60 (intsize -> INT8 .)
    RPAREN          reduce using rule 60 (intsize -> INT8 .)
    $end            reduce using rule 60 (intsize -> INT8 .)
    RLLAVE          reduce using rule 60 (intsize -> INT8 .)
    LET             reduce using rule 60 (intsize -> INT8 .)
    CONST           reduce using rule 60 (intsize -> INT8 .)
    PRINTLN         reduce using rule 60 (intsize -> INT8 .)
    LOOP            reduce using rule 60 (intsize -> INT8 .)
    IF              reduce using rule 60 (intsize -> INT8 .)
    ID              reduce using rule 60 (intsize -> INT8 .)
    IO              reduce using rule 60 (intsize -> INT8 .)
    WHILE           reduce using rule 60 (intsize -> INT8 .)
    RETURN          reduce using rule 60 (intsize -> INT8 .)
    LLLAVE          reduce using rule 60 (intsize -> INT8 .)


state 140

    (61) intsize -> INT16 .

    IGUAL           reduce using rule 61 (intsize -> INT16 .)
    COMA            reduce using rule 61 (intsize -> INT16 .)
    RPAREN          reduce using rule 61 (intsize -> INT16 .)
    $end            reduce using rule 61 (intsize -> INT16 .)
    RLLAVE          reduce using rule 61 (intsize -> INT16 .)
    LET             reduce using rule 61 (intsize -> INT16 .)
    CONST           reduce using rule 61 (intsize -> INT16 .)
    PRINTLN         reduce using rule 61 (intsize -> INT16 .)
    LOOP            reduce using rule 61 (intsize -> INT16 .)
    IF              reduce using rule 61 (intsize -> INT16 .)
    ID              reduce using rule 61 (intsize -> INT16 .)
    IO              reduce using rule 61 (intsize -> INT16 .)
    WHILE           reduce using rule 61 (intsize -> INT16 .)
    RETURN          reduce using rule 61 (intsize -> INT16 .)
    LLLAVE          reduce using rule 61 (intsize -> INT16 .)


state 141

    (62) intsize -> INT32 .

    IGUAL           reduce using rule 62 (intsize -> INT32 .)
    COMA            reduce using rule 62 (intsize -> INT32 .)
    RPAREN          reduce using rule 62 (intsize -> INT32 .)
    $end            reduce using rule 62 (intsize -> INT32 .)
    RLLAVE          reduce using rule 62 (intsize -> INT32 .)
    LET             reduce using rule 62 (intsize -> INT32 .)
    CONST           reduce using rule 62 (intsize -> INT32 .)
    PRINTLN         reduce using rule 62 (intsize -> INT32 .)
    LOOP            reduce using rule 62 (intsize -> INT32 .)
    IF              reduce using rule 62 (intsize -> INT32 .)
    ID              reduce using rule 62 (intsize -> INT32 .)
    IO              reduce using rule 62 (intsize -> INT32 .)
    WHILE           reduce using rule 62 (intsize -> INT32 .)
    RETURN          reduce using rule 62 (intsize -> INT32 .)
    LLLAVE          reduce using rule 62 (intsize -> INT32 .)


state 142

    (63) intsize -> INT64 .

    IGUAL           reduce using rule 63 (intsize -> INT64 .)
    COMA            reduce using rule 63 (intsize -> INT64 .)
    RPAREN          reduce using rule 63 (intsize -> INT64 .)
    $end            reduce using rule 63 (intsize -> INT64 .)
    RLLAVE          reduce using rule 63 (intsize -> INT64 .)
    LET             reduce using rule 63 (intsize -> INT64 .)
    CONST           reduce using rule 63 (intsize -> INT64 .)
    PRINTLN         reduce using rule 63 (intsize -> INT64 .)
    LOOP            reduce using rule 63 (intsize -> INT64 .)
    IF              reduce using rule 63 (intsize -> INT64 .)
    ID              reduce using rule 63 (intsize -> INT64 .)
    IO              reduce using rule 63 (intsize -> INT64 .)
    WHILE           reduce using rule 63 (intsize -> INT64 .)
    RETURN          reduce using rule 63 (intsize -> INT64 .)
    LLLAVE          reduce using rule 63 (intsize -> INT64 .)


state 143

    (64) intsize -> INT128 .

    IGUAL           reduce using rule 64 (intsize -> INT128 .)
    COMA            reduce using rule 64 (intsize -> INT128 .)
    RPAREN          reduce using rule 64 (intsize -> INT128 .)
    $end            reduce using rule 64 (intsize -> INT128 .)
    RLLAVE          reduce using rule 64 (intsize -> INT128 .)
    LET             reduce using rule 64 (intsize -> INT128 .)
    CONST           reduce using rule 64 (intsize -> INT128 .)
    PRINTLN         reduce using rule 64 (intsize -> INT128 .)
    LOOP            reduce using rule 64 (intsize -> INT128 .)
    IF              reduce using rule 64 (intsize -> INT128 .)
    ID              reduce using rule 64 (intsize -> INT128 .)
    IO              reduce using rule 64 (intsize -> INT128 .)
    WHILE           reduce using rule 64 (intsize -> INT128 .)
    RETURN          reduce using rule 64 (intsize -> INT128 .)
    LLLAVE          reduce using rule 64 (intsize -> INT128 .)


state 144

    (83) uintsize -> UINT8 .

    IGUAL           reduce using rule 83 (uintsize -> UINT8 .)
    COMA            reduce using rule 83 (uintsize -> UINT8 .)
    RPAREN          reduce using rule 83 (uintsize -> UINT8 .)
    $end            reduce using rule 83 (uintsize -> UINT8 .)
    RLLAVE          reduce using rule 83 (uintsize -> UINT8 .)
    LET             reduce using rule 83 (uintsize -> UINT8 .)
    CONST           reduce using rule 83 (uintsize -> UINT8 .)
    PRINTLN         reduce using rule 83 (uintsize -> UINT8 .)
    LOOP            reduce using rule 83 (uintsize -> UINT8 .)
    IF              reduce using rule 83 (uintsize -> UINT8 .)
    ID              reduce using rule 83 (uintsize -> UINT8 .)
    IO              reduce using rule 83 (uintsize -> UINT8 .)
    WHILE           reduce using rule 83 (uintsize -> UINT8 .)
    RETURN          reduce using rule 83 (uintsize -> UINT8 .)
    LLLAVE          reduce using rule 83 (uintsize -> UINT8 .)


state 145

    (84) uintsize -> UINT16 .

    IGUAL           reduce using rule 84 (uintsize -> UINT16 .)
    COMA            reduce using rule 84 (uintsize -> UINT16 .)
    RPAREN          reduce using rule 84 (uintsize -> UINT16 .)
    $end            reduce using rule 84 (uintsize -> UINT16 .)
    RLLAVE          reduce using rule 84 (uintsize -> UINT16 .)
    LET             reduce using rule 84 (uintsize -> UINT16 .)
    CONST           reduce using rule 84 (uintsize -> UINT16 .)
    PRINTLN         reduce using rule 84 (uintsize -> UINT16 .)
    LOOP            reduce using rule 84 (uintsize -> UINT16 .)
    IF              reduce using rule 84 (uintsize -> UINT16 .)
    ID              reduce using rule 84 (uintsize -> UINT16 .)
    IO              reduce using rule 84 (uintsize -> UINT16 .)
    WHILE           reduce using rule 84 (uintsize -> UINT16 .)
    RETURN          reduce using rule 84 (uintsize -> UINT16 .)
    LLLAVE          reduce using rule 84 (uintsize -> UINT16 .)


state 146

    (85) uintsize -> UINT32 .

    IGUAL           reduce using rule 85 (uintsize -> UINT32 .)
    COMA            reduce using rule 85 (uintsize -> UINT32 .)
    RPAREN          reduce using rule 85 (uintsize -> UINT32 .)
    $end            reduce using rule 85 (uintsize -> UINT32 .)
    RLLAVE          reduce using rule 85 (uintsize -> UINT32 .)
    LET             reduce using rule 85 (uintsize -> UINT32 .)
    CONST           reduce using rule 85 (uintsize -> UINT32 .)
    PRINTLN         reduce using rule 85 (uintsize -> UINT32 .)
    LOOP            reduce using rule 85 (uintsize -> UINT32 .)
    IF              reduce using rule 85 (uintsize -> UINT32 .)
    ID              reduce using rule 85 (uintsize -> UINT32 .)
    IO              reduce using rule 85 (uintsize -> UINT32 .)
    WHILE           reduce using rule 85 (uintsize -> UINT32 .)
    RETURN          reduce using rule 85 (uintsize -> UINT32 .)
    LLLAVE          reduce using rule 85 (uintsize -> UINT32 .)


state 147

    (86) uintsize -> UINT64 .

    IGUAL           reduce using rule 86 (uintsize -> UINT64 .)
    COMA            reduce using rule 86 (uintsize -> UINT64 .)
    RPAREN          reduce using rule 86 (uintsize -> UINT64 .)
    $end            reduce using rule 86 (uintsize -> UINT64 .)
    RLLAVE          reduce using rule 86 (uintsize -> UINT64 .)
    LET             reduce using rule 86 (uintsize -> UINT64 .)
    CONST           reduce using rule 86 (uintsize -> UINT64 .)
    PRINTLN         reduce using rule 86 (uintsize -> UINT64 .)
    LOOP            reduce using rule 86 (uintsize -> UINT64 .)
    IF              reduce using rule 86 (uintsize -> UINT64 .)
    ID              reduce using rule 86 (uintsize -> UINT64 .)
    IO              reduce using rule 86 (uintsize -> UINT64 .)
    WHILE           reduce using rule 86 (uintsize -> UINT64 .)
    RETURN          reduce using rule 86 (uintsize -> UINT64 .)
    LLLAVE          reduce using rule 86 (uintsize -> UINT64 .)


state 148

    (87) uintsize -> UINT128 .

    IGUAL           reduce using rule 87 (uintsize -> UINT128 .)
    COMA            reduce using rule 87 (uintsize -> UINT128 .)
    RPAREN          reduce using rule 87 (uintsize -> UINT128 .)
    $end            reduce using rule 87 (uintsize -> UINT128 .)
    RLLAVE          reduce using rule 87 (uintsize -> UINT128 .)
    LET             reduce using rule 87 (uintsize -> UINT128 .)
    CONST           reduce using rule 87 (uintsize -> UINT128 .)
    PRINTLN         reduce using rule 87 (uintsize -> UINT128 .)
    LOOP            reduce using rule 87 (uintsize -> UINT128 .)
    IF              reduce using rule 87 (uintsize -> UINT128 .)
    ID              reduce using rule 87 (uintsize -> UINT128 .)
    IO              reduce using rule 87 (uintsize -> UINT128 .)
    WHILE           reduce using rule 87 (uintsize -> UINT128 .)
    RETURN          reduce using rule 87 (uintsize -> UINT128 .)
    LLLAVE          reduce using rule 87 (uintsize -> UINT128 .)


state 149

    (76) floatsize -> FLOAT32 .

    IGUAL           reduce using rule 76 (floatsize -> FLOAT32 .)
    COMA            reduce using rule 76 (floatsize -> FLOAT32 .)
    RPAREN          reduce using rule 76 (floatsize -> FLOAT32 .)
    LLLAVE          reduce using rule 76 (floatsize -> FLOAT32 .)


state 150

    (77) floatsize -> FLOAT64 .

    IGUAL           reduce using rule 77 (floatsize -> FLOAT64 .)
    COMA            reduce using rule 77 (floatsize -> FLOAT64 .)
    RPAREN          reduce using rule 77 (floatsize -> FLOAT64 .)
    LLLAVE          reduce using rule 77 (floatsize -> FLOAT64 .)


state 151

    (90) strsize -> AMPERSAND . COMILLA STATIC STR
    (91) strsize -> AMPERSAND . STR

    COMILLA         shift and go to state 204
    STR             shift and go to state 205


state 152

    (97) impresion -> PRINTLN LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 206


state 153

    (89) loop -> LOOP LLLAVE metodo RLLAVE .

    $end            reduce using rule 89 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RLLAVE          reduce using rule 89 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LET             reduce using rule 89 (loop -> LOOP LLLAVE metodo RLLAVE .)
    CONST           reduce using rule 89 (loop -> LOOP LLLAVE metodo RLLAVE .)
    PRINTLN         reduce using rule 89 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LOOP            reduce using rule 89 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IF              reduce using rule 89 (loop -> LOOP LLLAVE metodo RLLAVE .)
    ID              reduce using rule 89 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IO              reduce using rule 89 (loop -> LOOP LLLAVE metodo RLLAVE .)
    WHILE           reduce using rule 89 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RETURN          reduce using rule 89 (loop -> LOOP LLLAVE metodo RLLAVE .)


state 154

    (108) ifblock -> IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 207


state 155

    (112) ifcondicion -> LPAREN comparacion RPAREN .
    (113) ifcondicion -> LPAREN comparacion RPAREN . signoconect ifcondicion
    (80) signoconect -> . DAMPERSAND
    (81) signoconect -> . OR

    LLLAVE          reduce using rule 112 (ifcondicion -> LPAREN comparacion RPAREN .)
    RPAREN          reduce using rule 112 (ifcondicion -> LPAREN comparacion RPAREN .)
    ENDCHAR         reduce using rule 112 (ifcondicion -> LPAREN comparacion RPAREN .)
    DAMPERSAND      shift and go to state 101
    OR              shift and go to state 102

    signoconect                    shift and go to state 208

state 156

    (114) ifcondicion -> LPAREN ifcondicion RPAREN .

    LLLAVE          reduce using rule 114 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    RPAREN          reduce using rule 114 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    ENDCHAR         reduce using rule 114 (ifcondicion -> LPAREN ifcondicion RPAREN .)


state 157

    (109) ifblock -> IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 209


state 158

    (42) comparacion -> boolean signocompar boolean .

    DAMPERSAND      reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    OR              reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    LLLAVE          reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    ENDCHAR         reduce using rule 42 (comparacion -> boolean signocompar boolean .)
    RPAREN          reduce using rule 42 (comparacion -> boolean signocompar boolean .)


state 159

    (31) comparacion -> ID signocompar ID .

    DAMPERSAND      reduce using rule 31 (comparacion -> ID signocompar ID .)
    OR              reduce using rule 31 (comparacion -> ID signocompar ID .)
    LLLAVE          reduce using rule 31 (comparacion -> ID signocompar ID .)
    ENDCHAR         reduce using rule 31 (comparacion -> ID signocompar ID .)
    RPAREN          reduce using rule 31 (comparacion -> ID signocompar ID .)


state 160

    (111) ifcondicion -> comparacion signoconect ifcondicion .

    LLLAVE          reduce using rule 111 (ifcondicion -> comparacion signoconect ifcondicion .)
    RPAREN          reduce using rule 111 (ifcondicion -> comparacion signoconect ifcondicion .)
    ENDCHAR         reduce using rule 111 (ifcondicion -> comparacion signoconect ifcondicion .)


state 161

    (32) comparacion -> IDCHAR signocompar IDCHAR .

    DAMPERSAND      reduce using rule 32 (comparacion -> IDCHAR signocompar IDCHAR .)
    OR              reduce using rule 32 (comparacion -> IDCHAR signocompar IDCHAR .)
    LLLAVE          reduce using rule 32 (comparacion -> IDCHAR signocompar IDCHAR .)
    ENDCHAR         reduce using rule 32 (comparacion -> IDCHAR signocompar IDCHAR .)
    RPAREN          reduce using rule 32 (comparacion -> IDCHAR signocompar IDCHAR .)


state 162

    (33) comparacion -> IDSTRING signocompar IDSTRING .

    DAMPERSAND      reduce using rule 33 (comparacion -> IDSTRING signocompar IDSTRING .)
    OR              reduce using rule 33 (comparacion -> IDSTRING signocompar IDSTRING .)
    LLLAVE          reduce using rule 33 (comparacion -> IDSTRING signocompar IDSTRING .)
    ENDCHAR         reduce using rule 33 (comparacion -> IDSTRING signocompar IDSTRING .)
    RPAREN          reduce using rule 33 (comparacion -> IDSTRING signocompar IDSTRING .)


state 163

    (36) comparacion -> INTTYPE signocompar INTTYPE .

    DAMPERSAND      reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    OR              reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    LLLAVE          reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    ENDCHAR         reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)
    RPAREN          reduce using rule 36 (comparacion -> INTTYPE signocompar INTTYPE .)


state 164

    (37) comparacion -> NINTTYPE signocompar NINTTYPE .

    DAMPERSAND      reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    OR              reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    LLLAVE          reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    ENDCHAR         reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    RPAREN          reduce using rule 37 (comparacion -> NINTTYPE signocompar NINTTYPE .)


state 165

    (38) comparacion -> FLOATTYPE signocompar FLOATTYPE .

    DAMPERSAND      reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    OR              reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    LLLAVE          reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    ENDCHAR         reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    RPAREN          reduce using rule 38 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)


state 166

    (78) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN . RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN . RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    RPAREN          shift and go to state 210


state 167

    (35) while -> WHILE ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 211


state 168

    (104) elseifblock -> ifblock ELSE IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 212


state 169

    (105) elseifblock -> ifblock ELSE IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (17) metodo -> . reasignacion
    (18) metodo -> . pushString
    (19) metodo -> . casting
    (34) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (106) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> . LET ID IGUAL valor ENDCHAR
    (119) asignacion -> . LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (97) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (89) loop -> . LOOP LLLAVE metodo RLLAVE
    (108) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (104) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (103) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (98) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> . ID signo ID
    (130) sumaint -> . LET ID IGUAL ID signo ID ENDCHAR
    (78) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE
    (116) reasignacion -> . ID IGUAL valor ENDCHAR
    (121) pushString -> . ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> . ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (123) casting -> . LET ID IGUAL ID AS uintsize
    (124) casting -> . LET ID IGUAL ID AS intsize
    (125) casting -> . LET ID IGUAL ID AS CHAR

    LET             shift and go to state 21
    CONST           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOOP            shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 20
    IO              shift and go to state 26
    WHILE           shift and go to state 27

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 213
    metodo                         shift and go to state 116
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    reasignacion                   shift and go to state 16
    pushString                     shift and go to state 17
    casting                        shift and go to state 18

state 170

    (102) elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 102 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 102 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 102 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 102 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 102 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 102 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 102 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 102 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 102 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 102 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 102 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)


state 171

    (4) cuerpof -> metodo cuerpof .

    RLLAVE          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    ID              reduce using rule 4 (cuerpof -> metodo cuerpof .)
    RETURN          reduce using rule 4 (cuerpof -> metodo cuerpof .)


state 172

    (103) elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 103 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 103 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 103 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 103 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 103 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 103 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 103 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 103 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 103 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 103 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 103 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)


state 173

    (93) params -> ID COLON . datatype
    (94) params -> ID COLON . datatype COMA params
    (44) datatype -> . intsize
    (45) datatype -> . uintsize
    (46) datatype -> . floatsize
    (47) datatype -> . strsize
    (48) datatype -> . STRING
    (49) datatype -> . BOOL
    (60) intsize -> . INT8
    (61) intsize -> . INT16
    (62) intsize -> . INT32
    (63) intsize -> . INT64
    (64) intsize -> . INT128
    (83) uintsize -> . UINT8
    (84) uintsize -> . UINT16
    (85) uintsize -> . UINT32
    (86) uintsize -> . UINT64
    (87) uintsize -> . UINT128
    (76) floatsize -> . FLOAT32
    (77) floatsize -> . FLOAT64
    (90) strsize -> . AMPERSAND COMILLA STATIC STR
    (91) strsize -> . AMPERSAND STR

    STRING          shift and go to state 219
    BOOL            shift and go to state 220
    INT8            shift and go to state 139
    INT16           shift and go to state 140
    INT32           shift and go to state 141
    INT64           shift and go to state 142
    INT128          shift and go to state 143
    UINT8           shift and go to state 144
    UINT16          shift and go to state 145
    UINT32          shift and go to state 146
    UINT64          shift and go to state 147
    UINT128         shift and go to state 148
    FLOAT32         shift and go to state 149
    FLOAT64         shift and go to state 150
    AMPERSAND       shift and go to state 151

    datatype                       shift and go to state 214
    intsize                        shift and go to state 215
    uintsize                       shift and go to state 216
    floatsize                      shift and go to state 217
    strsize                        shift and go to state 218

state 174

    (117) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (118) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN ID LPAREN params RPAREN . LLLAVE cuerpof RLLAVE

    ARROWOPT        shift and go to state 221
    LLLAVE          shift and go to state 222


state 175

    (98) vectorpush -> ID POINT PUSH LPAREN INTTYPE . RPAREN ENDCHAR

    RPAREN          shift and go to state 223


state 176

    (127) llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE . RPAREN ENDCHAR

    RPAREN          shift and go to state 224


state 177

    (128) llpopback -> ID POINT POP_BACK LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 225


state 178

    (121) pushString -> ID POINT PUSH_STR LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 226


state 179

    (122) pushString -> ID POINT PUSH_STR LPAREN IDCHAR . RPAREN ENDCHAR

    RPAREN          shift and go to state 227


state 180

    (74) conectores -> ID signoconect ID .

    ENDCHAR         reduce using rule 74 (conectores -> ID signoconect ID .)


state 181

    (43) expresion -> valornumerico signo valornumerico .

    ENDCHAR         reduce using rule 43 (expresion -> valornumerico signo valornumerico .)


state 182

    (50) valornumerico -> NINTTYPE .

    ENDCHAR         reduce using rule 50 (valornumerico -> NINTTYPE .)


state 183

    (51) valornumerico -> INTTYPE .

    ENDCHAR         reduce using rule 51 (valornumerico -> INTTYPE .)


state 184

    (52) valornumerico -> FLOATTYPE .

    ENDCHAR         reduce using rule 52 (valornumerico -> FLOATTYPE .)


state 185

    (72) conectores -> boolean signoconect boolean .

    ENDCHAR         reduce using rule 72 (conectores -> boolean signoconect boolean .)


state 186

    (34) asignacion -> LET MUT ID IGUAL VEC . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 228


state 187

    (106) asignacion -> LET MUT ID IGUAL valor . ENDCHAR

    ENDCHAR         shift and go to state 229


state 188

    (107) asignacion -> LET MUT ID IGUAL estructuras . ENDCHAR

    ENDCHAR         shift and go to state 230


state 189

    (119) asignacion -> LET MUT ID IGUAL STRING . DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 231


state 190

    (126) asignacion -> LET MUT ID IGUAL LINKEDLIST . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (71) linkedlist -> LINKEDLIST . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 232


state 191

    (29) estructuras -> linkedlist .

    ENDCHAR         reduce using rule 29 (estructuras -> linkedlist .)


state 192

    (30) estructuras -> hashmap .

    ENDCHAR         reduce using rule 30 (estructuras -> hashmap .)


state 193

    (41) hashmap -> HASHMAP . DOSDOBLEPUNTOS NEW LPAREN RPAREN

    DOSDOBLEPUNTOS  shift and go to state 233


state 194

    (130) sumaint -> LET ID IGUAL ID signo . ID ENDCHAR

    ID              shift and go to state 234


state 195

    (123) casting -> LET ID IGUAL ID AS . uintsize
    (124) casting -> LET ID IGUAL ID AS . intsize
    (125) casting -> LET ID IGUAL ID AS . CHAR
    (83) uintsize -> . UINT8
    (84) uintsize -> . UINT16
    (85) uintsize -> . UINT32
    (86) uintsize -> . UINT64
    (87) uintsize -> . UINT128
    (60) intsize -> . INT8
    (61) intsize -> . INT16
    (62) intsize -> . INT32
    (63) intsize -> . INT64
    (64) intsize -> . INT128

    CHAR            shift and go to state 237
    UINT8           shift and go to state 144
    UINT16          shift and go to state 145
    UINT32          shift and go to state 146
    UINT64          shift and go to state 147
    UINT128         shift and go to state 148
    INT8            shift and go to state 139
    INT16           shift and go to state 140
    INT32           shift and go to state 141
    INT64           shift and go to state 142
    INT128          shift and go to state 143

    uintsize                       shift and go to state 235
    intsize                        shift and go to state 236

state 196

    (115) asignacion -> LET ID IGUAL valor ENDCHAR .

    $end            reduce using rule 115 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    RLLAVE          reduce using rule 115 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    LET             reduce using rule 115 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    CONST           reduce using rule 115 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    PRINTLN         reduce using rule 115 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    LOOP            reduce using rule 115 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    IF              reduce using rule 115 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    ID              reduce using rule 115 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    IO              reduce using rule 115 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    WHILE           reduce using rule 115 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    RETURN          reduce using rule 115 (asignacion -> LET ID IGUAL valor ENDCHAR .)


state 197

    (39) asignacion -> CONST ID COLON intsize IGUAL . INTTYPE ENDCHAR
    (40) asignacion -> CONST ID COLON intsize IGUAL . NINTTYPE ENDCHAR

    INTTYPE         shift and go to state 238
    NINTTYPE        shift and go to state 239


state 198

    (54) asignacion -> CONST ID COLON uintsize IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 240


state 199

    (55) asignacion -> CONST ID COLON floatsize IGUAL . FLOATTYPE ENDCHAR

    FLOATTYPE       shift and go to state 241


state 200

    (70) asignacion -> CONST ID COLON strsize IGUAL . IDSTRING ENDCHAR

    IDSTRING        shift and go to state 242


state 201

    (75) asignacion -> CONST ID COLON STRING IGUAL . STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> CONST ID COLON STRING IGUAL . IDSTRING ENDCHAR

    STRING          shift and go to state 243
    IDSTRING        shift and go to state 244


state 202

    (88) asignacion -> CONST ID COLON BOOL IGUAL . boolean ENDCHAR
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    boolean                        shift and go to state 245

state 203

    (92) asignacion -> CONST ID COLON CHAR IGUAL . IDCHAR ENDCHAR

    IDCHAR          shift and go to state 246


state 204

    (90) strsize -> AMPERSAND COMILLA . STATIC STR

    STATIC          shift and go to state 247


state 205

    (91) strsize -> AMPERSAND STR .

    IGUAL           reduce using rule 91 (strsize -> AMPERSAND STR .)
    COMA            reduce using rule 91 (strsize -> AMPERSAND STR .)
    RPAREN          reduce using rule 91 (strsize -> AMPERSAND STR .)
    LLLAVE          reduce using rule 91 (strsize -> AMPERSAND STR .)


state 206

    (97) impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 97 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 97 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 97 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 97 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 97 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 97 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 97 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 97 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 97 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 97 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 97 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)


state 207

    (108) ifblock -> IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (17) metodo -> . reasignacion
    (18) metodo -> . pushString
    (19) metodo -> . casting
    (34) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (106) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> . LET ID IGUAL valor ENDCHAR
    (119) asignacion -> . LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (97) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (89) loop -> . LOOP LLLAVE metodo RLLAVE
    (108) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (104) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (103) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (98) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> . ID signo ID
    (130) sumaint -> . LET ID IGUAL ID signo ID ENDCHAR
    (78) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE
    (116) reasignacion -> . ID IGUAL valor ENDCHAR
    (121) pushString -> . ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> . ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (123) casting -> . LET ID IGUAL ID AS uintsize
    (124) casting -> . LET ID IGUAL ID AS intsize
    (125) casting -> . LET ID IGUAL ID AS CHAR

    LET             shift and go to state 21
    CONST           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOOP            shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 20
    IO              shift and go to state 26
    WHILE           shift and go to state 27

    cuerpof                        shift and go to state 248
    metodo                         shift and go to state 116
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    reasignacion                   shift and go to state 16
    pushString                     shift and go to state 17
    casting                        shift and go to state 18

state 208

    (113) ifcondicion -> LPAREN comparacion RPAREN signoconect . ifcondicion
    (110) ifcondicion -> . comparacion
    (111) ifcondicion -> . comparacion signoconect ifcondicion
    (112) ifcondicion -> . LPAREN comparacion RPAREN
    (113) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (114) ifcondicion -> . LPAREN ifcondicion RPAREN
    (31) comparacion -> . ID signocompar ID
    (32) comparacion -> . IDCHAR signocompar IDCHAR
    (33) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    LPAREN          shift and go to state 59
    ID              shift and go to state 111
    IDCHAR          shift and go to state 52
    IDSTRING        shift and go to state 53
    INTTYPE         shift and go to state 54
    NINTTYPE        shift and go to state 55
    FLOATTYPE       shift and go to state 56
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    comparacion                    shift and go to state 49
    ifcondicion                    shift and go to state 249
    boolean                        shift and go to state 112

state 209

    (109) ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 109 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 109 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 109 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 109 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 109 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 109 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 109 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 109 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 109 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 109 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 109 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 109 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)


state 210

    (78) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN . POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN . POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    POINT           shift and go to state 250


state 211

    (35) while -> WHILE ifparams LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)


state 212

    (104) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 251


state 213

    (105) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 252


state 214

    (93) params -> ID COLON datatype .
    (94) params -> ID COLON datatype . COMA params

    RPAREN          reduce using rule 93 (params -> ID COLON datatype .)
    COMA            shift and go to state 253


state 215

    (44) datatype -> intsize .

    COMA            reduce using rule 44 (datatype -> intsize .)
    RPAREN          reduce using rule 44 (datatype -> intsize .)
    LLLAVE          reduce using rule 44 (datatype -> intsize .)


state 216

    (45) datatype -> uintsize .

    COMA            reduce using rule 45 (datatype -> uintsize .)
    RPAREN          reduce using rule 45 (datatype -> uintsize .)
    LLLAVE          reduce using rule 45 (datatype -> uintsize .)


state 217

    (46) datatype -> floatsize .

    COMA            reduce using rule 46 (datatype -> floatsize .)
    RPAREN          reduce using rule 46 (datatype -> floatsize .)
    LLLAVE          reduce using rule 46 (datatype -> floatsize .)


state 218

    (47) datatype -> strsize .

    COMA            reduce using rule 47 (datatype -> strsize .)
    RPAREN          reduce using rule 47 (datatype -> strsize .)
    LLLAVE          reduce using rule 47 (datatype -> strsize .)


state 219

    (48) datatype -> STRING .

    COMA            reduce using rule 48 (datatype -> STRING .)
    RPAREN          reduce using rule 48 (datatype -> STRING .)
    LLLAVE          reduce using rule 48 (datatype -> STRING .)


state 220

    (49) datatype -> BOOL .

    COMA            reduce using rule 49 (datatype -> BOOL .)
    RPAREN          reduce using rule 49 (datatype -> BOOL .)
    LLLAVE          reduce using rule 49 (datatype -> BOOL .)


state 221

    (117) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof ID RLLAVE
    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (44) datatype -> . intsize
    (45) datatype -> . uintsize
    (46) datatype -> . floatsize
    (47) datatype -> . strsize
    (48) datatype -> . STRING
    (49) datatype -> . BOOL
    (60) intsize -> . INT8
    (61) intsize -> . INT16
    (62) intsize -> . INT32
    (63) intsize -> . INT64
    (64) intsize -> . INT128
    (83) uintsize -> . UINT8
    (84) uintsize -> . UINT16
    (85) uintsize -> . UINT32
    (86) uintsize -> . UINT64
    (87) uintsize -> . UINT128
    (76) floatsize -> . FLOAT32
    (77) floatsize -> . FLOAT64
    (90) strsize -> . AMPERSAND COMILLA STATIC STR
    (91) strsize -> . AMPERSAND STR

    STRING          shift and go to state 219
    BOOL            shift and go to state 220
    INT8            shift and go to state 139
    INT16           shift and go to state 140
    INT32           shift and go to state 141
    INT64           shift and go to state 142
    INT128          shift and go to state 143
    UINT8           shift and go to state 144
    UINT16          shift and go to state 145
    UINT32          shift and go to state 146
    UINT64          shift and go to state 147
    UINT128         shift and go to state 148
    FLOAT32         shift and go to state 149
    FLOAT64         shift and go to state 150
    AMPERSAND       shift and go to state 151

    datatype                       shift and go to state 254
    intsize                        shift and go to state 215
    uintsize                       shift and go to state 216
    floatsize                      shift and go to state 217
    strsize                        shift and go to state 218

state 222

    (120) funcion -> FN ID LPAREN params RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (17) metodo -> . reasignacion
    (18) metodo -> . pushString
    (19) metodo -> . casting
    (34) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (106) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> . LET ID IGUAL valor ENDCHAR
    (119) asignacion -> . LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (97) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (89) loop -> . LOOP LLLAVE metodo RLLAVE
    (108) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (104) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (103) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (98) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> . ID signo ID
    (130) sumaint -> . LET ID IGUAL ID signo ID ENDCHAR
    (78) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE
    (116) reasignacion -> . ID IGUAL valor ENDCHAR
    (121) pushString -> . ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> . ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (123) casting -> . LET ID IGUAL ID AS uintsize
    (124) casting -> . LET ID IGUAL ID AS intsize
    (125) casting -> . LET ID IGUAL ID AS CHAR

    LET             shift and go to state 21
    CONST           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOOP            shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 20
    IO              shift and go to state 26
    WHILE           shift and go to state 27

    cuerpof                        shift and go to state 255
    metodo                         shift and go to state 116
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    reasignacion                   shift and go to state 16
    pushString                     shift and go to state 17
    casting                        shift and go to state 18

state 223

    (98) vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 256


state 224

    (127) llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 257


state 225

    (128) llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 128 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 128 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 128 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 128 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 128 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 128 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 128 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 128 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    IO              reduce using rule 128 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    WHILE           reduce using rule 128 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 128 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)


state 226

    (121) pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 258


state 227

    (122) pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 259


state 228

    (34) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR

    NEW             shift and go to state 260


state 229

    (106) asignacion -> LET MUT ID IGUAL valor ENDCHAR .

    $end            reduce using rule 106 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    RLLAVE          reduce using rule 106 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    LET             reduce using rule 106 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    CONST           reduce using rule 106 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    PRINTLN         reduce using rule 106 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    LOOP            reduce using rule 106 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    IF              reduce using rule 106 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    ID              reduce using rule 106 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    IO              reduce using rule 106 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    WHILE           reduce using rule 106 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    RETURN          reduce using rule 106 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)


state 230

    (107) asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .

    $end            reduce using rule 107 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RLLAVE          reduce using rule 107 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LET             reduce using rule 107 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    CONST           reduce using rule 107 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    PRINTLN         reduce using rule 107 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LOOP            reduce using rule 107 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IF              reduce using rule 107 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    ID              reduce using rule 107 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IO              reduce using rule 107 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    WHILE           reduce using rule 107 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RETURN          reduce using rule 107 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)


state 231

    (119) asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS . FROM LPAREN IDSTRING RPAREN ENDCHAR

    FROM            shift and go to state 261


state 232

    (126) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR
    (71) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR

    NEW             shift and go to state 262


state 233

    (41) hashmap -> HASHMAP DOSDOBLEPUNTOS . NEW LPAREN RPAREN

    NEW             shift and go to state 263


state 234

    (130) sumaint -> LET ID IGUAL ID signo ID . ENDCHAR

    ENDCHAR         shift and go to state 264


state 235

    (123) casting -> LET ID IGUAL ID AS uintsize .

    $end            reduce using rule 123 (casting -> LET ID IGUAL ID AS uintsize .)
    RLLAVE          reduce using rule 123 (casting -> LET ID IGUAL ID AS uintsize .)
    LET             reduce using rule 123 (casting -> LET ID IGUAL ID AS uintsize .)
    CONST           reduce using rule 123 (casting -> LET ID IGUAL ID AS uintsize .)
    PRINTLN         reduce using rule 123 (casting -> LET ID IGUAL ID AS uintsize .)
    LOOP            reduce using rule 123 (casting -> LET ID IGUAL ID AS uintsize .)
    IF              reduce using rule 123 (casting -> LET ID IGUAL ID AS uintsize .)
    ID              reduce using rule 123 (casting -> LET ID IGUAL ID AS uintsize .)
    IO              reduce using rule 123 (casting -> LET ID IGUAL ID AS uintsize .)
    WHILE           reduce using rule 123 (casting -> LET ID IGUAL ID AS uintsize .)
    RETURN          reduce using rule 123 (casting -> LET ID IGUAL ID AS uintsize .)


state 236

    (124) casting -> LET ID IGUAL ID AS intsize .

    $end            reduce using rule 124 (casting -> LET ID IGUAL ID AS intsize .)
    RLLAVE          reduce using rule 124 (casting -> LET ID IGUAL ID AS intsize .)
    LET             reduce using rule 124 (casting -> LET ID IGUAL ID AS intsize .)
    CONST           reduce using rule 124 (casting -> LET ID IGUAL ID AS intsize .)
    PRINTLN         reduce using rule 124 (casting -> LET ID IGUAL ID AS intsize .)
    LOOP            reduce using rule 124 (casting -> LET ID IGUAL ID AS intsize .)
    IF              reduce using rule 124 (casting -> LET ID IGUAL ID AS intsize .)
    ID              reduce using rule 124 (casting -> LET ID IGUAL ID AS intsize .)
    IO              reduce using rule 124 (casting -> LET ID IGUAL ID AS intsize .)
    WHILE           reduce using rule 124 (casting -> LET ID IGUAL ID AS intsize .)
    RETURN          reduce using rule 124 (casting -> LET ID IGUAL ID AS intsize .)


state 237

    (125) casting -> LET ID IGUAL ID AS CHAR .

    $end            reduce using rule 125 (casting -> LET ID IGUAL ID AS CHAR .)
    RLLAVE          reduce using rule 125 (casting -> LET ID IGUAL ID AS CHAR .)
    LET             reduce using rule 125 (casting -> LET ID IGUAL ID AS CHAR .)
    CONST           reduce using rule 125 (casting -> LET ID IGUAL ID AS CHAR .)
    PRINTLN         reduce using rule 125 (casting -> LET ID IGUAL ID AS CHAR .)
    LOOP            reduce using rule 125 (casting -> LET ID IGUAL ID AS CHAR .)
    IF              reduce using rule 125 (casting -> LET ID IGUAL ID AS CHAR .)
    ID              reduce using rule 125 (casting -> LET ID IGUAL ID AS CHAR .)
    IO              reduce using rule 125 (casting -> LET ID IGUAL ID AS CHAR .)
    WHILE           reduce using rule 125 (casting -> LET ID IGUAL ID AS CHAR .)
    RETURN          reduce using rule 125 (casting -> LET ID IGUAL ID AS CHAR .)


state 238

    (39) asignacion -> CONST ID COLON intsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 265


state 239

    (40) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 266


state 240

    (54) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 267


state 241

    (55) asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE . ENDCHAR

    ENDCHAR         shift and go to state 268


state 242

    (70) asignacion -> CONST ID COLON strsize IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 269


state 243

    (75) asignacion -> CONST ID COLON STRING IGUAL STRING . DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 270


state 244

    (82) asignacion -> CONST ID COLON STRING IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 271


state 245

    (88) asignacion -> CONST ID COLON BOOL IGUAL boolean . ENDCHAR

    ENDCHAR         shift and go to state 272


state 246

    (92) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR . ENDCHAR

    ENDCHAR         shift and go to state 273


state 247

    (90) strsize -> AMPERSAND COMILLA STATIC . STR

    STR             shift and go to state 274


state 248

    (108) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 275


state 249

    (113) ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .

    LLLAVE          reduce using rule 113 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    RPAREN          reduce using rule 113 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    ENDCHAR         reduce using rule 113 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)


state 250

    (78) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT . READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT . READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    READLINE        shift and go to state 276


state 251

    (104) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (17) metodo -> . reasignacion
    (18) metodo -> . pushString
    (19) metodo -> . casting
    (34) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (106) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> . LET ID IGUAL valor ENDCHAR
    (119) asignacion -> . LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (97) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (89) loop -> . LOOP LLLAVE metodo RLLAVE
    (108) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (104) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (103) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (98) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> . ID signo ID
    (130) sumaint -> . LET ID IGUAL ID signo ID ENDCHAR
    (78) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE
    (116) reasignacion -> . ID IGUAL valor ENDCHAR
    (121) pushString -> . ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> . ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (123) casting -> . LET ID IGUAL ID AS uintsize
    (124) casting -> . LET ID IGUAL ID AS intsize
    (125) casting -> . LET ID IGUAL ID AS CHAR

    LET             shift and go to state 21
    CONST           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOOP            shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 20
    IO              shift and go to state 26
    WHILE           shift and go to state 27

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 277
    metodo                         shift and go to state 116
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    reasignacion                   shift and go to state 16
    pushString                     shift and go to state 17
    casting                        shift and go to state 18

state 252

    (105) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 105 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 105 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 105 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 105 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 105 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 105 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 105 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 105 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 105 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 105 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 105 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 105 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)


state 253

    (94) params -> ID COLON datatype COMA . params
    (93) params -> . ID COLON datatype
    (94) params -> . ID COLON datatype COMA params

    ID              shift and go to state 118

    params                         shift and go to state 278

state 254

    (117) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof ID RLLAVE
    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE

    LLLAVE          shift and go to state 279


state 255

    (120) funcion -> FN ID LPAREN params RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 280


state 256

    (98) vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .

    $end            reduce using rule 98 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 98 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    LET             reduce using rule 98 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    CONST           reduce using rule 98 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 98 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    LOOP            reduce using rule 98 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    IF              reduce using rule 98 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    ID              reduce using rule 98 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    IO              reduce using rule 98 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    WHILE           reduce using rule 98 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    RETURN          reduce using rule 98 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)


state 257

    (127) llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .

    $end            reduce using rule 127 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 127 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    LET             reduce using rule 127 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    CONST           reduce using rule 127 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 127 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    LOOP            reduce using rule 127 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    IF              reduce using rule 127 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    ID              reduce using rule 127 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    IO              reduce using rule 127 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    WHILE           reduce using rule 127 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    RETURN          reduce using rule 127 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)


state 258

    (121) pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 121 (pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 121 (pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 121 (pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 121 (pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 121 (pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 121 (pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 121 (pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 121 (pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 121 (pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 121 (pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 121 (pushString -> ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR .)


state 259

    (122) pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR .

    $end            reduce using rule 122 (pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 122 (pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR .)
    LET             reduce using rule 122 (pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR .)
    CONST           reduce using rule 122 (pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 122 (pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR .)
    LOOP            reduce using rule 122 (pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR .)
    IF              reduce using rule 122 (pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR .)
    ID              reduce using rule 122 (pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR .)
    IO              reduce using rule 122 (pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR .)
    WHILE           reduce using rule 122 (pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR .)
    RETURN          reduce using rule 122 (pushString -> ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR .)


state 260

    (34) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 281


state 261

    (119) asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 282


state 262

    (126) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR
    (71) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 283


state 263

    (41) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW . LPAREN RPAREN

    LPAREN          shift and go to state 284


state 264

    (130) sumaint -> LET ID IGUAL ID signo ID ENDCHAR .

    $end            reduce using rule 130 (sumaint -> LET ID IGUAL ID signo ID ENDCHAR .)
    RLLAVE          reduce using rule 130 (sumaint -> LET ID IGUAL ID signo ID ENDCHAR .)
    LET             reduce using rule 130 (sumaint -> LET ID IGUAL ID signo ID ENDCHAR .)
    CONST           reduce using rule 130 (sumaint -> LET ID IGUAL ID signo ID ENDCHAR .)
    PRINTLN         reduce using rule 130 (sumaint -> LET ID IGUAL ID signo ID ENDCHAR .)
    LOOP            reduce using rule 130 (sumaint -> LET ID IGUAL ID signo ID ENDCHAR .)
    IF              reduce using rule 130 (sumaint -> LET ID IGUAL ID signo ID ENDCHAR .)
    ID              reduce using rule 130 (sumaint -> LET ID IGUAL ID signo ID ENDCHAR .)
    IO              reduce using rule 130 (sumaint -> LET ID IGUAL ID signo ID ENDCHAR .)
    WHILE           reduce using rule 130 (sumaint -> LET ID IGUAL ID signo ID ENDCHAR .)
    RETURN          reduce using rule 130 (sumaint -> LET ID IGUAL ID signo ID ENDCHAR .)


state 265

    (39) asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 39 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 39 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 39 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 39 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 39 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 39 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 39 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 39 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 39 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 39 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 39 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)


state 266

    (40) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .

    $end            reduce using rule 40 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 40 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LET             reduce using rule 40 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    CONST           reduce using rule 40 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 40 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LOOP            reduce using rule 40 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IF              reduce using rule 40 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    ID              reduce using rule 40 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IO              reduce using rule 40 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    WHILE           reduce using rule 40 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RETURN          reduce using rule 40 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)


state 267

    (54) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 54 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 54 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 54 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 54 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 54 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 54 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 54 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 54 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 54 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 54 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 54 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)


state 268

    (55) asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .

    $end            reduce using rule 55 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    RLLAVE          reduce using rule 55 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    LET             reduce using rule 55 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    CONST           reduce using rule 55 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    PRINTLN         reduce using rule 55 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    LOOP            reduce using rule 55 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IF              reduce using rule 55 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    ID              reduce using rule 55 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IO              reduce using rule 55 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    WHILE           reduce using rule 55 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    RETURN          reduce using rule 55 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)


state 269

    (70) asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 70 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 70 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 70 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 70 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 70 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 70 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 70 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 70 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IO              reduce using rule 70 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    WHILE           reduce using rule 70 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 70 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)


state 270

    (75) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS . FROM LPAREN IDSTRING RPAREN ENDCHAR

    FROM            shift and go to state 285


state 271

    (82) asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 82 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 82 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 82 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 82 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 82 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 82 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 82 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 82 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IO              reduce using rule 82 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    WHILE           reduce using rule 82 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 82 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)


state 272

    (88) asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .

    $end            reduce using rule 88 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RLLAVE          reduce using rule 88 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LET             reduce using rule 88 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    CONST           reduce using rule 88 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    PRINTLN         reduce using rule 88 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LOOP            reduce using rule 88 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IF              reduce using rule 88 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    ID              reduce using rule 88 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IO              reduce using rule 88 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    WHILE           reduce using rule 88 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RETURN          reduce using rule 88 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)


state 273

    (92) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .

    $end            reduce using rule 92 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RLLAVE          reduce using rule 92 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LET             reduce using rule 92 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    CONST           reduce using rule 92 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    PRINTLN         reduce using rule 92 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LOOP            reduce using rule 92 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IF              reduce using rule 92 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    ID              reduce using rule 92 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IO              reduce using rule 92 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    WHILE           reduce using rule 92 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RETURN          reduce using rule 92 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)


state 274

    (90) strsize -> AMPERSAND COMILLA STATIC STR .

    IGUAL           reduce using rule 90 (strsize -> AMPERSAND COMILLA STATIC STR .)
    COMA            reduce using rule 90 (strsize -> AMPERSAND COMILLA STATIC STR .)
    RPAREN          reduce using rule 90 (strsize -> AMPERSAND COMILLA STATIC STR .)
    LLLAVE          reduce using rule 90 (strsize -> AMPERSAND COMILLA STATIC STR .)


state 275

    (108) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 108 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 108 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 108 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 108 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 108 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 108 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 108 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 108 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 108 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 108 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 108 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 108 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 276

    (78) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE . LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE . LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 286


state 277

    (104) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 287


state 278

    (94) params -> ID COLON datatype COMA params .

    RPAREN          reduce using rule 94 (params -> ID COLON datatype COMA params .)


state 279

    (117) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof ID RLLAVE
    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof RETURN ifparams ENDCHAR RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (17) metodo -> . reasignacion
    (18) metodo -> . pushString
    (19) metodo -> . casting
    (34) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (40) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (54) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (55) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (70) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (75) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (82) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (88) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (92) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (106) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (107) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (115) asignacion -> . LET ID IGUAL valor ENDCHAR
    (119) asignacion -> . LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (126) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (97) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (89) loop -> . LOOP LLLAVE metodo RLLAVE
    (108) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (109) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (104) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (103) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (98) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (127) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (128) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (129) sumaint -> . ID signo ID
    (130) sumaint -> . LET ID IGUAL ID signo ID ENDCHAR
    (78) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE
    (116) reasignacion -> . ID IGUAL valor ENDCHAR
    (121) pushString -> . ID POINT PUSH_STR LPAREN IDSTRING RPAREN ENDCHAR
    (122) pushString -> . ID POINT PUSH_STR LPAREN IDCHAR RPAREN ENDCHAR
    (123) casting -> . LET ID IGUAL ID AS uintsize
    (124) casting -> . LET ID IGUAL ID AS intsize
    (125) casting -> . LET ID IGUAL ID AS CHAR

    LET             shift and go to state 21
    CONST           shift and go to state 22
    PRINTLN         shift and go to state 23
    LOOP            shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 20
    IO              shift and go to state 26
    WHILE           shift and go to state 27

    cuerpof                        shift and go to state 288
    metodo                         shift and go to state 116
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    reasignacion                   shift and go to state 16
    pushString                     shift and go to state 17
    casting                        shift and go to state 18

state 280

    (120) funcion -> FN ID LPAREN params RPAREN LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 120 (funcion -> FN ID LPAREN params RPAREN LLLAVE cuerpof RLLAVE .)


state 281

    (34) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 289


state 282

    (119) asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 290


state 283

    (126) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR
    (71) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 291


state 284

    (41) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN . RPAREN

    RPAREN          shift and go to state 292


state 285

    (75) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 293


state 286

    (78) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN . AMPERSAND MUT ID RPAREN ENDCHAR
    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN . AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    AMPERSAND       shift and go to state 294


state 287

    (104) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 104 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 104 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 104 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 104 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 104 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 104 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 104 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 104 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 104 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 104 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 104 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 104 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 288

    (117) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . ID RLLAVE
    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . RETURN ifparams ENDCHAR RLLAVE

    ID              shift and go to state 295
    RETURN          shift and go to state 296


state 289

    (34) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 297


state 290

    (119) asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 298


state 291

    (126) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR
    (71) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 299


state 292

    (41) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .

    ENDCHAR         reduce using rule 41 (hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .)


state 293

    (75) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 300


state 294

    (78) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND . MUT ID RPAREN ENDCHAR
    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND . MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    MUT             shift and go to state 301


state 295

    (117) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID . RLLAVE

    RLLAVE          shift and go to state 302


state 296

    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN . ifparams ENDCHAR RLLAVE
    (99) ifparams -> . ifcondicion
    (100) ifparams -> . boolean
    (101) ifparams -> . ID
    (110) ifcondicion -> . comparacion
    (111) ifcondicion -> . comparacion signoconect ifcondicion
    (112) ifcondicion -> . LPAREN comparacion RPAREN
    (113) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (114) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE
    (31) comparacion -> . ID signocompar ID
    (32) comparacion -> . IDCHAR signocompar IDCHAR
    (33) comparacion -> . IDSTRING signocompar IDSTRING
    (36) comparacion -> . INTTYPE signocompar INTTYPE
    (37) comparacion -> . NINTTYPE signocompar NINTTYPE
    (38) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (42) comparacion -> . boolean signocompar boolean

    ID              shift and go to state 48
    LPAREN          shift and go to state 59
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    IDCHAR          shift and go to state 52
    IDSTRING        shift and go to state 53
    INTTYPE         shift and go to state 54
    NINTTYPE        shift and go to state 55
    FLOATTYPE       shift and go to state 56

    ifparams                       shift and go to state 303
    ifcondicion                    shift and go to state 46
    boolean                        shift and go to state 47
    comparacion                    shift and go to state 49

state 297

    (34) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 34 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 34 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 34 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 34 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 34 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 34 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 34 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 34 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IO              reduce using rule 34 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    WHILE           reduce using rule 34 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 34 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)


state 298

    (119) asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 304


state 299

    (126) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .
    (71) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 126 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 126 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 126 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 126 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 126 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 126 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 126 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 126 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IO              reduce using rule 126 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    WHILE           reduce using rule 126 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 126 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ENDCHAR         reduce using rule 71 (linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)


state 300

    (75) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 305


state 301

    (78) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT . ID RPAREN ENDCHAR
    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT . ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    ID              shift and go to state 306


state 302

    (117) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .

    $end            reduce using rule 117 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .)


state 303

    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams . ENDCHAR RLLAVE

    ENDCHAR         shift and go to state 307


state 304

    (119) asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 119 (asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 119 (asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 119 (asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 119 (asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 119 (asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 119 (asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 119 (asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 119 (asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 119 (asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 119 (asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 119 (asignacion -> LET MUT ID IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)


state 305

    (75) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 308


state 306

    (78) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID . RPAREN ENDCHAR
    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID . RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    RPAREN          shift and go to state 309


state 307

    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR . RLLAVE

    RLLAVE          shift and go to state 310


state 308

    (75) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 75 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 75 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 75 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 75 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 75 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 75 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 75 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 75 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 75 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 75 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 75 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)


state 309

    (78) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN . ENDCHAR
    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN . POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    ENDCHAR         shift and go to state 312
    POINT           shift and go to state 311


state 310

    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .

    $end            reduce using rule 118 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .)


state 311

    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT . EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    EXPECT          shift and go to state 313


state 312

    (78) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .

    $end            reduce using rule 78 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 78 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    LET             reduce using rule 78 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    CONST           reduce using rule 78 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 78 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    LOOP            reduce using rule 78 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    IF              reduce using rule 78 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    ID              reduce using rule 78 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    IO              reduce using rule 78 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    WHILE           reduce using rule 78 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    RETURN          reduce using rule 78 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)


state 313

    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 314


state 314

    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 315


state 315

    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 316


state 316

    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 317


state 317

    (79) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 79 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 79 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 79 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 79 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 79 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 79 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 79 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 79 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 79 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 79 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 79 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 91 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 92 resolved as shift
WARNING: shift/reduce conflict for ID in state 116 resolved as shift
