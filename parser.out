Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASYNC
    AWAIT
    BREAK
    CONTINUE
    DIVASIGN
    DOLAR
    DYN
    ENUM
    ERR
    FINAL
    FOR
    FORMAT
    IMPL
    IN
    INPUT
    INTERRO
    LCOR
    MAINFN
    MATCH
    MOVE
    MULTIASIGN
    OK
    PARSE
    POINTERSIZE
    PRIV
    PUB
    RCOR
    REF
    RESTAASIGN
    SELF
    SIZEOF
    STRUCT
    SUMAASIGN
    SUPER
    TYPE
    TYPEOF
    UNSAFE
    UNWRAPOR
    USE
    WHERE

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> metodo
Rule 2     cuerpo -> funcion
Rule 3     cuerpof -> metodo
Rule 4     cuerpof -> metodo cuerpof
Rule 5     metodo -> asignacion
Rule 6     metodo -> impresion
Rule 7     metodo -> loop
Rule 8     metodo -> ifblock
Rule 9     metodo -> elseifblock
Rule 10    metodo -> elseblock
Rule 11    metodo -> vectorpush
Rule 12    metodo -> llpushfront
Rule 13    metodo -> llpopback
Rule 14    metodo -> sumaint
Rule 15    metodo -> entrada
Rule 16    metodo -> while
Rule 17    valor -> valornumerico
Rule 18    valor -> TRUE
Rule 19    valor -> FALSE
Rule 20    valor -> ID
Rule 21    valor -> IDCHAR
Rule 22    valor -> IDSTRING
Rule 23    valor -> expresion
Rule 24    valor -> conectores
Rule 25    valor -> comparacion
Rule 26    estructuras -> linkedlist
Rule 27    estructuras -> hashmap
Rule 28    comparacion -> ID signocompar ID
Rule 29    comparacion -> IDCHAR signocompar IDCHAR
Rule 30    comparacion -> IDSTRING signocompar IDSTRING
Rule 31    asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 32    comparacion -> INTTYPE signocompar INTTYPE
Rule 33    comparacion -> NINTTYPE signocompar NINTTYPE
Rule 34    comparacion -> FLOATTYPE signocompar FLOATTYPE
Rule 35    while -> WHILE ifparams LLLAVE cuerpof RLLAVE
Rule 36    asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
Rule 37    asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
Rule 38    comparacion -> boolean signocompar boolean
Rule 39    hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
Rule 40    expresion -> valornumerico signo valornumerico
Rule 41    datatype -> intsize
Rule 42    datatype -> uintsize
Rule 43    datatype -> floatsize
Rule 44    datatype -> strsize
Rule 45    datatype -> STRING
Rule 46    datatype -> BOOL
Rule 47    asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
Rule 48    valornumerico -> NINTTYPE
Rule 49    valornumerico -> INTTYPE
Rule 50    valornumerico -> FLOATTYPE
Rule 51    valornumerico -> NFLOATTYPE
Rule 52    signocompar -> MAYORQUE
Rule 53    signocompar -> MENORQUE
Rule 54    signocompar -> DIFERENTE
Rule 55    signocompar -> IDENTICO
Rule 56    asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
Rule 57    intsize -> INT8
Rule 58    intsize -> INT16
Rule 59    intsize -> INT32
Rule 60    intsize -> INT64
Rule 61    intsize -> INT128
Rule 62    signo -> PLUS
Rule 63    signo -> TIMES
Rule 64    signo -> MINUS
Rule 65    signo -> PORCENTAJE
Rule 66    signo -> DIVIDE
Rule 67    asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
Rule 68    linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 69    conectores -> boolean signoconect boolean
Rule 70    conectores -> EXCLAM boolean
Rule 71    conectores -> ID signoconect ID
Rule 72    asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
Rule 73    floatsize -> FLOAT32
Rule 74    floatsize -> FLOAT64
Rule 75    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
Rule 76    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
Rule 77    signoconect -> DAMPERSAND
Rule 78    signoconect -> OR
Rule 79    asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
Rule 80    uintsize -> UINT8
Rule 81    uintsize -> UINT16
Rule 82    uintsize -> UINT32
Rule 83    uintsize -> UINT64
Rule 84    uintsize -> UINT128
Rule 85    asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR
Rule 86    loop -> LOOP LLLAVE metodo RLLAVE
Rule 87    params -> ID COLON datatype
Rule 88    params -> ID COLON datatype COMA params
Rule 89    strsize -> AMPERSAND COMILLA STATIC STR
Rule 90    strsize -> AMPERSAND STR
Rule 91    asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
Rule 92    funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE
Rule 93    boolean -> TRUE
Rule 94    boolean -> FALSE
Rule 95    impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
Rule 96    vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
Rule 97    ifparams -> ifcondicion
Rule 98    ifparams -> boolean
Rule 99    ifparams -> ID
Rule 100   elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE
Rule 101   elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE
Rule 102   elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 103   elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
Rule 104   asignacion -> LET MUT ID IGUAL valor ENDCHAR
Rule 105   asignacion -> LET MUT ID IGUAL estructuras ENDCHAR
Rule 106   ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 107   ifblock -> IF ifparams LLLAVE cuerpof RLLAVE
Rule 108   asignacion -> LET ID IGUAL valor ENDCHAR
Rule 109   ifcondicion -> comparacion
Rule 110   ifcondicion -> comparacion signoconect ifcondicion
Rule 111   ifcondicion -> LPAREN comparacion RPAREN
Rule 112   ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion
Rule 113   ifcondicion -> LPAREN ifcondicion RPAREN
Rule 114   asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 115   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
Rule 116   llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
Rule 117   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
Rule 118   llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR
Rule 119   asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
Rule 120   asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
Rule 121   asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
Rule 122   asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
Rule 123   asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
Rule 124   asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
Rule 125   asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
Rule 126   asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
Rule 127   asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
Rule 128   asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
Rule 129   asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
Rule 130   asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
Rule 131   sumaint -> ID PLUS ID

Terminals, with rules where they appear

AMPERSAND            : 75 76 89 90
ARROWOPT             : 115 117
ASYNC                : 
AWAIT                : 
BOOL                 : 46 85
BREAK                : 
CHAR                 : 91
COLON                : 36 37 47 56 67 72 79 85 87 88 91 119 120 121 122 123 124 125 126 127 128 129 130
COMA                 : 88
COMILLA              : 89
CONST                : 36 37 47 56 67 72 79 85 91 119 120 121 122 123 124 125 126 127 128 129 130
CONTINUE             : 
DAMPERSAND           : 77
DIFERENTE            : 54
DIVASIGN             : 
DIVIDE               : 66
DOLAR                : 
DOSDOBLEPUNTOS       : 31 39 68 72 75 76 114
DYN                  : 
ELSE                 : 100 101 102 103
ENDCHAR              : 31 36 37 47 56 67 68 72 75 76 79 85 91 95 96 104 105 108 114 115 116 118 119 120 121 122 123 124 125 126 127 128 129 130
ENUM                 : 
ERR                  : 
EXCLAM               : 70
EXPECT               : 76
FALSE                : 19 94
FINAL                : 
FLOAT32              : 73 129
FLOAT64              : 74 130
FLOATTYPE            : 34 34 50 56
FN                   : 92 115 117
FOR                  : 
FORMAT               : 
FROM                 : 72
HASHMAP              : 39
ID                   : 20 28 28 31 36 37 47 56 67 71 71 72 75 76 79 85 87 88 91 92 96 99 104 105 108 114 115 116 117 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 131
IDCHAR               : 21 29 29 91
IDENTICO             : 55
IDSTRING             : 22 30 30 67 72 76 79 95
IF                   : 102 103 106 107
IGUAL                : 31 36 37 47 56 67 72 79 85 91 104 105 108 114 119 120 121 122 123 124 125 126 127 128 129 130
IMPL                 : 
IN                   : 
INPUT                : 
INT128               : 61 123
INT16                : 58 120
INT32                : 59 121
INT64                : 60 122
INT8                 : 57 119
INTERRO              : 
INTTYPE              : 32 32 36 47 49 96 116 119 120 121 122 123 124 125 126 127 128 129 130
IO                   : 75 76
LCOR                 : 
LET                  : 31 104 105 108 114
LINKEDLIST           : 68 114
LLLAVE               : 35 86 92 100 101 102 103 106 107 115 117
LOOP                 : 86
LPAREN               : 31 39 68 72 75 75 76 76 76 92 95 96 102 106 111 112 113 114 115 116 117 118
MAINFN               : 
MATCH                : 
MAYORQUE             : 52
MENORQUE             : 53
MINUS                : 64
MOVE                 : 
MULTIASIGN           : 
MUT                  : 31 75 76 104 105 114
NEW                  : 31 39 68 114
NFLOATTYPE           : 51
NINTTYPE             : 33 33 37 48
OK                   : 
OR                   : 78
PARSE                : 
PLUS                 : 62 131
POINT                : 75 76 76 96 116 118
POINTERSIZE          : 
POP_BACK             : 118
PORCENTAJE           : 65
PRINTLN              : 95
PRIV                 : 
PUB                  : 
PUSH                 : 96
PUSH_FRONT           : 116
RCOR                 : 
READLINE             : 75 76
REF                  : 
RESTAASIGN           : 
RETURN               : 115
RLLAVE               : 35 86 92 100 101 102 103 106 107 115 117
RPAREN               : 31 39 68 72 75 75 76 76 76 92 95 96 102 106 111 112 113 114 115 116 117 118
SELF                 : 
SIZEOF               : 
STATIC               : 89
STDIN                : 75 76
STR                  : 89 90
STRING               : 45 72 72 79
STRUCT               : 
SUMAASIGN            : 
SUPER                : 
TIMES                : 63
TRUE                 : 18 93
TYPE                 : 
TYPEOF               : 
UINT128              : 84 128
UINT16               : 81 125
UINT32               : 82 126
UINT64               : 83 127
UINT8                : 80 124
UNSAFE               : 
UNWRAPOR             : 
USE                  : 
VEC                  : 31
WHERE                : 
WHILE                : 35
error                : 

Nonterminals, with rules where they appear

asignacion           : 5
boolean              : 38 38 69 69 70 85 98
comparacion          : 25 109 110 111 112
conectores           : 24
cuerpo               : 0
cuerpof              : 4 35 100 101 102 103 106 107 115 117
datatype             : 87 88 115 117
elseblock            : 10
elseifblock          : 9 101
entrada              : 15
estructuras          : 105
expresion            : 23
floatsize            : 43 56
funcion              : 2
hashmap              : 27
ifblock              : 8 100 102 103
ifcondicion          : 97 110 112 113
ifparams             : 35 102 103 106 107 115
impresion            : 6
intsize              : 36 37 41
linkedlist           : 26
llpopback            : 13
llpushfront          : 12
loop                 : 7
metodo               : 1 3 4 86 92
params               : 88 92 115 117
signo                : 40
signocompar          : 28 29 30 32 33 34 38
signoconect          : 69 71 110 112
strsize              : 44 67
sumaint              : 14
uintsize             : 42 47
valor                : 104 108
valornumerico        : 17 40 40
vectorpush           : 11
while                : 16

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . metodo
    (2) cuerpo -> . funcion
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (92) funcion -> . FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE
    (115) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (117) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (36) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (104) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> . LET ID IGUAL valor ENDCHAR
    (114) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (119) asignacion -> . CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> . CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> . CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> . CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> . CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> . CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> . CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> . CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> . CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> . CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
    (95) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (86) loop -> . LOOP LLLAVE metodo RLLAVE
    (106) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (96) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> . ID PLUS ID
    (75) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    FN              shift and go to state 16
    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    cuerpo                         shift and go to state 1
    metodo                         shift and go to state 2
    funcion                        shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> metodo .

    $end            reduce using rule 1 (cuerpo -> metodo .)


state 3

    (2) cuerpo -> funcion .

    $end            reduce using rule 2 (cuerpo -> funcion .)


state 4

    (5) metodo -> asignacion .

    $end            reduce using rule 5 (metodo -> asignacion .)
    RLLAVE          reduce using rule 5 (metodo -> asignacion .)
    LET             reduce using rule 5 (metodo -> asignacion .)
    CONST           reduce using rule 5 (metodo -> asignacion .)
    PRINTLN         reduce using rule 5 (metodo -> asignacion .)
    LOOP            reduce using rule 5 (metodo -> asignacion .)
    IF              reduce using rule 5 (metodo -> asignacion .)
    ID              reduce using rule 5 (metodo -> asignacion .)
    IO              reduce using rule 5 (metodo -> asignacion .)
    WHILE           reduce using rule 5 (metodo -> asignacion .)
    RETURN          reduce using rule 5 (metodo -> asignacion .)


state 5

    (6) metodo -> impresion .

    $end            reduce using rule 6 (metodo -> impresion .)
    RLLAVE          reduce using rule 6 (metodo -> impresion .)
    LET             reduce using rule 6 (metodo -> impresion .)
    CONST           reduce using rule 6 (metodo -> impresion .)
    PRINTLN         reduce using rule 6 (metodo -> impresion .)
    LOOP            reduce using rule 6 (metodo -> impresion .)
    IF              reduce using rule 6 (metodo -> impresion .)
    ID              reduce using rule 6 (metodo -> impresion .)
    IO              reduce using rule 6 (metodo -> impresion .)
    WHILE           reduce using rule 6 (metodo -> impresion .)
    RETURN          reduce using rule 6 (metodo -> impresion .)


state 6

    (7) metodo -> loop .

    $end            reduce using rule 7 (metodo -> loop .)
    RLLAVE          reduce using rule 7 (metodo -> loop .)
    LET             reduce using rule 7 (metodo -> loop .)
    CONST           reduce using rule 7 (metodo -> loop .)
    PRINTLN         reduce using rule 7 (metodo -> loop .)
    LOOP            reduce using rule 7 (metodo -> loop .)
    IF              reduce using rule 7 (metodo -> loop .)
    ID              reduce using rule 7 (metodo -> loop .)
    IO              reduce using rule 7 (metodo -> loop .)
    WHILE           reduce using rule 7 (metodo -> loop .)
    RETURN          reduce using rule 7 (metodo -> loop .)


state 7

    (8) metodo -> ifblock .
    (102) elseifblock -> ifblock . ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> ifblock . ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> ifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 8 (metodo -> ifblock .)
    RLLAVE          reduce using rule 8 (metodo -> ifblock .)
    LET             reduce using rule 8 (metodo -> ifblock .)
    CONST           reduce using rule 8 (metodo -> ifblock .)
    PRINTLN         reduce using rule 8 (metodo -> ifblock .)
    LOOP            reduce using rule 8 (metodo -> ifblock .)
    IF              reduce using rule 8 (metodo -> ifblock .)
    ID              reduce using rule 8 (metodo -> ifblock .)
    IO              reduce using rule 8 (metodo -> ifblock .)
    WHILE           reduce using rule 8 (metodo -> ifblock .)
    RETURN          reduce using rule 8 (metodo -> ifblock .)
    ELSE            shift and go to state 25


state 8

    (9) metodo -> elseifblock .
    (101) elseblock -> elseifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 9 (metodo -> elseifblock .)
    RLLAVE          reduce using rule 9 (metodo -> elseifblock .)
    LET             reduce using rule 9 (metodo -> elseifblock .)
    CONST           reduce using rule 9 (metodo -> elseifblock .)
    PRINTLN         reduce using rule 9 (metodo -> elseifblock .)
    LOOP            reduce using rule 9 (metodo -> elseifblock .)
    IF              reduce using rule 9 (metodo -> elseifblock .)
    ID              reduce using rule 9 (metodo -> elseifblock .)
    IO              reduce using rule 9 (metodo -> elseifblock .)
    WHILE           reduce using rule 9 (metodo -> elseifblock .)
    RETURN          reduce using rule 9 (metodo -> elseifblock .)
    ELSE            shift and go to state 26


state 9

    (10) metodo -> elseblock .

    $end            reduce using rule 10 (metodo -> elseblock .)
    RLLAVE          reduce using rule 10 (metodo -> elseblock .)
    LET             reduce using rule 10 (metodo -> elseblock .)
    CONST           reduce using rule 10 (metodo -> elseblock .)
    PRINTLN         reduce using rule 10 (metodo -> elseblock .)
    LOOP            reduce using rule 10 (metodo -> elseblock .)
    IF              reduce using rule 10 (metodo -> elseblock .)
    ID              reduce using rule 10 (metodo -> elseblock .)
    IO              reduce using rule 10 (metodo -> elseblock .)
    WHILE           reduce using rule 10 (metodo -> elseblock .)
    RETURN          reduce using rule 10 (metodo -> elseblock .)


state 10

    (11) metodo -> vectorpush .

    $end            reduce using rule 11 (metodo -> vectorpush .)
    RLLAVE          reduce using rule 11 (metodo -> vectorpush .)
    LET             reduce using rule 11 (metodo -> vectorpush .)
    CONST           reduce using rule 11 (metodo -> vectorpush .)
    PRINTLN         reduce using rule 11 (metodo -> vectorpush .)
    LOOP            reduce using rule 11 (metodo -> vectorpush .)
    IF              reduce using rule 11 (metodo -> vectorpush .)
    ID              reduce using rule 11 (metodo -> vectorpush .)
    IO              reduce using rule 11 (metodo -> vectorpush .)
    WHILE           reduce using rule 11 (metodo -> vectorpush .)
    RETURN          reduce using rule 11 (metodo -> vectorpush .)


state 11

    (12) metodo -> llpushfront .

    $end            reduce using rule 12 (metodo -> llpushfront .)
    RLLAVE          reduce using rule 12 (metodo -> llpushfront .)
    LET             reduce using rule 12 (metodo -> llpushfront .)
    CONST           reduce using rule 12 (metodo -> llpushfront .)
    PRINTLN         reduce using rule 12 (metodo -> llpushfront .)
    LOOP            reduce using rule 12 (metodo -> llpushfront .)
    IF              reduce using rule 12 (metodo -> llpushfront .)
    ID              reduce using rule 12 (metodo -> llpushfront .)
    IO              reduce using rule 12 (metodo -> llpushfront .)
    WHILE           reduce using rule 12 (metodo -> llpushfront .)
    RETURN          reduce using rule 12 (metodo -> llpushfront .)


state 12

    (13) metodo -> llpopback .

    $end            reduce using rule 13 (metodo -> llpopback .)
    RLLAVE          reduce using rule 13 (metodo -> llpopback .)
    LET             reduce using rule 13 (metodo -> llpopback .)
    CONST           reduce using rule 13 (metodo -> llpopback .)
    PRINTLN         reduce using rule 13 (metodo -> llpopback .)
    LOOP            reduce using rule 13 (metodo -> llpopback .)
    IF              reduce using rule 13 (metodo -> llpopback .)
    ID              reduce using rule 13 (metodo -> llpopback .)
    IO              reduce using rule 13 (metodo -> llpopback .)
    WHILE           reduce using rule 13 (metodo -> llpopback .)
    RETURN          reduce using rule 13 (metodo -> llpopback .)


state 13

    (14) metodo -> sumaint .

    $end            reduce using rule 14 (metodo -> sumaint .)
    RLLAVE          reduce using rule 14 (metodo -> sumaint .)
    LET             reduce using rule 14 (metodo -> sumaint .)
    CONST           reduce using rule 14 (metodo -> sumaint .)
    PRINTLN         reduce using rule 14 (metodo -> sumaint .)
    LOOP            reduce using rule 14 (metodo -> sumaint .)
    IF              reduce using rule 14 (metodo -> sumaint .)
    ID              reduce using rule 14 (metodo -> sumaint .)
    IO              reduce using rule 14 (metodo -> sumaint .)
    WHILE           reduce using rule 14 (metodo -> sumaint .)
    RETURN          reduce using rule 14 (metodo -> sumaint .)


state 14

    (15) metodo -> entrada .

    $end            reduce using rule 15 (metodo -> entrada .)
    RLLAVE          reduce using rule 15 (metodo -> entrada .)
    LET             reduce using rule 15 (metodo -> entrada .)
    CONST           reduce using rule 15 (metodo -> entrada .)
    PRINTLN         reduce using rule 15 (metodo -> entrada .)
    LOOP            reduce using rule 15 (metodo -> entrada .)
    IF              reduce using rule 15 (metodo -> entrada .)
    ID              reduce using rule 15 (metodo -> entrada .)
    IO              reduce using rule 15 (metodo -> entrada .)
    WHILE           reduce using rule 15 (metodo -> entrada .)
    RETURN          reduce using rule 15 (metodo -> entrada .)


state 15

    (16) metodo -> while .

    $end            reduce using rule 16 (metodo -> while .)
    RLLAVE          reduce using rule 16 (metodo -> while .)
    LET             reduce using rule 16 (metodo -> while .)
    CONST           reduce using rule 16 (metodo -> while .)
    PRINTLN         reduce using rule 16 (metodo -> while .)
    LOOP            reduce using rule 16 (metodo -> while .)
    IF              reduce using rule 16 (metodo -> while .)
    ID              reduce using rule 16 (metodo -> while .)
    IO              reduce using rule 16 (metodo -> while .)
    WHILE           reduce using rule 16 (metodo -> while .)
    RETURN          reduce using rule 16 (metodo -> while .)


state 16

    (92) funcion -> FN . ID LPAREN params RPAREN LLLAVE metodo RLLAVE
    (115) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (117) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    ID              shift and go to state 27


state 17

    (96) vectorpush -> ID . POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> ID . POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> ID . POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> ID . PLUS ID

    POINT           shift and go to state 28
    PLUS            shift and go to state 29


state 18

    (31) asignacion -> LET . MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (104) asignacion -> LET . MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> LET . MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> LET . ID IGUAL valor ENDCHAR
    (114) asignacion -> LET . MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    MUT             shift and go to state 30
    ID              shift and go to state 31


state 19

    (36) asignacion -> CONST . ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> CONST . ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> CONST . ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> CONST . ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> CONST . ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> CONST . ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> CONST . ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> CONST . ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> CONST . ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (119) asignacion -> CONST . ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> CONST . ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> CONST . ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> CONST . ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> CONST . ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> CONST . ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> CONST . ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> CONST . ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> CONST . ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> CONST . ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> CONST . ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> CONST . ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR

    ID              shift and go to state 32


state 20

    (95) impresion -> PRINTLN . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 33


state 21

    (86) loop -> LOOP . LLLAVE metodo RLLAVE

    LLLAVE          shift and go to state 34


state 22

    (106) ifblock -> IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> IF . ifparams LLLAVE cuerpof RLLAVE
    (97) ifparams -> . ifcondicion
    (98) ifparams -> . boolean
    (99) ifparams -> . ID
    (109) ifcondicion -> . comparacion
    (110) ifcondicion -> . comparacion signoconect ifcondicion
    (111) ifcondicion -> . LPAREN comparacion RPAREN
    (112) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (113) ifcondicion -> . LPAREN ifcondicion RPAREN
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE
    (28) comparacion -> . ID signocompar ID
    (29) comparacion -> . IDCHAR signocompar IDCHAR
    (30) comparacion -> . IDSTRING signocompar IDSTRING
    (32) comparacion -> . INTTYPE signocompar INTTYPE
    (33) comparacion -> . NINTTYPE signocompar NINTTYPE
    (34) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (38) comparacion -> . boolean signocompar boolean

    LPAREN          shift and go to state 35
    ID              shift and go to state 39
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47

    ifparams                       shift and go to state 36
    ifcondicion                    shift and go to state 37
    boolean                        shift and go to state 38
    comparacion                    shift and go to state 40

state 23

    (75) entrada -> IO . DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> IO . DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 48


state 24

    (35) while -> WHILE . ifparams LLLAVE cuerpof RLLAVE
    (97) ifparams -> . ifcondicion
    (98) ifparams -> . boolean
    (99) ifparams -> . ID
    (109) ifcondicion -> . comparacion
    (110) ifcondicion -> . comparacion signoconect ifcondicion
    (111) ifcondicion -> . LPAREN comparacion RPAREN
    (112) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (113) ifcondicion -> . LPAREN ifcondicion RPAREN
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE
    (28) comparacion -> . ID signocompar ID
    (29) comparacion -> . IDCHAR signocompar IDCHAR
    (30) comparacion -> . IDSTRING signocompar IDSTRING
    (32) comparacion -> . INTTYPE signocompar INTTYPE
    (33) comparacion -> . NINTTYPE signocompar NINTTYPE
    (34) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (38) comparacion -> . boolean signocompar boolean

    ID              shift and go to state 39
    LPAREN          shift and go to state 50
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47

    ifparams                       shift and go to state 49
    ifcondicion                    shift and go to state 37
    boolean                        shift and go to state 38
    comparacion                    shift and go to state 40

state 25

    (102) elseifblock -> ifblock ELSE . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> ifblock ELSE . IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> ifblock ELSE . LLLAVE cuerpof RLLAVE

    IF              shift and go to state 51
    LLLAVE          shift and go to state 52


state 26

    (101) elseblock -> elseifblock ELSE . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 53


state 27

    (92) funcion -> FN ID . LPAREN params RPAREN LLLAVE metodo RLLAVE
    (115) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (117) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    LPAREN          shift and go to state 54


state 28

    (96) vectorpush -> ID POINT . PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> ID POINT . PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> ID POINT . POP_BACK LPAREN RPAREN ENDCHAR

    PUSH            shift and go to state 55
    PUSH_FRONT      shift and go to state 56
    POP_BACK        shift and go to state 57


state 29

    (131) sumaint -> ID PLUS . ID

    ID              shift and go to state 58


state 30

    (31) asignacion -> LET MUT . ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (104) asignacion -> LET MUT . ID IGUAL valor ENDCHAR
    (105) asignacion -> LET MUT . ID IGUAL estructuras ENDCHAR
    (114) asignacion -> LET MUT . ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    ID              shift and go to state 59


state 31

    (108) asignacion -> LET ID . IGUAL valor ENDCHAR

    IGUAL           shift and go to state 60


state 32

    (36) asignacion -> CONST ID . COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> CONST ID . COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> CONST ID . COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> CONST ID . COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> CONST ID . COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> CONST ID . COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> CONST ID . COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> CONST ID . COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> CONST ID . COLON CHAR IGUAL IDCHAR ENDCHAR
    (119) asignacion -> CONST ID . COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> CONST ID . COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> CONST ID . COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> CONST ID . COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> CONST ID . COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> CONST ID . COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> CONST ID . COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> CONST ID . COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> CONST ID . COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> CONST ID . COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> CONST ID . COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> CONST ID . COLON FLOAT64 IGUAL INTTYPE ENDCHAR

    COLON           shift and go to state 61


state 33

    (95) impresion -> PRINTLN LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 62


state 34

    (86) loop -> LOOP LLLAVE . metodo RLLAVE
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (36) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (104) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> . LET ID IGUAL valor ENDCHAR
    (114) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (119) asignacion -> . CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> . CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> . CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> . CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> . CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> . CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> . CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> . CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> . CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> . CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
    (95) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (86) loop -> . LOOP LLLAVE metodo RLLAVE
    (106) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (96) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> . ID PLUS ID
    (75) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    metodo                         shift and go to state 63
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 35

    (106) ifblock -> IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (111) ifcondicion -> LPAREN . comparacion RPAREN
    (112) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (113) ifcondicion -> LPAREN . ifcondicion RPAREN
    (97) ifparams -> . ifcondicion
    (98) ifparams -> . boolean
    (99) ifparams -> . ID
    (28) comparacion -> . ID signocompar ID
    (29) comparacion -> . IDCHAR signocompar IDCHAR
    (30) comparacion -> . IDSTRING signocompar IDSTRING
    (32) comparacion -> . INTTYPE signocompar INTTYPE
    (33) comparacion -> . NINTTYPE signocompar NINTTYPE
    (34) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (38) comparacion -> . boolean signocompar boolean
    (109) ifcondicion -> . comparacion
    (110) ifcondicion -> . comparacion signoconect ifcondicion
    (111) ifcondicion -> . LPAREN comparacion RPAREN
    (112) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (113) ifcondicion -> . LPAREN ifcondicion RPAREN
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    ID              shift and go to state 39
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47
    LPAREN          shift and go to state 50
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    ifparams                       shift and go to state 64
    comparacion                    shift and go to state 65
    ifcondicion                    shift and go to state 66
    boolean                        shift and go to state 38

state 36

    (107) ifblock -> IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 67


state 37

    (97) ifparams -> ifcondicion .

    LLLAVE          reduce using rule 97 (ifparams -> ifcondicion .)
    ENDCHAR         reduce using rule 97 (ifparams -> ifcondicion .)


state 38

    (98) ifparams -> boolean .
    (38) comparacion -> boolean . signocompar boolean
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    LLLAVE          reduce using rule 98 (ifparams -> boolean .)
    RPAREN          reduce using rule 98 (ifparams -> boolean .)
    ENDCHAR         reduce using rule 98 (ifparams -> boolean .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 68

state 39

    (99) ifparams -> ID .
    (28) comparacion -> ID . signocompar ID
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    LLLAVE          reduce using rule 99 (ifparams -> ID .)
    RPAREN          reduce using rule 99 (ifparams -> ID .)
    ENDCHAR         reduce using rule 99 (ifparams -> ID .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 73

state 40

    (109) ifcondicion -> comparacion .
    (110) ifcondicion -> comparacion . signoconect ifcondicion
    (77) signoconect -> . DAMPERSAND
    (78) signoconect -> . OR

    LLLAVE          reduce using rule 109 (ifcondicion -> comparacion .)
    RPAREN          reduce using rule 109 (ifcondicion -> comparacion .)
    ENDCHAR         reduce using rule 109 (ifcondicion -> comparacion .)
    DAMPERSAND      shift and go to state 75
    OR              shift and go to state 76

    signoconect                    shift and go to state 74

state 41

    (93) boolean -> TRUE .

    MAYORQUE        reduce using rule 93 (boolean -> TRUE .)
    MENORQUE        reduce using rule 93 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 93 (boolean -> TRUE .)
    IDENTICO        reduce using rule 93 (boolean -> TRUE .)
    LLLAVE          reduce using rule 93 (boolean -> TRUE .)
    RPAREN          reduce using rule 93 (boolean -> TRUE .)
    DAMPERSAND      reduce using rule 93 (boolean -> TRUE .)
    OR              reduce using rule 93 (boolean -> TRUE .)
    ENDCHAR         reduce using rule 93 (boolean -> TRUE .)


state 42

    (94) boolean -> FALSE .

    MAYORQUE        reduce using rule 94 (boolean -> FALSE .)
    MENORQUE        reduce using rule 94 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 94 (boolean -> FALSE .)
    IDENTICO        reduce using rule 94 (boolean -> FALSE .)
    LLLAVE          reduce using rule 94 (boolean -> FALSE .)
    RPAREN          reduce using rule 94 (boolean -> FALSE .)
    DAMPERSAND      reduce using rule 94 (boolean -> FALSE .)
    OR              reduce using rule 94 (boolean -> FALSE .)
    ENDCHAR         reduce using rule 94 (boolean -> FALSE .)


state 43

    (29) comparacion -> IDCHAR . signocompar IDCHAR
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 77

state 44

    (30) comparacion -> IDSTRING . signocompar IDSTRING
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 78

state 45

    (32) comparacion -> INTTYPE . signocompar INTTYPE
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 79

state 46

    (33) comparacion -> NINTTYPE . signocompar NINTTYPE
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 80

state 47

    (34) comparacion -> FLOATTYPE . signocompar FLOATTYPE
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 81

state 48

    (75) entrada -> IO DOSDOBLEPUNTOS . STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> IO DOSDOBLEPUNTOS . STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    STDIN           shift and go to state 82


state 49

    (35) while -> WHILE ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 83


state 50

    (111) ifcondicion -> LPAREN . comparacion RPAREN
    (112) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (113) ifcondicion -> LPAREN . ifcondicion RPAREN
    (28) comparacion -> . ID signocompar ID
    (29) comparacion -> . IDCHAR signocompar IDCHAR
    (30) comparacion -> . IDSTRING signocompar IDSTRING
    (32) comparacion -> . INTTYPE signocompar INTTYPE
    (33) comparacion -> . NINTTYPE signocompar NINTTYPE
    (34) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (38) comparacion -> . boolean signocompar boolean
    (109) ifcondicion -> . comparacion
    (110) ifcondicion -> . comparacion signoconect ifcondicion
    (111) ifcondicion -> . LPAREN comparacion RPAREN
    (112) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (113) ifcondicion -> . LPAREN ifcondicion RPAREN
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    ID              shift and go to state 85
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47
    LPAREN          shift and go to state 50
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    comparacion                    shift and go to state 65
    ifcondicion                    shift and go to state 84
    boolean                        shift and go to state 86

state 51

    (102) elseifblock -> ifblock ELSE IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> ifblock ELSE IF . ifparams LLLAVE cuerpof RLLAVE
    (97) ifparams -> . ifcondicion
    (98) ifparams -> . boolean
    (99) ifparams -> . ID
    (109) ifcondicion -> . comparacion
    (110) ifcondicion -> . comparacion signoconect ifcondicion
    (111) ifcondicion -> . LPAREN comparacion RPAREN
    (112) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (113) ifcondicion -> . LPAREN ifcondicion RPAREN
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE
    (28) comparacion -> . ID signocompar ID
    (29) comparacion -> . IDCHAR signocompar IDCHAR
    (30) comparacion -> . IDSTRING signocompar IDSTRING
    (32) comparacion -> . INTTYPE signocompar INTTYPE
    (33) comparacion -> . NINTTYPE signocompar NINTTYPE
    (34) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (38) comparacion -> . boolean signocompar boolean

    LPAREN          shift and go to state 87
    ID              shift and go to state 39
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47

    ifparams                       shift and go to state 88
    ifcondicion                    shift and go to state 37
    boolean                        shift and go to state 38
    comparacion                    shift and go to state 40

state 52

    (100) elseblock -> ifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (36) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (104) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> . LET ID IGUAL valor ENDCHAR
    (114) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (119) asignacion -> . CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> . CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> . CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> . CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> . CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> . CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> . CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> . CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> . CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> . CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
    (95) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (86) loop -> . LOOP LLLAVE metodo RLLAVE
    (106) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (96) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> . ID PLUS ID
    (75) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 89
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 53

    (101) elseblock -> elseifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (36) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (104) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> . LET ID IGUAL valor ENDCHAR
    (114) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (119) asignacion -> . CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> . CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> . CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> . CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> . CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> . CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> . CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> . CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> . CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> . CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
    (95) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (86) loop -> . LOOP LLLAVE metodo RLLAVE
    (106) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (96) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> . ID PLUS ID
    (75) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    elseifblock                    shift and go to state 8
    cuerpof                        shift and go to state 91
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 54

    (92) funcion -> FN ID LPAREN . params RPAREN LLLAVE metodo RLLAVE
    (115) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (117) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (87) params -> . ID COLON datatype
    (88) params -> . ID COLON datatype COMA params

    ID              shift and go to state 92

    params                         shift and go to state 93

state 55

    (96) vectorpush -> ID POINT PUSH . LPAREN INTTYPE RPAREN ENDCHAR

    LPAREN          shift and go to state 94


state 56

    (116) llpushfront -> ID POINT PUSH_FRONT . LPAREN INTTYPE RPAREN ENDCHAR

    LPAREN          shift and go to state 95


state 57

    (118) llpopback -> ID POINT POP_BACK . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 96


state 58

    (131) sumaint -> ID PLUS ID .

    $end            reduce using rule 131 (sumaint -> ID PLUS ID .)
    RLLAVE          reduce using rule 131 (sumaint -> ID PLUS ID .)
    LET             reduce using rule 131 (sumaint -> ID PLUS ID .)
    CONST           reduce using rule 131 (sumaint -> ID PLUS ID .)
    PRINTLN         reduce using rule 131 (sumaint -> ID PLUS ID .)
    LOOP            reduce using rule 131 (sumaint -> ID PLUS ID .)
    IF              reduce using rule 131 (sumaint -> ID PLUS ID .)
    ID              reduce using rule 131 (sumaint -> ID PLUS ID .)
    IO              reduce using rule 131 (sumaint -> ID PLUS ID .)
    WHILE           reduce using rule 131 (sumaint -> ID PLUS ID .)
    RETURN          reduce using rule 131 (sumaint -> ID PLUS ID .)


state 59

    (31) asignacion -> LET MUT ID . IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (104) asignacion -> LET MUT ID . IGUAL valor ENDCHAR
    (105) asignacion -> LET MUT ID . IGUAL estructuras ENDCHAR
    (114) asignacion -> LET MUT ID . IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    IGUAL           shift and go to state 97


state 60

    (108) asignacion -> LET ID IGUAL . valor ENDCHAR
    (17) valor -> . valornumerico
    (18) valor -> . TRUE
    (19) valor -> . FALSE
    (20) valor -> . ID
    (21) valor -> . IDCHAR
    (22) valor -> . IDSTRING
    (23) valor -> . expresion
    (24) valor -> . conectores
    (25) valor -> . comparacion
    (48) valornumerico -> . NINTTYPE
    (49) valornumerico -> . INTTYPE
    (50) valornumerico -> . FLOATTYPE
    (51) valornumerico -> . NFLOATTYPE
    (40) expresion -> . valornumerico signo valornumerico
    (69) conectores -> . boolean signoconect boolean
    (70) conectores -> . EXCLAM boolean
    (71) conectores -> . ID signoconect ID
    (28) comparacion -> . ID signocompar ID
    (29) comparacion -> . IDCHAR signocompar IDCHAR
    (30) comparacion -> . IDSTRING signocompar IDSTRING
    (32) comparacion -> . INTTYPE signocompar INTTYPE
    (33) comparacion -> . NINTTYPE signocompar NINTTYPE
    (34) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (38) comparacion -> . boolean signocompar boolean
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    TRUE            shift and go to state 101
    FALSE           shift and go to state 102
    ID              shift and go to state 98
    IDCHAR          shift and go to state 103
    IDSTRING        shift and go to state 104
    NINTTYPE        shift and go to state 108
    INTTYPE         shift and go to state 109
    FLOATTYPE       shift and go to state 110
    NFLOATTYPE      shift and go to state 111
    EXCLAM          shift and go to state 113

    valor                          shift and go to state 99
    valornumerico                  shift and go to state 100
    expresion                      shift and go to state 105
    conectores                     shift and go to state 106
    comparacion                    shift and go to state 107
    boolean                        shift and go to state 112

state 61

    (36) asignacion -> CONST ID COLON . intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> CONST ID COLON . intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> CONST ID COLON . uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> CONST ID COLON . floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> CONST ID COLON . strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> CONST ID COLON . STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> CONST ID COLON . STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> CONST ID COLON . BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> CONST ID COLON . CHAR IGUAL IDCHAR ENDCHAR
    (119) asignacion -> CONST ID COLON . INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> CONST ID COLON . INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> CONST ID COLON . INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> CONST ID COLON . INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> CONST ID COLON . INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> CONST ID COLON . UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> CONST ID COLON . UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> CONST ID COLON . UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> CONST ID COLON . UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> CONST ID COLON . UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> CONST ID COLON . FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> CONST ID COLON . FLOAT64 IGUAL INTTYPE ENDCHAR
    (57) intsize -> . INT8
    (58) intsize -> . INT16
    (59) intsize -> . INT32
    (60) intsize -> . INT64
    (61) intsize -> . INT128
    (80) uintsize -> . UINT8
    (81) uintsize -> . UINT16
    (82) uintsize -> . UINT32
    (83) uintsize -> . UINT64
    (84) uintsize -> . UINT128
    (73) floatsize -> . FLOAT32
    (74) floatsize -> . FLOAT64
    (89) strsize -> . AMPERSAND COMILLA STATIC STR
    (90) strsize -> . AMPERSAND STR

    STRING          shift and go to state 118
    BOOL            shift and go to state 119
    CHAR            shift and go to state 120
    INT8            shift and go to state 121
    INT16           shift and go to state 122
    INT32           shift and go to state 123
    INT64           shift and go to state 124
    INT128          shift and go to state 125
    UINT8           shift and go to state 126
    UINT16          shift and go to state 127
    UINT32          shift and go to state 128
    UINT64          shift and go to state 129
    UINT128         shift and go to state 130
    FLOAT32         shift and go to state 131
    FLOAT64         shift and go to state 132
    AMPERSAND       shift and go to state 133

    intsize                        shift and go to state 114
    uintsize                       shift and go to state 115
    floatsize                      shift and go to state 116
    strsize                        shift and go to state 117

state 62

    (95) impresion -> PRINTLN LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 134


state 63

    (86) loop -> LOOP LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 135


state 64

    (106) ifblock -> IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 136


state 65

    (111) ifcondicion -> LPAREN comparacion . RPAREN
    (112) ifcondicion -> LPAREN comparacion . RPAREN signoconect ifcondicion
    (109) ifcondicion -> comparacion .
    (110) ifcondicion -> comparacion . signoconect ifcondicion
    (77) signoconect -> . DAMPERSAND
    (78) signoconect -> . OR

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 137
    DAMPERSAND      shift and go to state 75
    OR              shift and go to state 76

  ! RPAREN          [ reduce using rule 109 (ifcondicion -> comparacion .) ]

    signoconect                    shift and go to state 74

state 66

    (113) ifcondicion -> LPAREN ifcondicion . RPAREN
    (97) ifparams -> ifcondicion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 138

  ! RPAREN          [ reduce using rule 97 (ifparams -> ifcondicion .) ]


state 67

    (107) ifblock -> IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (36) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (104) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> . LET ID IGUAL valor ENDCHAR
    (114) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (119) asignacion -> . CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> . CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> . CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> . CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> . CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> . CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> . CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> . CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> . CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> . CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
    (95) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (86) loop -> . LOOP LLLAVE metodo RLLAVE
    (106) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (96) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> . ID PLUS ID
    (75) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    cuerpof                        shift and go to state 139
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 68

    (38) comparacion -> boolean signocompar . boolean
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    boolean                        shift and go to state 140

state 69

    (52) signocompar -> MAYORQUE .

    TRUE            reduce using rule 52 (signocompar -> MAYORQUE .)
    FALSE           reduce using rule 52 (signocompar -> MAYORQUE .)
    ID              reduce using rule 52 (signocompar -> MAYORQUE .)
    IDCHAR          reduce using rule 52 (signocompar -> MAYORQUE .)
    IDSTRING        reduce using rule 52 (signocompar -> MAYORQUE .)
    INTTYPE         reduce using rule 52 (signocompar -> MAYORQUE .)
    NINTTYPE        reduce using rule 52 (signocompar -> MAYORQUE .)
    FLOATTYPE       reduce using rule 52 (signocompar -> MAYORQUE .)


state 70

    (53) signocompar -> MENORQUE .

    TRUE            reduce using rule 53 (signocompar -> MENORQUE .)
    FALSE           reduce using rule 53 (signocompar -> MENORQUE .)
    ID              reduce using rule 53 (signocompar -> MENORQUE .)
    IDCHAR          reduce using rule 53 (signocompar -> MENORQUE .)
    IDSTRING        reduce using rule 53 (signocompar -> MENORQUE .)
    INTTYPE         reduce using rule 53 (signocompar -> MENORQUE .)
    NINTTYPE        reduce using rule 53 (signocompar -> MENORQUE .)
    FLOATTYPE       reduce using rule 53 (signocompar -> MENORQUE .)


state 71

    (54) signocompar -> DIFERENTE .

    TRUE            reduce using rule 54 (signocompar -> DIFERENTE .)
    FALSE           reduce using rule 54 (signocompar -> DIFERENTE .)
    ID              reduce using rule 54 (signocompar -> DIFERENTE .)
    IDCHAR          reduce using rule 54 (signocompar -> DIFERENTE .)
    IDSTRING        reduce using rule 54 (signocompar -> DIFERENTE .)
    INTTYPE         reduce using rule 54 (signocompar -> DIFERENTE .)
    NINTTYPE        reduce using rule 54 (signocompar -> DIFERENTE .)
    FLOATTYPE       reduce using rule 54 (signocompar -> DIFERENTE .)


state 72

    (55) signocompar -> IDENTICO .

    TRUE            reduce using rule 55 (signocompar -> IDENTICO .)
    FALSE           reduce using rule 55 (signocompar -> IDENTICO .)
    ID              reduce using rule 55 (signocompar -> IDENTICO .)
    IDCHAR          reduce using rule 55 (signocompar -> IDENTICO .)
    IDSTRING        reduce using rule 55 (signocompar -> IDENTICO .)
    INTTYPE         reduce using rule 55 (signocompar -> IDENTICO .)
    NINTTYPE        reduce using rule 55 (signocompar -> IDENTICO .)
    FLOATTYPE       reduce using rule 55 (signocompar -> IDENTICO .)


state 73

    (28) comparacion -> ID signocompar . ID

    ID              shift and go to state 141


state 74

    (110) ifcondicion -> comparacion signoconect . ifcondicion
    (109) ifcondicion -> . comparacion
    (110) ifcondicion -> . comparacion signoconect ifcondicion
    (111) ifcondicion -> . LPAREN comparacion RPAREN
    (112) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (113) ifcondicion -> . LPAREN ifcondicion RPAREN
    (28) comparacion -> . ID signocompar ID
    (29) comparacion -> . IDCHAR signocompar IDCHAR
    (30) comparacion -> . IDSTRING signocompar IDSTRING
    (32) comparacion -> . INTTYPE signocompar INTTYPE
    (33) comparacion -> . NINTTYPE signocompar NINTTYPE
    (34) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (38) comparacion -> . boolean signocompar boolean
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    LPAREN          shift and go to state 50
    ID              shift and go to state 85
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    comparacion                    shift and go to state 40
    ifcondicion                    shift and go to state 142
    boolean                        shift and go to state 86

state 75

    (77) signoconect -> DAMPERSAND .

    LPAREN          reduce using rule 77 (signoconect -> DAMPERSAND .)
    ID              reduce using rule 77 (signoconect -> DAMPERSAND .)
    IDCHAR          reduce using rule 77 (signoconect -> DAMPERSAND .)
    IDSTRING        reduce using rule 77 (signoconect -> DAMPERSAND .)
    INTTYPE         reduce using rule 77 (signoconect -> DAMPERSAND .)
    NINTTYPE        reduce using rule 77 (signoconect -> DAMPERSAND .)
    FLOATTYPE       reduce using rule 77 (signoconect -> DAMPERSAND .)
    TRUE            reduce using rule 77 (signoconect -> DAMPERSAND .)
    FALSE           reduce using rule 77 (signoconect -> DAMPERSAND .)


state 76

    (78) signoconect -> OR .

    LPAREN          reduce using rule 78 (signoconect -> OR .)
    ID              reduce using rule 78 (signoconect -> OR .)
    IDCHAR          reduce using rule 78 (signoconect -> OR .)
    IDSTRING        reduce using rule 78 (signoconect -> OR .)
    INTTYPE         reduce using rule 78 (signoconect -> OR .)
    NINTTYPE        reduce using rule 78 (signoconect -> OR .)
    FLOATTYPE       reduce using rule 78 (signoconect -> OR .)
    TRUE            reduce using rule 78 (signoconect -> OR .)
    FALSE           reduce using rule 78 (signoconect -> OR .)


state 77

    (29) comparacion -> IDCHAR signocompar . IDCHAR

    IDCHAR          shift and go to state 143


state 78

    (30) comparacion -> IDSTRING signocompar . IDSTRING

    IDSTRING        shift and go to state 144


state 79

    (32) comparacion -> INTTYPE signocompar . INTTYPE

    INTTYPE         shift and go to state 145


state 80

    (33) comparacion -> NINTTYPE signocompar . NINTTYPE

    NINTTYPE        shift and go to state 146


state 81

    (34) comparacion -> FLOATTYPE signocompar . FLOATTYPE

    FLOATTYPE       shift and go to state 147


state 82

    (75) entrada -> IO DOSDOBLEPUNTOS STDIN . LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> IO DOSDOBLEPUNTOS STDIN . LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 148


state 83

    (35) while -> WHILE ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (36) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (104) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> . LET ID IGUAL valor ENDCHAR
    (114) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (119) asignacion -> . CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> . CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> . CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> . CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> . CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> . CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> . CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> . CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> . CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> . CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
    (95) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (86) loop -> . LOOP LLLAVE metodo RLLAVE
    (106) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (96) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> . ID PLUS ID
    (75) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    cuerpof                        shift and go to state 149
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 84

    (113) ifcondicion -> LPAREN ifcondicion . RPAREN

    RPAREN          shift and go to state 138


state 85

    (28) comparacion -> ID . signocompar ID
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 73

state 86

    (38) comparacion -> boolean . signocompar boolean
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 68

state 87

    (102) elseifblock -> ifblock ELSE IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (111) ifcondicion -> LPAREN . comparacion RPAREN
    (112) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (113) ifcondicion -> LPAREN . ifcondicion RPAREN
    (97) ifparams -> . ifcondicion
    (98) ifparams -> . boolean
    (99) ifparams -> . ID
    (28) comparacion -> . ID signocompar ID
    (29) comparacion -> . IDCHAR signocompar IDCHAR
    (30) comparacion -> . IDSTRING signocompar IDSTRING
    (32) comparacion -> . INTTYPE signocompar INTTYPE
    (33) comparacion -> . NINTTYPE signocompar NINTTYPE
    (34) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (38) comparacion -> . boolean signocompar boolean
    (109) ifcondicion -> . comparacion
    (110) ifcondicion -> . comparacion signoconect ifcondicion
    (111) ifcondicion -> . LPAREN comparacion RPAREN
    (112) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (113) ifcondicion -> . LPAREN ifcondicion RPAREN
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    ID              shift and go to state 39
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47
    LPAREN          shift and go to state 50
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    ifparams                       shift and go to state 150
    comparacion                    shift and go to state 65
    ifcondicion                    shift and go to state 66
    boolean                        shift and go to state 38

state 88

    (103) elseifblock -> ifblock ELSE IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 151


state 89

    (100) elseblock -> ifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 152


state 90

    (3) cuerpof -> metodo .
    (4) cuerpof -> metodo . cuerpof
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (36) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (104) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> . LET ID IGUAL valor ENDCHAR
    (114) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (119) asignacion -> . CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> . CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> . CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> . CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> . CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> . CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> . CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> . CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> . CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> . CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
    (95) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (86) loop -> . LOOP LLLAVE metodo RLLAVE
    (106) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (96) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> . ID PLUS ID
    (75) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          reduce using rule 3 (cuerpof -> metodo .)
    RETURN          reduce using rule 3 (cuerpof -> metodo .)
    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

  ! ID              [ reduce using rule 3 (cuerpof -> metodo .) ]

    metodo                         shift and go to state 90
    cuerpof                        shift and go to state 153
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 91

    (101) elseblock -> elseifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 154


state 92

    (87) params -> ID . COLON datatype
    (88) params -> ID . COLON datatype COMA params

    COLON           shift and go to state 155


state 93

    (92) funcion -> FN ID LPAREN params . RPAREN LLLAVE metodo RLLAVE
    (115) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (117) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    RPAREN          shift and go to state 156


state 94

    (96) vectorpush -> ID POINT PUSH LPAREN . INTTYPE RPAREN ENDCHAR

    INTTYPE         shift and go to state 157


state 95

    (116) llpushfront -> ID POINT PUSH_FRONT LPAREN . INTTYPE RPAREN ENDCHAR

    INTTYPE         shift and go to state 158


state 96

    (118) llpopback -> ID POINT POP_BACK LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 159


state 97

    (31) asignacion -> LET MUT ID IGUAL . VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (104) asignacion -> LET MUT ID IGUAL . valor ENDCHAR
    (105) asignacion -> LET MUT ID IGUAL . estructuras ENDCHAR
    (114) asignacion -> LET MUT ID IGUAL . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (17) valor -> . valornumerico
    (18) valor -> . TRUE
    (19) valor -> . FALSE
    (20) valor -> . ID
    (21) valor -> . IDCHAR
    (22) valor -> . IDSTRING
    (23) valor -> . expresion
    (24) valor -> . conectores
    (25) valor -> . comparacion
    (26) estructuras -> . linkedlist
    (27) estructuras -> . hashmap
    (48) valornumerico -> . NINTTYPE
    (49) valornumerico -> . INTTYPE
    (50) valornumerico -> . FLOATTYPE
    (51) valornumerico -> . NFLOATTYPE
    (40) expresion -> . valornumerico signo valornumerico
    (69) conectores -> . boolean signoconect boolean
    (70) conectores -> . EXCLAM boolean
    (71) conectores -> . ID signoconect ID
    (28) comparacion -> . ID signocompar ID
    (29) comparacion -> . IDCHAR signocompar IDCHAR
    (30) comparacion -> . IDSTRING signocompar IDSTRING
    (32) comparacion -> . INTTYPE signocompar INTTYPE
    (33) comparacion -> . NINTTYPE signocompar NINTTYPE
    (34) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (38) comparacion -> . boolean signocompar boolean
    (68) linkedlist -> . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (39) hashmap -> . HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    VEC             shift and go to state 160
    LINKEDLIST      shift and go to state 163
    TRUE            shift and go to state 101
    FALSE           shift and go to state 102
    ID              shift and go to state 98
    IDCHAR          shift and go to state 103
    IDSTRING        shift and go to state 104
    NINTTYPE        shift and go to state 108
    INTTYPE         shift and go to state 109
    FLOATTYPE       shift and go to state 110
    NFLOATTYPE      shift and go to state 111
    EXCLAM          shift and go to state 113
    HASHMAP         shift and go to state 166

    valor                          shift and go to state 161
    estructuras                    shift and go to state 162
    valornumerico                  shift and go to state 100
    expresion                      shift and go to state 105
    conectores                     shift and go to state 106
    comparacion                    shift and go to state 107
    linkedlist                     shift and go to state 164
    hashmap                        shift and go to state 165
    boolean                        shift and go to state 112

state 98

    (20) valor -> ID .
    (71) conectores -> ID . signoconect ID
    (28) comparacion -> ID . signocompar ID
    (77) signoconect -> . DAMPERSAND
    (78) signoconect -> . OR
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 20 (valor -> ID .)
    DAMPERSAND      shift and go to state 75
    OR              shift and go to state 76
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signoconect                    shift and go to state 167
    signocompar                    shift and go to state 73

state 99

    (108) asignacion -> LET ID IGUAL valor . ENDCHAR

    ENDCHAR         shift and go to state 168


state 100

    (17) valor -> valornumerico .
    (40) expresion -> valornumerico . signo valornumerico
    (62) signo -> . PLUS
    (63) signo -> . TIMES
    (64) signo -> . MINUS
    (65) signo -> . PORCENTAJE
    (66) signo -> . DIVIDE

    ENDCHAR         reduce using rule 17 (valor -> valornumerico .)
    PLUS            shift and go to state 170
    TIMES           shift and go to state 171
    MINUS           shift and go to state 172
    PORCENTAJE      shift and go to state 173
    DIVIDE          shift and go to state 174

    signo                          shift and go to state 169

state 101

    (18) valor -> TRUE .
    (93) boolean -> TRUE .

    ENDCHAR         reduce using rule 18 (valor -> TRUE .)
    DAMPERSAND      reduce using rule 93 (boolean -> TRUE .)
    OR              reduce using rule 93 (boolean -> TRUE .)
    MAYORQUE        reduce using rule 93 (boolean -> TRUE .)
    MENORQUE        reduce using rule 93 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 93 (boolean -> TRUE .)
    IDENTICO        reduce using rule 93 (boolean -> TRUE .)


state 102

    (19) valor -> FALSE .
    (94) boolean -> FALSE .

    ENDCHAR         reduce using rule 19 (valor -> FALSE .)
    DAMPERSAND      reduce using rule 94 (boolean -> FALSE .)
    OR              reduce using rule 94 (boolean -> FALSE .)
    MAYORQUE        reduce using rule 94 (boolean -> FALSE .)
    MENORQUE        reduce using rule 94 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 94 (boolean -> FALSE .)
    IDENTICO        reduce using rule 94 (boolean -> FALSE .)


state 103

    (21) valor -> IDCHAR .
    (29) comparacion -> IDCHAR . signocompar IDCHAR
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 21 (valor -> IDCHAR .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 77

state 104

    (22) valor -> IDSTRING .
    (30) comparacion -> IDSTRING . signocompar IDSTRING
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 22 (valor -> IDSTRING .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 78

state 105

    (23) valor -> expresion .

    ENDCHAR         reduce using rule 23 (valor -> expresion .)


state 106

    (24) valor -> conectores .

    ENDCHAR         reduce using rule 24 (valor -> conectores .)


state 107

    (25) valor -> comparacion .

    ENDCHAR         reduce using rule 25 (valor -> comparacion .)


state 108

    (48) valornumerico -> NINTTYPE .
    (33) comparacion -> NINTTYPE . signocompar NINTTYPE
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    PLUS            reduce using rule 48 (valornumerico -> NINTTYPE .)
    TIMES           reduce using rule 48 (valornumerico -> NINTTYPE .)
    MINUS           reduce using rule 48 (valornumerico -> NINTTYPE .)
    PORCENTAJE      reduce using rule 48 (valornumerico -> NINTTYPE .)
    DIVIDE          reduce using rule 48 (valornumerico -> NINTTYPE .)
    ENDCHAR         reduce using rule 48 (valornumerico -> NINTTYPE .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 80

state 109

    (49) valornumerico -> INTTYPE .
    (32) comparacion -> INTTYPE . signocompar INTTYPE
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    PLUS            reduce using rule 49 (valornumerico -> INTTYPE .)
    TIMES           reduce using rule 49 (valornumerico -> INTTYPE .)
    MINUS           reduce using rule 49 (valornumerico -> INTTYPE .)
    PORCENTAJE      reduce using rule 49 (valornumerico -> INTTYPE .)
    DIVIDE          reduce using rule 49 (valornumerico -> INTTYPE .)
    ENDCHAR         reduce using rule 49 (valornumerico -> INTTYPE .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 79

state 110

    (50) valornumerico -> FLOATTYPE .
    (34) comparacion -> FLOATTYPE . signocompar FLOATTYPE
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    PLUS            reduce using rule 50 (valornumerico -> FLOATTYPE .)
    TIMES           reduce using rule 50 (valornumerico -> FLOATTYPE .)
    MINUS           reduce using rule 50 (valornumerico -> FLOATTYPE .)
    PORCENTAJE      reduce using rule 50 (valornumerico -> FLOATTYPE .)
    DIVIDE          reduce using rule 50 (valornumerico -> FLOATTYPE .)
    ENDCHAR         reduce using rule 50 (valornumerico -> FLOATTYPE .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 81

state 111

    (51) valornumerico -> NFLOATTYPE .

    PLUS            reduce using rule 51 (valornumerico -> NFLOATTYPE .)
    TIMES           reduce using rule 51 (valornumerico -> NFLOATTYPE .)
    MINUS           reduce using rule 51 (valornumerico -> NFLOATTYPE .)
    PORCENTAJE      reduce using rule 51 (valornumerico -> NFLOATTYPE .)
    DIVIDE          reduce using rule 51 (valornumerico -> NFLOATTYPE .)
    ENDCHAR         reduce using rule 51 (valornumerico -> NFLOATTYPE .)


state 112

    (69) conectores -> boolean . signoconect boolean
    (38) comparacion -> boolean . signocompar boolean
    (77) signoconect -> . DAMPERSAND
    (78) signoconect -> . OR
    (52) signocompar -> . MAYORQUE
    (53) signocompar -> . MENORQUE
    (54) signocompar -> . DIFERENTE
    (55) signocompar -> . IDENTICO

    DAMPERSAND      shift and go to state 75
    OR              shift and go to state 76
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signoconect                    shift and go to state 175
    signocompar                    shift and go to state 68

state 113

    (70) conectores -> EXCLAM . boolean
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    boolean                        shift and go to state 176

state 114

    (36) asignacion -> CONST ID COLON intsize . IGUAL INTTYPE ENDCHAR
    (37) asignacion -> CONST ID COLON intsize . IGUAL NINTTYPE ENDCHAR

    IGUAL           shift and go to state 177


state 115

    (47) asignacion -> CONST ID COLON uintsize . IGUAL INTTYPE ENDCHAR

    IGUAL           shift and go to state 178


state 116

    (56) asignacion -> CONST ID COLON floatsize . IGUAL FLOATTYPE ENDCHAR

    IGUAL           shift and go to state 179


state 117

    (67) asignacion -> CONST ID COLON strsize . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 180


state 118

    (72) asignacion -> CONST ID COLON STRING . IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> CONST ID COLON STRING . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 181


state 119

    (85) asignacion -> CONST ID COLON BOOL . IGUAL boolean ENDCHAR

    IGUAL           shift and go to state 182


state 120

    (91) asignacion -> CONST ID COLON CHAR . IGUAL IDCHAR ENDCHAR

    IGUAL           shift and go to state 183


state 121

    (119) asignacion -> CONST ID COLON INT8 . IGUAL INTTYPE ENDCHAR
    (57) intsize -> INT8 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 184

  ! IGUAL           [ reduce using rule 57 (intsize -> INT8 .) ]


state 122

    (120) asignacion -> CONST ID COLON INT16 . IGUAL INTTYPE ENDCHAR
    (58) intsize -> INT16 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 185

  ! IGUAL           [ reduce using rule 58 (intsize -> INT16 .) ]


state 123

    (121) asignacion -> CONST ID COLON INT32 . IGUAL INTTYPE ENDCHAR
    (59) intsize -> INT32 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 186

  ! IGUAL           [ reduce using rule 59 (intsize -> INT32 .) ]


state 124

    (122) asignacion -> CONST ID COLON INT64 . IGUAL INTTYPE ENDCHAR
    (60) intsize -> INT64 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 187

  ! IGUAL           [ reduce using rule 60 (intsize -> INT64 .) ]


state 125

    (123) asignacion -> CONST ID COLON INT128 . IGUAL INTTYPE ENDCHAR
    (61) intsize -> INT128 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 188

  ! IGUAL           [ reduce using rule 61 (intsize -> INT128 .) ]


state 126

    (124) asignacion -> CONST ID COLON UINT8 . IGUAL INTTYPE ENDCHAR
    (80) uintsize -> UINT8 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 189

  ! IGUAL           [ reduce using rule 80 (uintsize -> UINT8 .) ]


state 127

    (125) asignacion -> CONST ID COLON UINT16 . IGUAL INTTYPE ENDCHAR
    (81) uintsize -> UINT16 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 190

  ! IGUAL           [ reduce using rule 81 (uintsize -> UINT16 .) ]


state 128

    (126) asignacion -> CONST ID COLON UINT32 . IGUAL INTTYPE ENDCHAR
    (82) uintsize -> UINT32 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 191

  ! IGUAL           [ reduce using rule 82 (uintsize -> UINT32 .) ]


state 129

    (127) asignacion -> CONST ID COLON UINT64 . IGUAL INTTYPE ENDCHAR
    (83) uintsize -> UINT64 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 192

  ! IGUAL           [ reduce using rule 83 (uintsize -> UINT64 .) ]


state 130

    (128) asignacion -> CONST ID COLON UINT128 . IGUAL INTTYPE ENDCHAR
    (84) uintsize -> UINT128 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 193

  ! IGUAL           [ reduce using rule 84 (uintsize -> UINT128 .) ]


state 131

    (129) asignacion -> CONST ID COLON FLOAT32 . IGUAL INTTYPE ENDCHAR
    (73) floatsize -> FLOAT32 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 194

  ! IGUAL           [ reduce using rule 73 (floatsize -> FLOAT32 .) ]


state 132

    (130) asignacion -> CONST ID COLON FLOAT64 . IGUAL INTTYPE ENDCHAR
    (74) floatsize -> FLOAT64 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 195

  ! IGUAL           [ reduce using rule 74 (floatsize -> FLOAT64 .) ]


state 133

    (89) strsize -> AMPERSAND . COMILLA STATIC STR
    (90) strsize -> AMPERSAND . STR

    COMILLA         shift and go to state 196
    STR             shift and go to state 197


state 134

    (95) impresion -> PRINTLN LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 198


state 135

    (86) loop -> LOOP LLLAVE metodo RLLAVE .

    $end            reduce using rule 86 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RLLAVE          reduce using rule 86 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LET             reduce using rule 86 (loop -> LOOP LLLAVE metodo RLLAVE .)
    CONST           reduce using rule 86 (loop -> LOOP LLLAVE metodo RLLAVE .)
    PRINTLN         reduce using rule 86 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LOOP            reduce using rule 86 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IF              reduce using rule 86 (loop -> LOOP LLLAVE metodo RLLAVE .)
    ID              reduce using rule 86 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IO              reduce using rule 86 (loop -> LOOP LLLAVE metodo RLLAVE .)
    WHILE           reduce using rule 86 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RETURN          reduce using rule 86 (loop -> LOOP LLLAVE metodo RLLAVE .)


state 136

    (106) ifblock -> IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 199


state 137

    (111) ifcondicion -> LPAREN comparacion RPAREN .
    (112) ifcondicion -> LPAREN comparacion RPAREN . signoconect ifcondicion
    (77) signoconect -> . DAMPERSAND
    (78) signoconect -> . OR

    LLLAVE          reduce using rule 111 (ifcondicion -> LPAREN comparacion RPAREN .)
    RPAREN          reduce using rule 111 (ifcondicion -> LPAREN comparacion RPAREN .)
    ENDCHAR         reduce using rule 111 (ifcondicion -> LPAREN comparacion RPAREN .)
    DAMPERSAND      shift and go to state 75
    OR              shift and go to state 76

    signoconect                    shift and go to state 200

state 138

    (113) ifcondicion -> LPAREN ifcondicion RPAREN .

    LLLAVE          reduce using rule 113 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    RPAREN          reduce using rule 113 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    ENDCHAR         reduce using rule 113 (ifcondicion -> LPAREN ifcondicion RPAREN .)


state 139

    (107) ifblock -> IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 201


state 140

    (38) comparacion -> boolean signocompar boolean .

    DAMPERSAND      reduce using rule 38 (comparacion -> boolean signocompar boolean .)
    OR              reduce using rule 38 (comparacion -> boolean signocompar boolean .)
    LLLAVE          reduce using rule 38 (comparacion -> boolean signocompar boolean .)
    RPAREN          reduce using rule 38 (comparacion -> boolean signocompar boolean .)
    ENDCHAR         reduce using rule 38 (comparacion -> boolean signocompar boolean .)


state 141

    (28) comparacion -> ID signocompar ID .

    DAMPERSAND      reduce using rule 28 (comparacion -> ID signocompar ID .)
    OR              reduce using rule 28 (comparacion -> ID signocompar ID .)
    LLLAVE          reduce using rule 28 (comparacion -> ID signocompar ID .)
    RPAREN          reduce using rule 28 (comparacion -> ID signocompar ID .)
    ENDCHAR         reduce using rule 28 (comparacion -> ID signocompar ID .)


state 142

    (110) ifcondicion -> comparacion signoconect ifcondicion .

    LLLAVE          reduce using rule 110 (ifcondicion -> comparacion signoconect ifcondicion .)
    RPAREN          reduce using rule 110 (ifcondicion -> comparacion signoconect ifcondicion .)
    ENDCHAR         reduce using rule 110 (ifcondicion -> comparacion signoconect ifcondicion .)


state 143

    (29) comparacion -> IDCHAR signocompar IDCHAR .

    DAMPERSAND      reduce using rule 29 (comparacion -> IDCHAR signocompar IDCHAR .)
    OR              reduce using rule 29 (comparacion -> IDCHAR signocompar IDCHAR .)
    LLLAVE          reduce using rule 29 (comparacion -> IDCHAR signocompar IDCHAR .)
    RPAREN          reduce using rule 29 (comparacion -> IDCHAR signocompar IDCHAR .)
    ENDCHAR         reduce using rule 29 (comparacion -> IDCHAR signocompar IDCHAR .)


state 144

    (30) comparacion -> IDSTRING signocompar IDSTRING .

    DAMPERSAND      reduce using rule 30 (comparacion -> IDSTRING signocompar IDSTRING .)
    OR              reduce using rule 30 (comparacion -> IDSTRING signocompar IDSTRING .)
    LLLAVE          reduce using rule 30 (comparacion -> IDSTRING signocompar IDSTRING .)
    RPAREN          reduce using rule 30 (comparacion -> IDSTRING signocompar IDSTRING .)
    ENDCHAR         reduce using rule 30 (comparacion -> IDSTRING signocompar IDSTRING .)


state 145

    (32) comparacion -> INTTYPE signocompar INTTYPE .

    DAMPERSAND      reduce using rule 32 (comparacion -> INTTYPE signocompar INTTYPE .)
    OR              reduce using rule 32 (comparacion -> INTTYPE signocompar INTTYPE .)
    LLLAVE          reduce using rule 32 (comparacion -> INTTYPE signocompar INTTYPE .)
    RPAREN          reduce using rule 32 (comparacion -> INTTYPE signocompar INTTYPE .)
    ENDCHAR         reduce using rule 32 (comparacion -> INTTYPE signocompar INTTYPE .)


state 146

    (33) comparacion -> NINTTYPE signocompar NINTTYPE .

    DAMPERSAND      reduce using rule 33 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    OR              reduce using rule 33 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    LLLAVE          reduce using rule 33 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    RPAREN          reduce using rule 33 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    ENDCHAR         reduce using rule 33 (comparacion -> NINTTYPE signocompar NINTTYPE .)


state 147

    (34) comparacion -> FLOATTYPE signocompar FLOATTYPE .

    DAMPERSAND      reduce using rule 34 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    OR              reduce using rule 34 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    LLLAVE          reduce using rule 34 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    RPAREN          reduce using rule 34 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    ENDCHAR         reduce using rule 34 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)


state 148

    (75) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN . RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN . RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    RPAREN          shift and go to state 202


state 149

    (35) while -> WHILE ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 203


state 150

    (102) elseifblock -> ifblock ELSE IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 204


state 151

    (103) elseifblock -> ifblock ELSE IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (36) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (104) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> . LET ID IGUAL valor ENDCHAR
    (114) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (119) asignacion -> . CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> . CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> . CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> . CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> . CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> . CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> . CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> . CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> . CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> . CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
    (95) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (86) loop -> . LOOP LLLAVE metodo RLLAVE
    (106) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (96) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> . ID PLUS ID
    (75) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 205
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 152

    (100) elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)


state 153

    (4) cuerpof -> metodo cuerpof .

    RLLAVE          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    RETURN          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    ID              reduce using rule 4 (cuerpof -> metodo cuerpof .)


state 154

    (101) elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)


state 155

    (87) params -> ID COLON . datatype
    (88) params -> ID COLON . datatype COMA params
    (41) datatype -> . intsize
    (42) datatype -> . uintsize
    (43) datatype -> . floatsize
    (44) datatype -> . strsize
    (45) datatype -> . STRING
    (46) datatype -> . BOOL
    (57) intsize -> . INT8
    (58) intsize -> . INT16
    (59) intsize -> . INT32
    (60) intsize -> . INT64
    (61) intsize -> . INT128
    (80) uintsize -> . UINT8
    (81) uintsize -> . UINT16
    (82) uintsize -> . UINT32
    (83) uintsize -> . UINT64
    (84) uintsize -> . UINT128
    (73) floatsize -> . FLOAT32
    (74) floatsize -> . FLOAT64
    (89) strsize -> . AMPERSAND COMILLA STATIC STR
    (90) strsize -> . AMPERSAND STR

    STRING          shift and go to state 211
    BOOL            shift and go to state 212
    INT8            shift and go to state 213
    INT16           shift and go to state 214
    INT32           shift and go to state 215
    INT64           shift and go to state 216
    INT128          shift and go to state 217
    UINT8           shift and go to state 218
    UINT16          shift and go to state 219
    UINT32          shift and go to state 220
    UINT64          shift and go to state 221
    UINT128         shift and go to state 222
    FLOAT32         shift and go to state 223
    FLOAT64         shift and go to state 224
    AMPERSAND       shift and go to state 133

    datatype                       shift and go to state 206
    intsize                        shift and go to state 207
    uintsize                       shift and go to state 208
    floatsize                      shift and go to state 209
    strsize                        shift and go to state 210

state 156

    (92) funcion -> FN ID LPAREN params RPAREN . LLLAVE metodo RLLAVE
    (115) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (117) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    LLLAVE          shift and go to state 225
    ARROWOPT        shift and go to state 226


state 157

    (96) vectorpush -> ID POINT PUSH LPAREN INTTYPE . RPAREN ENDCHAR

    RPAREN          shift and go to state 227


state 158

    (116) llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE . RPAREN ENDCHAR

    RPAREN          shift and go to state 228


state 159

    (118) llpopback -> ID POINT POP_BACK LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 229


state 160

    (31) asignacion -> LET MUT ID IGUAL VEC . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 230


state 161

    (104) asignacion -> LET MUT ID IGUAL valor . ENDCHAR

    ENDCHAR         shift and go to state 231


state 162

    (105) asignacion -> LET MUT ID IGUAL estructuras . ENDCHAR

    ENDCHAR         shift and go to state 232


state 163

    (114) asignacion -> LET MUT ID IGUAL LINKEDLIST . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (68) linkedlist -> LINKEDLIST . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 233


state 164

    (26) estructuras -> linkedlist .

    ENDCHAR         reduce using rule 26 (estructuras -> linkedlist .)


state 165

    (27) estructuras -> hashmap .

    ENDCHAR         reduce using rule 27 (estructuras -> hashmap .)


state 166

    (39) hashmap -> HASHMAP . DOSDOBLEPUNTOS NEW LPAREN RPAREN

    DOSDOBLEPUNTOS  shift and go to state 234


state 167

    (71) conectores -> ID signoconect . ID

    ID              shift and go to state 235


state 168

    (108) asignacion -> LET ID IGUAL valor ENDCHAR .

    $end            reduce using rule 108 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    RLLAVE          reduce using rule 108 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    LET             reduce using rule 108 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    CONST           reduce using rule 108 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    PRINTLN         reduce using rule 108 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    LOOP            reduce using rule 108 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    IF              reduce using rule 108 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    ID              reduce using rule 108 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    IO              reduce using rule 108 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    WHILE           reduce using rule 108 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    RETURN          reduce using rule 108 (asignacion -> LET ID IGUAL valor ENDCHAR .)


state 169

    (40) expresion -> valornumerico signo . valornumerico
    (48) valornumerico -> . NINTTYPE
    (49) valornumerico -> . INTTYPE
    (50) valornumerico -> . FLOATTYPE
    (51) valornumerico -> . NFLOATTYPE

    NINTTYPE        shift and go to state 237
    INTTYPE         shift and go to state 238
    FLOATTYPE       shift and go to state 239
    NFLOATTYPE      shift and go to state 111

    valornumerico                  shift and go to state 236

state 170

    (62) signo -> PLUS .

    NINTTYPE        reduce using rule 62 (signo -> PLUS .)
    INTTYPE         reduce using rule 62 (signo -> PLUS .)
    FLOATTYPE       reduce using rule 62 (signo -> PLUS .)
    NFLOATTYPE      reduce using rule 62 (signo -> PLUS .)


state 171

    (63) signo -> TIMES .

    NINTTYPE        reduce using rule 63 (signo -> TIMES .)
    INTTYPE         reduce using rule 63 (signo -> TIMES .)
    FLOATTYPE       reduce using rule 63 (signo -> TIMES .)
    NFLOATTYPE      reduce using rule 63 (signo -> TIMES .)


state 172

    (64) signo -> MINUS .

    NINTTYPE        reduce using rule 64 (signo -> MINUS .)
    INTTYPE         reduce using rule 64 (signo -> MINUS .)
    FLOATTYPE       reduce using rule 64 (signo -> MINUS .)
    NFLOATTYPE      reduce using rule 64 (signo -> MINUS .)


state 173

    (65) signo -> PORCENTAJE .

    NINTTYPE        reduce using rule 65 (signo -> PORCENTAJE .)
    INTTYPE         reduce using rule 65 (signo -> PORCENTAJE .)
    FLOATTYPE       reduce using rule 65 (signo -> PORCENTAJE .)
    NFLOATTYPE      reduce using rule 65 (signo -> PORCENTAJE .)


state 174

    (66) signo -> DIVIDE .

    NINTTYPE        reduce using rule 66 (signo -> DIVIDE .)
    INTTYPE         reduce using rule 66 (signo -> DIVIDE .)
    FLOATTYPE       reduce using rule 66 (signo -> DIVIDE .)
    NFLOATTYPE      reduce using rule 66 (signo -> DIVIDE .)


state 175

    (69) conectores -> boolean signoconect . boolean
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    boolean                        shift and go to state 240

state 176

    (70) conectores -> EXCLAM boolean .

    ENDCHAR         reduce using rule 70 (conectores -> EXCLAM boolean .)


state 177

    (36) asignacion -> CONST ID COLON intsize IGUAL . INTTYPE ENDCHAR
    (37) asignacion -> CONST ID COLON intsize IGUAL . NINTTYPE ENDCHAR

    INTTYPE         shift and go to state 241
    NINTTYPE        shift and go to state 242


state 178

    (47) asignacion -> CONST ID COLON uintsize IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 243


state 179

    (56) asignacion -> CONST ID COLON floatsize IGUAL . FLOATTYPE ENDCHAR

    FLOATTYPE       shift and go to state 244


state 180

    (67) asignacion -> CONST ID COLON strsize IGUAL . IDSTRING ENDCHAR

    IDSTRING        shift and go to state 245


state 181

    (72) asignacion -> CONST ID COLON STRING IGUAL . STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> CONST ID COLON STRING IGUAL . IDSTRING ENDCHAR

    STRING          shift and go to state 246
    IDSTRING        shift and go to state 247


state 182

    (85) asignacion -> CONST ID COLON BOOL IGUAL . boolean ENDCHAR
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    boolean                        shift and go to state 248

state 183

    (91) asignacion -> CONST ID COLON CHAR IGUAL . IDCHAR ENDCHAR

    IDCHAR          shift and go to state 249


state 184

    (119) asignacion -> CONST ID COLON INT8 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 250


state 185

    (120) asignacion -> CONST ID COLON INT16 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 251


state 186

    (121) asignacion -> CONST ID COLON INT32 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 252


state 187

    (122) asignacion -> CONST ID COLON INT64 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 253


state 188

    (123) asignacion -> CONST ID COLON INT128 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 254


state 189

    (124) asignacion -> CONST ID COLON UINT8 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 255


state 190

    (125) asignacion -> CONST ID COLON UINT16 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 256


state 191

    (126) asignacion -> CONST ID COLON UINT32 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 257


state 192

    (127) asignacion -> CONST ID COLON UINT64 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 258


state 193

    (128) asignacion -> CONST ID COLON UINT128 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 259


state 194

    (129) asignacion -> CONST ID COLON FLOAT32 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 260


state 195

    (130) asignacion -> CONST ID COLON FLOAT64 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 261


state 196

    (89) strsize -> AMPERSAND COMILLA . STATIC STR

    STATIC          shift and go to state 262


state 197

    (90) strsize -> AMPERSAND STR .

    IGUAL           reduce using rule 90 (strsize -> AMPERSAND STR .)
    COMA            reduce using rule 90 (strsize -> AMPERSAND STR .)
    RPAREN          reduce using rule 90 (strsize -> AMPERSAND STR .)
    LLLAVE          reduce using rule 90 (strsize -> AMPERSAND STR .)


state 198

    (95) impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 95 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 95 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 95 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 95 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 95 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 95 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 95 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 95 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 95 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 95 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 95 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)


state 199

    (106) ifblock -> IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (36) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (104) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> . LET ID IGUAL valor ENDCHAR
    (114) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (119) asignacion -> . CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> . CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> . CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> . CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> . CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> . CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> . CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> . CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> . CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> . CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
    (95) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (86) loop -> . LOOP LLLAVE metodo RLLAVE
    (106) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (96) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> . ID PLUS ID
    (75) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    cuerpof                        shift and go to state 263
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 200

    (112) ifcondicion -> LPAREN comparacion RPAREN signoconect . ifcondicion
    (109) ifcondicion -> . comparacion
    (110) ifcondicion -> . comparacion signoconect ifcondicion
    (111) ifcondicion -> . LPAREN comparacion RPAREN
    (112) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (113) ifcondicion -> . LPAREN ifcondicion RPAREN
    (28) comparacion -> . ID signocompar ID
    (29) comparacion -> . IDCHAR signocompar IDCHAR
    (30) comparacion -> . IDSTRING signocompar IDSTRING
    (32) comparacion -> . INTTYPE signocompar INTTYPE
    (33) comparacion -> . NINTTYPE signocompar NINTTYPE
    (34) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (38) comparacion -> . boolean signocompar boolean
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE

    LPAREN          shift and go to state 50
    ID              shift and go to state 85
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    comparacion                    shift and go to state 40
    ifcondicion                    shift and go to state 264
    boolean                        shift and go to state 86

state 201

    (107) ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 107 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 107 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 107 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 107 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 107 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 107 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 107 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 107 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 107 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 107 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 107 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 107 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)


state 202

    (75) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN . POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN . POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    POINT           shift and go to state 265


state 203

    (35) while -> WHILE ifparams LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 35 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)


state 204

    (102) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 266


state 205

    (103) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 267


state 206

    (87) params -> ID COLON datatype .
    (88) params -> ID COLON datatype . COMA params

    RPAREN          reduce using rule 87 (params -> ID COLON datatype .)
    COMA            shift and go to state 268


state 207

    (41) datatype -> intsize .

    COMA            reduce using rule 41 (datatype -> intsize .)
    RPAREN          reduce using rule 41 (datatype -> intsize .)
    LLLAVE          reduce using rule 41 (datatype -> intsize .)


state 208

    (42) datatype -> uintsize .

    COMA            reduce using rule 42 (datatype -> uintsize .)
    RPAREN          reduce using rule 42 (datatype -> uintsize .)
    LLLAVE          reduce using rule 42 (datatype -> uintsize .)


state 209

    (43) datatype -> floatsize .

    COMA            reduce using rule 43 (datatype -> floatsize .)
    RPAREN          reduce using rule 43 (datatype -> floatsize .)
    LLLAVE          reduce using rule 43 (datatype -> floatsize .)


state 210

    (44) datatype -> strsize .

    COMA            reduce using rule 44 (datatype -> strsize .)
    RPAREN          reduce using rule 44 (datatype -> strsize .)
    LLLAVE          reduce using rule 44 (datatype -> strsize .)


state 211

    (45) datatype -> STRING .

    COMA            reduce using rule 45 (datatype -> STRING .)
    RPAREN          reduce using rule 45 (datatype -> STRING .)
    LLLAVE          reduce using rule 45 (datatype -> STRING .)


state 212

    (46) datatype -> BOOL .

    COMA            reduce using rule 46 (datatype -> BOOL .)
    RPAREN          reduce using rule 46 (datatype -> BOOL .)
    LLLAVE          reduce using rule 46 (datatype -> BOOL .)


state 213

    (57) intsize -> INT8 .

    COMA            reduce using rule 57 (intsize -> INT8 .)
    RPAREN          reduce using rule 57 (intsize -> INT8 .)
    LLLAVE          reduce using rule 57 (intsize -> INT8 .)


state 214

    (58) intsize -> INT16 .

    COMA            reduce using rule 58 (intsize -> INT16 .)
    RPAREN          reduce using rule 58 (intsize -> INT16 .)
    LLLAVE          reduce using rule 58 (intsize -> INT16 .)


state 215

    (59) intsize -> INT32 .

    COMA            reduce using rule 59 (intsize -> INT32 .)
    RPAREN          reduce using rule 59 (intsize -> INT32 .)
    LLLAVE          reduce using rule 59 (intsize -> INT32 .)


state 216

    (60) intsize -> INT64 .

    COMA            reduce using rule 60 (intsize -> INT64 .)
    RPAREN          reduce using rule 60 (intsize -> INT64 .)
    LLLAVE          reduce using rule 60 (intsize -> INT64 .)


state 217

    (61) intsize -> INT128 .

    COMA            reduce using rule 61 (intsize -> INT128 .)
    RPAREN          reduce using rule 61 (intsize -> INT128 .)
    LLLAVE          reduce using rule 61 (intsize -> INT128 .)


state 218

    (80) uintsize -> UINT8 .

    COMA            reduce using rule 80 (uintsize -> UINT8 .)
    RPAREN          reduce using rule 80 (uintsize -> UINT8 .)
    LLLAVE          reduce using rule 80 (uintsize -> UINT8 .)


state 219

    (81) uintsize -> UINT16 .

    COMA            reduce using rule 81 (uintsize -> UINT16 .)
    RPAREN          reduce using rule 81 (uintsize -> UINT16 .)
    LLLAVE          reduce using rule 81 (uintsize -> UINT16 .)


state 220

    (82) uintsize -> UINT32 .

    COMA            reduce using rule 82 (uintsize -> UINT32 .)
    RPAREN          reduce using rule 82 (uintsize -> UINT32 .)
    LLLAVE          reduce using rule 82 (uintsize -> UINT32 .)


state 221

    (83) uintsize -> UINT64 .

    COMA            reduce using rule 83 (uintsize -> UINT64 .)
    RPAREN          reduce using rule 83 (uintsize -> UINT64 .)
    LLLAVE          reduce using rule 83 (uintsize -> UINT64 .)


state 222

    (84) uintsize -> UINT128 .

    COMA            reduce using rule 84 (uintsize -> UINT128 .)
    RPAREN          reduce using rule 84 (uintsize -> UINT128 .)
    LLLAVE          reduce using rule 84 (uintsize -> UINT128 .)


state 223

    (73) floatsize -> FLOAT32 .

    COMA            reduce using rule 73 (floatsize -> FLOAT32 .)
    RPAREN          reduce using rule 73 (floatsize -> FLOAT32 .)
    LLLAVE          reduce using rule 73 (floatsize -> FLOAT32 .)


state 224

    (74) floatsize -> FLOAT64 .

    COMA            reduce using rule 74 (floatsize -> FLOAT64 .)
    RPAREN          reduce using rule 74 (floatsize -> FLOAT64 .)
    LLLAVE          reduce using rule 74 (floatsize -> FLOAT64 .)


state 225

    (92) funcion -> FN ID LPAREN params RPAREN LLLAVE . metodo RLLAVE
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (36) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (104) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> . LET ID IGUAL valor ENDCHAR
    (114) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (119) asignacion -> . CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> . CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> . CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> . CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> . CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> . CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> . CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> . CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> . CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> . CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
    (95) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (86) loop -> . LOOP LLLAVE metodo RLLAVE
    (106) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (96) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> . ID PLUS ID
    (75) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    metodo                         shift and go to state 269
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 226

    (115) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (117) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof ID RLLAVE
    (41) datatype -> . intsize
    (42) datatype -> . uintsize
    (43) datatype -> . floatsize
    (44) datatype -> . strsize
    (45) datatype -> . STRING
    (46) datatype -> . BOOL
    (57) intsize -> . INT8
    (58) intsize -> . INT16
    (59) intsize -> . INT32
    (60) intsize -> . INT64
    (61) intsize -> . INT128
    (80) uintsize -> . UINT8
    (81) uintsize -> . UINT16
    (82) uintsize -> . UINT32
    (83) uintsize -> . UINT64
    (84) uintsize -> . UINT128
    (73) floatsize -> . FLOAT32
    (74) floatsize -> . FLOAT64
    (89) strsize -> . AMPERSAND COMILLA STATIC STR
    (90) strsize -> . AMPERSAND STR

    STRING          shift and go to state 211
    BOOL            shift and go to state 212
    INT8            shift and go to state 213
    INT16           shift and go to state 214
    INT32           shift and go to state 215
    INT64           shift and go to state 216
    INT128          shift and go to state 217
    UINT8           shift and go to state 218
    UINT16          shift and go to state 219
    UINT32          shift and go to state 220
    UINT64          shift and go to state 221
    UINT128         shift and go to state 222
    FLOAT32         shift and go to state 223
    FLOAT64         shift and go to state 224
    AMPERSAND       shift and go to state 133

    datatype                       shift and go to state 270
    intsize                        shift and go to state 207
    uintsize                       shift and go to state 208
    floatsize                      shift and go to state 209
    strsize                        shift and go to state 210

state 227

    (96) vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 271


state 228

    (116) llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 272


state 229

    (118) llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 118 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 118 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 118 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 118 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 118 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 118 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 118 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 118 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    IO              reduce using rule 118 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    WHILE           reduce using rule 118 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 118 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)


state 230

    (31) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR

    NEW             shift and go to state 273


state 231

    (104) asignacion -> LET MUT ID IGUAL valor ENDCHAR .

    $end            reduce using rule 104 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    RLLAVE          reduce using rule 104 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    LET             reduce using rule 104 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    CONST           reduce using rule 104 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    PRINTLN         reduce using rule 104 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    LOOP            reduce using rule 104 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    IF              reduce using rule 104 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    ID              reduce using rule 104 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    IO              reduce using rule 104 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    WHILE           reduce using rule 104 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    RETURN          reduce using rule 104 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)


state 232

    (105) asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .

    $end            reduce using rule 105 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RLLAVE          reduce using rule 105 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LET             reduce using rule 105 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    CONST           reduce using rule 105 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    PRINTLN         reduce using rule 105 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LOOP            reduce using rule 105 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IF              reduce using rule 105 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    ID              reduce using rule 105 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IO              reduce using rule 105 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    WHILE           reduce using rule 105 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RETURN          reduce using rule 105 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)


state 233

    (114) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR
    (68) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR

    NEW             shift and go to state 274


state 234

    (39) hashmap -> HASHMAP DOSDOBLEPUNTOS . NEW LPAREN RPAREN

    NEW             shift and go to state 275


state 235

    (71) conectores -> ID signoconect ID .

    ENDCHAR         reduce using rule 71 (conectores -> ID signoconect ID .)


state 236

    (40) expresion -> valornumerico signo valornumerico .

    ENDCHAR         reduce using rule 40 (expresion -> valornumerico signo valornumerico .)


state 237

    (48) valornumerico -> NINTTYPE .

    ENDCHAR         reduce using rule 48 (valornumerico -> NINTTYPE .)


state 238

    (49) valornumerico -> INTTYPE .

    ENDCHAR         reduce using rule 49 (valornumerico -> INTTYPE .)


state 239

    (50) valornumerico -> FLOATTYPE .

    ENDCHAR         reduce using rule 50 (valornumerico -> FLOATTYPE .)


state 240

    (69) conectores -> boolean signoconect boolean .

    ENDCHAR         reduce using rule 69 (conectores -> boolean signoconect boolean .)


state 241

    (36) asignacion -> CONST ID COLON intsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 276


state 242

    (37) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 277


state 243

    (47) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 278


state 244

    (56) asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE . ENDCHAR

    ENDCHAR         shift and go to state 279


state 245

    (67) asignacion -> CONST ID COLON strsize IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 280


state 246

    (72) asignacion -> CONST ID COLON STRING IGUAL STRING . DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 281


state 247

    (79) asignacion -> CONST ID COLON STRING IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 282


state 248

    (85) asignacion -> CONST ID COLON BOOL IGUAL boolean . ENDCHAR

    ENDCHAR         shift and go to state 283


state 249

    (91) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR . ENDCHAR

    ENDCHAR         shift and go to state 284


state 250

    (119) asignacion -> CONST ID COLON INT8 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 285


state 251

    (120) asignacion -> CONST ID COLON INT16 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 286


state 252

    (121) asignacion -> CONST ID COLON INT32 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 287


state 253

    (122) asignacion -> CONST ID COLON INT64 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 288


state 254

    (123) asignacion -> CONST ID COLON INT128 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 289


state 255

    (124) asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 290


state 256

    (125) asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 291


state 257

    (126) asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 292


state 258

    (127) asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 293


state 259

    (128) asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 294


state 260

    (129) asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 295


state 261

    (130) asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 296


state 262

    (89) strsize -> AMPERSAND COMILLA STATIC . STR

    STR             shift and go to state 297


state 263

    (106) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 298


state 264

    (112) ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .

    LLLAVE          reduce using rule 112 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    RPAREN          reduce using rule 112 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    ENDCHAR         reduce using rule 112 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)


state 265

    (75) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT . READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT . READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    READLINE        shift and go to state 299


state 266

    (102) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (36) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (104) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> . LET ID IGUAL valor ENDCHAR
    (114) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (119) asignacion -> . CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> . CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> . CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> . CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> . CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> . CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> . CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> . CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> . CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> . CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
    (95) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (86) loop -> . LOOP LLLAVE metodo RLLAVE
    (106) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (96) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> . ID PLUS ID
    (75) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 300
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 267

    (103) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)


state 268

    (88) params -> ID COLON datatype COMA . params
    (87) params -> . ID COLON datatype
    (88) params -> . ID COLON datatype COMA params

    ID              shift and go to state 92

    params                         shift and go to state 301

state 269

    (92) funcion -> FN ID LPAREN params RPAREN LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 302


state 270

    (115) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (117) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof ID RLLAVE

    LLLAVE          shift and go to state 303


state 271

    (96) vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .

    $end            reduce using rule 96 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 96 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    LET             reduce using rule 96 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    CONST           reduce using rule 96 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 96 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    LOOP            reduce using rule 96 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    IF              reduce using rule 96 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    ID              reduce using rule 96 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    IO              reduce using rule 96 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    WHILE           reduce using rule 96 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    RETURN          reduce using rule 96 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)


state 272

    (116) llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .

    $end            reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    LET             reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    CONST           reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    LOOP            reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    IF              reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    ID              reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    IO              reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    WHILE           reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    RETURN          reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)


state 273

    (31) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 304


state 274

    (114) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR
    (68) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 305


state 275

    (39) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW . LPAREN RPAREN

    LPAREN          shift and go to state 306


state 276

    (36) asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 36 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 36 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 36 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 36 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 36 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 36 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 36 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 36 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 36 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 36 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 36 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)


state 277

    (37) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .

    $end            reduce using rule 37 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 37 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LET             reduce using rule 37 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    CONST           reduce using rule 37 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 37 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LOOP            reduce using rule 37 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IF              reduce using rule 37 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    ID              reduce using rule 37 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IO              reduce using rule 37 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    WHILE           reduce using rule 37 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RETURN          reduce using rule 37 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)


state 278

    (47) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 47 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 47 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 47 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 47 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 47 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 47 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 47 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 47 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 47 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 47 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 47 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)


state 279

    (56) asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .

    $end            reduce using rule 56 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    RLLAVE          reduce using rule 56 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    LET             reduce using rule 56 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    CONST           reduce using rule 56 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    PRINTLN         reduce using rule 56 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    LOOP            reduce using rule 56 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IF              reduce using rule 56 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    ID              reduce using rule 56 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IO              reduce using rule 56 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    WHILE           reduce using rule 56 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    RETURN          reduce using rule 56 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)


state 280

    (67) asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 67 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 67 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 67 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 67 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 67 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 67 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 67 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 67 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IO              reduce using rule 67 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    WHILE           reduce using rule 67 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 67 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)


state 281

    (72) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS . FROM LPAREN IDSTRING RPAREN ENDCHAR

    FROM            shift and go to state 307


state 282

    (79) asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 79 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 79 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 79 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 79 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 79 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 79 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 79 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 79 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IO              reduce using rule 79 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    WHILE           reduce using rule 79 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 79 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)


state 283

    (85) asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .

    $end            reduce using rule 85 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RLLAVE          reduce using rule 85 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LET             reduce using rule 85 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    CONST           reduce using rule 85 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    PRINTLN         reduce using rule 85 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LOOP            reduce using rule 85 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IF              reduce using rule 85 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    ID              reduce using rule 85 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IO              reduce using rule 85 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    WHILE           reduce using rule 85 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RETURN          reduce using rule 85 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)


state 284

    (91) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .

    $end            reduce using rule 91 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RLLAVE          reduce using rule 91 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LET             reduce using rule 91 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    CONST           reduce using rule 91 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    PRINTLN         reduce using rule 91 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LOOP            reduce using rule 91 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IF              reduce using rule 91 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    ID              reduce using rule 91 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IO              reduce using rule 91 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    WHILE           reduce using rule 91 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RETURN          reduce using rule 91 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)


state 285

    (119) asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 119 (asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 119 (asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 119 (asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 119 (asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 119 (asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 119 (asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 119 (asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 119 (asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 119 (asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 119 (asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 119 (asignacion -> CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR .)


state 286

    (120) asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 120 (asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 120 (asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 120 (asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 120 (asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 120 (asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 120 (asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 120 (asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 120 (asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 120 (asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 120 (asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 120 (asignacion -> CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR .)


state 287

    (121) asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 121 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 121 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 121 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 121 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 121 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 121 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 121 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 121 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 121 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 121 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 121 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)


state 288

    (122) asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 122 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 122 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 122 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 122 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 122 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 122 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 122 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 122 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 122 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 122 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 122 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)


state 289

    (123) asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 123 (asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 123 (asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 123 (asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 123 (asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 123 (asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 123 (asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 123 (asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 123 (asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 123 (asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 123 (asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 123 (asignacion -> CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR .)


state 290

    (124) asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 124 (asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 124 (asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 124 (asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 124 (asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 124 (asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 124 (asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 124 (asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 124 (asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 124 (asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 124 (asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 124 (asignacion -> CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR .)


state 291

    (125) asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 125 (asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 125 (asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 125 (asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 125 (asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 125 (asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 125 (asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 125 (asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 125 (asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 125 (asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 125 (asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 125 (asignacion -> CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR .)


state 292

    (126) asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 126 (asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 126 (asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 126 (asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 126 (asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 126 (asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 126 (asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 126 (asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 126 (asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 126 (asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 126 (asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 126 (asignacion -> CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR .)


state 293

    (127) asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 127 (asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 127 (asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 127 (asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 127 (asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 127 (asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 127 (asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 127 (asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 127 (asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 127 (asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 127 (asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 127 (asignacion -> CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR .)


state 294

    (128) asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 128 (asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 128 (asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 128 (asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 128 (asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 128 (asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 128 (asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 128 (asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 128 (asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 128 (asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 128 (asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 128 (asignacion -> CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR .)


state 295

    (129) asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 129 (asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 129 (asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 129 (asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 129 (asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 129 (asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 129 (asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 129 (asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 129 (asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 129 (asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 129 (asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 129 (asignacion -> CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR .)


state 296

    (130) asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 130 (asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 130 (asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 130 (asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 130 (asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 130 (asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 130 (asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 130 (asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 130 (asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 130 (asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 130 (asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 130 (asignacion -> CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR .)


state 297

    (89) strsize -> AMPERSAND COMILLA STATIC STR .

    IGUAL           reduce using rule 89 (strsize -> AMPERSAND COMILLA STATIC STR .)
    COMA            reduce using rule 89 (strsize -> AMPERSAND COMILLA STATIC STR .)
    RPAREN          reduce using rule 89 (strsize -> AMPERSAND COMILLA STATIC STR .)
    LLLAVE          reduce using rule 89 (strsize -> AMPERSAND COMILLA STATIC STR .)


state 298

    (106) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 106 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 106 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 106 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 106 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 106 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 106 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 106 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 106 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 106 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 106 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 106 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 106 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 299

    (75) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE . LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE . LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 308


state 300

    (102) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 309


state 301

    (88) params -> ID COLON datatype COMA params .

    RPAREN          reduce using rule 88 (params -> ID COLON datatype COMA params .)


state 302

    (92) funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE .

    $end            reduce using rule 92 (funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE .)


state 303

    (115) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof RETURN ifparams ENDCHAR RLLAVE
    (117) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof ID RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . sumaint
    (15) metodo -> . entrada
    (16) metodo -> . while
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (36) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (37) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (47) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (56) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (67) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (72) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (79) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (85) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (91) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (104) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (105) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (108) asignacion -> . LET ID IGUAL valor ENDCHAR
    (114) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (119) asignacion -> . CONST ID COLON INT8 IGUAL INTTYPE ENDCHAR
    (120) asignacion -> . CONST ID COLON INT16 IGUAL INTTYPE ENDCHAR
    (121) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (122) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (123) asignacion -> . CONST ID COLON INT128 IGUAL INTTYPE ENDCHAR
    (124) asignacion -> . CONST ID COLON UINT8 IGUAL INTTYPE ENDCHAR
    (125) asignacion -> . CONST ID COLON UINT16 IGUAL INTTYPE ENDCHAR
    (126) asignacion -> . CONST ID COLON UINT32 IGUAL INTTYPE ENDCHAR
    (127) asignacion -> . CONST ID COLON UINT64 IGUAL INTTYPE ENDCHAR
    (128) asignacion -> . CONST ID COLON UINT128 IGUAL INTTYPE ENDCHAR
    (129) asignacion -> . CONST ID COLON FLOAT32 IGUAL INTTYPE ENDCHAR
    (130) asignacion -> . CONST ID COLON FLOAT64 IGUAL INTTYPE ENDCHAR
    (95) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (86) loop -> . LOOP LLLAVE metodo RLLAVE
    (106) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (107) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (96) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (118) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (131) sumaint -> . ID PLUS ID
    (75) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (35) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    cuerpof                        shift and go to state 310
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 304

    (31) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 311


state 305

    (114) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR
    (68) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 312


state 306

    (39) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN . RPAREN

    RPAREN          shift and go to state 313


state 307

    (72) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 314


state 308

    (75) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN . AMPERSAND MUT ID RPAREN ENDCHAR
    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN . AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    AMPERSAND       shift and go to state 315


state 309

    (102) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 310

    (115) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . RETURN ifparams ENDCHAR RLLAVE
    (117) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . ID RLLAVE

    RETURN          shift and go to state 317
    ID              shift and go to state 316


state 311

    (31) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 318


state 312

    (114) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR
    (68) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 319


state 313

    (39) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .

    ENDCHAR         reduce using rule 39 (hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .)


state 314

    (72) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 320


state 315

    (75) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND . MUT ID RPAREN ENDCHAR
    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND . MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    MUT             shift and go to state 321


state 316

    (117) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID . RLLAVE

    RLLAVE          shift and go to state 322


state 317

    (115) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN . ifparams ENDCHAR RLLAVE
    (97) ifparams -> . ifcondicion
    (98) ifparams -> . boolean
    (99) ifparams -> . ID
    (109) ifcondicion -> . comparacion
    (110) ifcondicion -> . comparacion signoconect ifcondicion
    (111) ifcondicion -> . LPAREN comparacion RPAREN
    (112) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (113) ifcondicion -> . LPAREN ifcondicion RPAREN
    (93) boolean -> . TRUE
    (94) boolean -> . FALSE
    (28) comparacion -> . ID signocompar ID
    (29) comparacion -> . IDCHAR signocompar IDCHAR
    (30) comparacion -> . IDSTRING signocompar IDSTRING
    (32) comparacion -> . INTTYPE signocompar INTTYPE
    (33) comparacion -> . NINTTYPE signocompar NINTTYPE
    (34) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (38) comparacion -> . boolean signocompar boolean

    ID              shift and go to state 39
    LPAREN          shift and go to state 50
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47

    ifparams                       shift and go to state 323
    ifcondicion                    shift and go to state 37
    boolean                        shift and go to state 38
    comparacion                    shift and go to state 40

state 318

    (31) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IO              reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    WHILE           reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)


state 319

    (114) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .
    (68) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 114 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 114 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 114 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 114 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 114 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 114 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 114 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 114 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IO              reduce using rule 114 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    WHILE           reduce using rule 114 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 114 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ENDCHAR         reduce using rule 68 (linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)


state 320

    (72) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 324


state 321

    (75) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT . ID RPAREN ENDCHAR
    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT . ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    ID              shift and go to state 325


state 322

    (117) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .

    $end            reduce using rule 117 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .)


state 323

    (115) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams . ENDCHAR RLLAVE

    ENDCHAR         shift and go to state 326


state 324

    (72) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 327


state 325

    (75) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID . RPAREN ENDCHAR
    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID . RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    RPAREN          shift and go to state 328


state 326

    (115) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR . RLLAVE

    RLLAVE          shift and go to state 329


state 327

    (72) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 72 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 72 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 72 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 72 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 72 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 72 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 72 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 72 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 72 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 72 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 72 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)


state 328

    (75) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN . ENDCHAR
    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN . POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    ENDCHAR         shift and go to state 331
    POINT           shift and go to state 330


state 329

    (115) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .

    $end            reduce using rule 115 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .)


state 330

    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT . EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    EXPECT          shift and go to state 332


state 331

    (75) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .

    $end            reduce using rule 75 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 75 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    LET             reduce using rule 75 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    CONST           reduce using rule 75 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 75 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    LOOP            reduce using rule 75 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    IF              reduce using rule 75 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    ID              reduce using rule 75 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    IO              reduce using rule 75 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    WHILE           reduce using rule 75 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    RETURN          reduce using rule 75 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)


state 332

    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 333


state 333

    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 334


state 334

    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 335


state 335

    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 336


state 336

    (76) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 76 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 76 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 76 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 76 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 76 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 76 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 76 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 76 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 76 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 76 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 76 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 65 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 66 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 126 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 127 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 131 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 132 resolved as shift
