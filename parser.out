Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASYNC
    AWAIT
    BREAK
    CONTINUE
    DIVASIGN
    DOLAR
    DYN
    ENUM
    ERR
    FINAL
    FOR
    FORMAT
    IMPL
    IN
    INPUT
    INTERRO
    LCOR
    MAINFN
    MATCH
    MOVE
    MULTIASIGN
    OK
    PARSE
    POINTERSIZE
    PRIV
    PUB
    RCOR
    REF
    RESTAASIGN
    SELF
    SIZEOF
    STRUCT
    SUMAASIGN
    SUPER
    TYPE
    TYPEOF
    UNSAFE
    UNWRAPOR
    USE
    WHERE

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> metodo
Rule 2     cuerpo -> funcion
Rule 3     cuerpof -> metodo
Rule 4     cuerpof -> metodo cuerpof
Rule 5     asignacion -> LET MUT ID IGUAL valor ENDCHAR
Rule 6     asignacion -> LET MUT ID IGUAL estructuras ENDCHAR
Rule 7     metodo -> asignacion
Rule 8     metodo -> impresion
Rule 9     metodo -> loop
Rule 10    metodo -> ifblock
Rule 11    metodo -> elseifblock
Rule 12    metodo -> elseblock
Rule 13    metodo -> entrada
Rule 14    metodo -> while
Rule 15    asignacion -> LET ID IGUAL valor ENDCHAR
Rule 16    asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
Rule 17    asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
Rule 18    valor -> valornumerico
Rule 19    valor -> TRUE
Rule 20    valor -> FALSE
Rule 21    valor -> ID
Rule 22    valor -> IDCHAR
Rule 23    valor -> IDSTRING
Rule 24    valor -> expresion
Rule 25    valor -> conectores
Rule 26    valor -> comparacion
Rule 27    asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
Rule 28    comparacion -> valorescomp signocompar valorescomp
Rule 29    asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
Rule 30    signocompar -> MAYORQUE
Rule 31    signocompar -> MENORQUE
Rule 32    signocompar -> DIFERENTE
Rule 33    signocompar -> IDENTICO
Rule 34    asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
Rule 35    asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
Rule 36    estructuras -> linkedlist
Rule 37    estructuras -> hashmap
Rule 38    estructuras -> vec
Rule 39    valorescomp -> ID
Rule 40    valorescomp -> IDCHAR
Rule 41    valorescomp -> IDSTRING
Rule 42    valorescomp -> INTTYPE
Rule 43    valorescomp -> NINTTYPE
Rule 44    valorescomp -> FLOATTYPE
Rule 45    valorescomp -> NFLOATTYPE
Rule 46    valorescomp -> boolean
Rule 47    asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
Rule 48    asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR
Rule 49    while -> WHILE ifparams LLLAVE cuerpof RLLAVE
Rule 50    asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
Rule 51    linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN
Rule 52    datatype -> intsize
Rule 53    datatype -> uintsize
Rule 54    datatype -> floatsize
Rule 55    datatype -> strsize
Rule 56    datatype -> STRING
Rule 57    hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
Rule 58    conectores -> boolean signoconect boolean
Rule 59    conectores -> EXCLAM boolean
Rule 60    conectores -> ID signoconect ID
Rule 61    vec -> VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN
Rule 62    signoconect -> DAMPERSAND
Rule 63    signoconect -> OR
Rule 64    intsize -> INT8
Rule 65    intsize -> INT16
Rule 66    intsize -> INT32
Rule 67    intsize -> INT64
Rule 68    intsize -> INT128
Rule 69    expresion -> valornumerico signo valornumerico
Rule 70    valornumerico -> NINTTYPE
Rule 71    valornumerico -> INTTYPE
Rule 72    valornumerico -> FLOATTYPE
Rule 73    valornumerico -> NFLOATTYPE
Rule 74    loop -> LOOP LLLAVE metodo RLLAVE
Rule 75    floatsize -> FLOAT32
Rule 76    floatsize -> FLOAT64
Rule 77    params -> ID COLON datatype
Rule 78    params -> ID COLON datatype COMA params
Rule 79    signo -> PLUS
Rule 80    signo -> TIMES
Rule 81    signo -> MINUS
Rule 82    signo -> PORCENTAJE
Rule 83    signo -> DIVIDE
Rule 84    uintsize -> UINT8
Rule 85    uintsize -> UINT16
Rule 86    uintsize -> UINT32
Rule 87    uintsize -> UINT64
Rule 88    uintsize -> UINT128
Rule 89    funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE
Rule 90    impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
Rule 91    strsize -> AMPERSAND COMILLA STATIC STR
Rule 92    strsize -> AMPERSAND STR
Rule 93    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
Rule 94    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
Rule 95    boolean -> TRUE
Rule 96    boolean -> FALSE
Rule 97    ifparams -> ifcondicion
Rule 98    ifparams -> boolean
Rule 99    ifparams -> ID
Rule 100   elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE
Rule 101   elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE
Rule 102   elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 103   elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
Rule 104   ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 105   ifblock -> IF ifparams LLLAVE cuerpof RLLAVE
Rule 106   ifcondicion -> comparacion
Rule 107   ifcondicion -> comparacion signoconect ifcondicion
Rule 108   ifcondicion -> LPAREN comparacion RPAREN
Rule 109   ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion
Rule 110   ifcondicion -> LPAREN ifcondicion RPAREN
Rule 111   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
Rule 112   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

Terminals, with rules where they appear

AMPERSAND            : 91 92 93 94
ARROWOPT             : 111 112
ASYNC                : 
AWAIT                : 
BOOL                 : 48
BREAK                : 
CHAR                 : 50
COLON                : 16 17 27 29 34 35 47 48 50 77 78
COMA                 : 78
COMILLA              : 91
CONST                : 16 17 27 29 34 35 47 48 50
CONTINUE             : 
DAMPERSAND           : 62
DIFERENTE            : 32
DIVASIGN             : 
DIVIDE               : 83
DOLAR                : 
DOSDOBLEPUNTOS       : 35 51 57 61 93 94
DYN                  : 
ELSE                 : 100 101 102 103
ENDCHAR              : 5 6 15 16 17 27 29 34 35 47 48 50 90 93 94 111
ENUM                 : 
ERR                  : 
EXCLAM               : 59
EXPECT               : 94
FALSE                : 20 96
FINAL                : 
FLOAT32              : 75
FLOAT64              : 76
FLOATTYPE            : 29 44 72
FN                   : 89 111 112
FOR                  : 
FORMAT               : 
FROM                 : 35
HASHMAP              : 57
ID                   : 5 6 15 16 17 21 27 29 34 35 39 47 48 50 60 60 77 78 89 93 94 99 111 112 112
IDCHAR               : 22 40 50
IDENTICO             : 33
IDSTRING             : 23 34 35 41 47 90 94
IF                   : 102 103 104 105
IGUAL                : 5 6 15 16 17 27 29 34 35 47 48 50
IMPL                 : 
IN                   : 
INPUT                : 
INT128               : 68
INT16                : 65
INT32                : 66
INT64                : 67
INT8                 : 64
INTERRO              : 
INTTYPE              : 16 27 42 71
IO                   : 93 94
LCOR                 : 
LET                  : 5 6 15
LINKEDLIST           : 51
LLLAVE               : 49 74 89 100 101 102 103 104 105 111 112
LOOP                 : 74
LPAREN               : 35 51 57 61 89 90 93 93 94 94 94 102 104 108 109 110 111 112
MAINFN               : 
MATCH                : 
MAYORQUE             : 30
MENORQUE             : 31
MINUS                : 81
MOVE                 : 
MULTIASIGN           : 
MUT                  : 5 6 93 94
NEW                  : 51 57 61
NFLOATTYPE           : 45 73
NINTTYPE             : 17 43 70
OK                   : 
OR                   : 63
PARSE                : 
PLUS                 : 79
POINT                : 93 94 94
POINTERSIZE          : 
PORCENTAJE           : 82
PRINTLN              : 90
PRIV                 : 
PUB                  : 
RCOR                 : 
READLINE             : 93 94
REF                  : 
RESTAASIGN           : 
RETURN               : 111
RLLAVE               : 49 74 89 100 101 102 103 104 105 111 112
RPAREN               : 35 51 57 61 89 90 93 93 94 94 94 102 104 108 109 110 111 112
SELF                 : 
SIZEOF               : 
STATIC               : 91
STDIN                : 93 94
STR                  : 91 92
STRING               : 35 35 47 56
STRUCT               : 
SUMAASIGN            : 
SUPER                : 
TIMES                : 80
TRUE                 : 19 95
TYPE                 : 
TYPEOF               : 
UINT128              : 88
UINT16               : 85
UINT32               : 86
UINT64               : 87
UINT8                : 84
UNSAFE               : 
UNWRAPOR             : 
USE                  : 
VEC                  : 61
WHERE                : 
WHILE                : 49
error                : 

Nonterminals, with rules where they appear

asignacion           : 7
boolean              : 46 48 58 58 59 98
comparacion          : 26 106 107 108 109
conectores           : 25
cuerpo               : 0
cuerpof              : 4 49 100 101 102 103 104 105 111 112
datatype             : 77 78 111 112
elseblock            : 12
elseifblock          : 11 101
entrada              : 13
estructuras          : 6
expresion            : 24
floatsize            : 29 54
funcion              : 2
hashmap              : 37
ifblock              : 10 100 102 103
ifcondicion          : 97 107 109 110
ifparams             : 49 102 103 104 105 111
impresion            : 8
intsize              : 16 17 52
linkedlist           : 36
loop                 : 9
metodo               : 1 3 4 74 89
params               : 78 89 111 112
signo                : 69
signocompar          : 28
signoconect          : 58 60 107 109
strsize              : 34 55
uintsize             : 27 53
valor                : 5 15
valorescomp          : 28 28
valornumerico        : 18 69 69
vec                  : 38
while                : 14

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . metodo
    (2) cuerpo -> . funcion
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . entrada
    (14) metodo -> . while
    (89) funcion -> . FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE
    (111) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (112) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> . LET ID IGUAL valor ENDCHAR
    (16) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (90) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (74) loop -> . LOOP LLLAVE metodo RLLAVE
    (104) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (93) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (49) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    FN              shift and go to state 12
    LET             shift and go to state 13
    CONST           shift and go to state 14
    PRINTLN         shift and go to state 15
    LOOP            shift and go to state 16
    IF              shift and go to state 17
    IO              shift and go to state 18
    WHILE           shift and go to state 19

    cuerpo                         shift and go to state 1
    metodo                         shift and go to state 2
    funcion                        shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    entrada                        shift and go to state 10
    while                          shift and go to state 11

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> metodo .

    $end            reduce using rule 1 (cuerpo -> metodo .)


state 3

    (2) cuerpo -> funcion .

    $end            reduce using rule 2 (cuerpo -> funcion .)


state 4

    (7) metodo -> asignacion .

    $end            reduce using rule 7 (metodo -> asignacion .)
    RLLAVE          reduce using rule 7 (metodo -> asignacion .)
    LET             reduce using rule 7 (metodo -> asignacion .)
    CONST           reduce using rule 7 (metodo -> asignacion .)
    PRINTLN         reduce using rule 7 (metodo -> asignacion .)
    LOOP            reduce using rule 7 (metodo -> asignacion .)
    IF              reduce using rule 7 (metodo -> asignacion .)
    IO              reduce using rule 7 (metodo -> asignacion .)
    WHILE           reduce using rule 7 (metodo -> asignacion .)
    RETURN          reduce using rule 7 (metodo -> asignacion .)
    ID              reduce using rule 7 (metodo -> asignacion .)


state 5

    (8) metodo -> impresion .

    $end            reduce using rule 8 (metodo -> impresion .)
    RLLAVE          reduce using rule 8 (metodo -> impresion .)
    LET             reduce using rule 8 (metodo -> impresion .)
    CONST           reduce using rule 8 (metodo -> impresion .)
    PRINTLN         reduce using rule 8 (metodo -> impresion .)
    LOOP            reduce using rule 8 (metodo -> impresion .)
    IF              reduce using rule 8 (metodo -> impresion .)
    IO              reduce using rule 8 (metodo -> impresion .)
    WHILE           reduce using rule 8 (metodo -> impresion .)
    RETURN          reduce using rule 8 (metodo -> impresion .)
    ID              reduce using rule 8 (metodo -> impresion .)


state 6

    (9) metodo -> loop .

    $end            reduce using rule 9 (metodo -> loop .)
    RLLAVE          reduce using rule 9 (metodo -> loop .)
    LET             reduce using rule 9 (metodo -> loop .)
    CONST           reduce using rule 9 (metodo -> loop .)
    PRINTLN         reduce using rule 9 (metodo -> loop .)
    LOOP            reduce using rule 9 (metodo -> loop .)
    IF              reduce using rule 9 (metodo -> loop .)
    IO              reduce using rule 9 (metodo -> loop .)
    WHILE           reduce using rule 9 (metodo -> loop .)
    RETURN          reduce using rule 9 (metodo -> loop .)
    ID              reduce using rule 9 (metodo -> loop .)


state 7

    (10) metodo -> ifblock .
    (102) elseifblock -> ifblock . ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> ifblock . ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> ifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 10 (metodo -> ifblock .)
    RLLAVE          reduce using rule 10 (metodo -> ifblock .)
    LET             reduce using rule 10 (metodo -> ifblock .)
    CONST           reduce using rule 10 (metodo -> ifblock .)
    PRINTLN         reduce using rule 10 (metodo -> ifblock .)
    LOOP            reduce using rule 10 (metodo -> ifblock .)
    IF              reduce using rule 10 (metodo -> ifblock .)
    IO              reduce using rule 10 (metodo -> ifblock .)
    WHILE           reduce using rule 10 (metodo -> ifblock .)
    RETURN          reduce using rule 10 (metodo -> ifblock .)
    ID              reduce using rule 10 (metodo -> ifblock .)
    ELSE            shift and go to state 20


state 8

    (11) metodo -> elseifblock .
    (101) elseblock -> elseifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 11 (metodo -> elseifblock .)
    RLLAVE          reduce using rule 11 (metodo -> elseifblock .)
    LET             reduce using rule 11 (metodo -> elseifblock .)
    CONST           reduce using rule 11 (metodo -> elseifblock .)
    PRINTLN         reduce using rule 11 (metodo -> elseifblock .)
    LOOP            reduce using rule 11 (metodo -> elseifblock .)
    IF              reduce using rule 11 (metodo -> elseifblock .)
    IO              reduce using rule 11 (metodo -> elseifblock .)
    WHILE           reduce using rule 11 (metodo -> elseifblock .)
    RETURN          reduce using rule 11 (metodo -> elseifblock .)
    ID              reduce using rule 11 (metodo -> elseifblock .)
    ELSE            shift and go to state 21


state 9

    (12) metodo -> elseblock .

    $end            reduce using rule 12 (metodo -> elseblock .)
    RLLAVE          reduce using rule 12 (metodo -> elseblock .)
    LET             reduce using rule 12 (metodo -> elseblock .)
    CONST           reduce using rule 12 (metodo -> elseblock .)
    PRINTLN         reduce using rule 12 (metodo -> elseblock .)
    LOOP            reduce using rule 12 (metodo -> elseblock .)
    IF              reduce using rule 12 (metodo -> elseblock .)
    IO              reduce using rule 12 (metodo -> elseblock .)
    WHILE           reduce using rule 12 (metodo -> elseblock .)
    RETURN          reduce using rule 12 (metodo -> elseblock .)
    ID              reduce using rule 12 (metodo -> elseblock .)


state 10

    (13) metodo -> entrada .

    $end            reduce using rule 13 (metodo -> entrada .)
    RLLAVE          reduce using rule 13 (metodo -> entrada .)
    LET             reduce using rule 13 (metodo -> entrada .)
    CONST           reduce using rule 13 (metodo -> entrada .)
    PRINTLN         reduce using rule 13 (metodo -> entrada .)
    LOOP            reduce using rule 13 (metodo -> entrada .)
    IF              reduce using rule 13 (metodo -> entrada .)
    IO              reduce using rule 13 (metodo -> entrada .)
    WHILE           reduce using rule 13 (metodo -> entrada .)
    RETURN          reduce using rule 13 (metodo -> entrada .)
    ID              reduce using rule 13 (metodo -> entrada .)


state 11

    (14) metodo -> while .

    $end            reduce using rule 14 (metodo -> while .)
    RLLAVE          reduce using rule 14 (metodo -> while .)
    LET             reduce using rule 14 (metodo -> while .)
    CONST           reduce using rule 14 (metodo -> while .)
    PRINTLN         reduce using rule 14 (metodo -> while .)
    LOOP            reduce using rule 14 (metodo -> while .)
    IF              reduce using rule 14 (metodo -> while .)
    IO              reduce using rule 14 (metodo -> while .)
    WHILE           reduce using rule 14 (metodo -> while .)
    RETURN          reduce using rule 14 (metodo -> while .)
    ID              reduce using rule 14 (metodo -> while .)


state 12

    (89) funcion -> FN . ID LPAREN params RPAREN LLLAVE metodo RLLAVE
    (111) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (112) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    ID              shift and go to state 22


state 13

    (5) asignacion -> LET . MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> LET . MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> LET . ID IGUAL valor ENDCHAR

    MUT             shift and go to state 23
    ID              shift and go to state 24


state 14

    (16) asignacion -> CONST . ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> CONST . ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> CONST . ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> CONST . ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> CONST . ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> CONST . ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> CONST . ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> CONST . ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> CONST . ID COLON CHAR IGUAL IDCHAR ENDCHAR

    ID              shift and go to state 25


state 15

    (90) impresion -> PRINTLN . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 26


state 16

    (74) loop -> LOOP . LLLAVE metodo RLLAVE

    LLLAVE          shift and go to state 27


state 17

    (104) ifblock -> IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> IF . ifparams LLLAVE cuerpof RLLAVE
    (97) ifparams -> . ifcondicion
    (98) ifparams -> . boolean
    (99) ifparams -> . ID
    (106) ifcondicion -> . comparacion
    (107) ifcondicion -> . comparacion signoconect ifcondicion
    (108) ifcondicion -> . LPAREN comparacion RPAREN
    (109) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (110) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE
    (28) comparacion -> . valorescomp signocompar valorescomp
    (39) valorescomp -> . ID
    (40) valorescomp -> . IDCHAR
    (41) valorescomp -> . IDSTRING
    (42) valorescomp -> . INTTYPE
    (43) valorescomp -> . NINTTYPE
    (44) valorescomp -> . FLOATTYPE
    (45) valorescomp -> . NFLOATTYPE
    (46) valorescomp -> . boolean

    LPAREN          shift and go to state 28
    ID              shift and go to state 32
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    IDCHAR          shift and go to state 37
    IDSTRING        shift and go to state 38
    INTTYPE         shift and go to state 39
    NINTTYPE        shift and go to state 40
    FLOATTYPE       shift and go to state 41
    NFLOATTYPE      shift and go to state 42

    ifparams                       shift and go to state 29
    ifcondicion                    shift and go to state 30
    boolean                        shift and go to state 31
    comparacion                    shift and go to state 33
    valorescomp                    shift and go to state 36

state 18

    (93) entrada -> IO . DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> IO . DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 43


state 19

    (49) while -> WHILE . ifparams LLLAVE cuerpof RLLAVE
    (97) ifparams -> . ifcondicion
    (98) ifparams -> . boolean
    (99) ifparams -> . ID
    (106) ifcondicion -> . comparacion
    (107) ifcondicion -> . comparacion signoconect ifcondicion
    (108) ifcondicion -> . LPAREN comparacion RPAREN
    (109) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (110) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE
    (28) comparacion -> . valorescomp signocompar valorescomp
    (39) valorescomp -> . ID
    (40) valorescomp -> . IDCHAR
    (41) valorescomp -> . IDSTRING
    (42) valorescomp -> . INTTYPE
    (43) valorescomp -> . NINTTYPE
    (44) valorescomp -> . FLOATTYPE
    (45) valorescomp -> . NFLOATTYPE
    (46) valorescomp -> . boolean

    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    IDCHAR          shift and go to state 37
    IDSTRING        shift and go to state 38
    INTTYPE         shift and go to state 39
    NINTTYPE        shift and go to state 40
    FLOATTYPE       shift and go to state 41
    NFLOATTYPE      shift and go to state 42

    ifparams                       shift and go to state 44
    ifcondicion                    shift and go to state 30
    boolean                        shift and go to state 31
    comparacion                    shift and go to state 33
    valorescomp                    shift and go to state 36

state 20

    (102) elseifblock -> ifblock ELSE . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> ifblock ELSE . IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> ifblock ELSE . LLLAVE cuerpof RLLAVE

    IF              shift and go to state 46
    LLLAVE          shift and go to state 47


state 21

    (101) elseblock -> elseifblock ELSE . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 48


state 22

    (89) funcion -> FN ID . LPAREN params RPAREN LLLAVE metodo RLLAVE
    (111) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (112) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    LPAREN          shift and go to state 49


state 23

    (5) asignacion -> LET MUT . ID IGUAL valor ENDCHAR
    (6) asignacion -> LET MUT . ID IGUAL estructuras ENDCHAR

    ID              shift and go to state 50


state 24

    (15) asignacion -> LET ID . IGUAL valor ENDCHAR

    IGUAL           shift and go to state 51


state 25

    (16) asignacion -> CONST ID . COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> CONST ID . COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> CONST ID . COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> CONST ID . COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> CONST ID . COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> CONST ID . COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> CONST ID . COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> CONST ID . COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> CONST ID . COLON CHAR IGUAL IDCHAR ENDCHAR

    COLON           shift and go to state 52


state 26

    (90) impresion -> PRINTLN LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 53


state 27

    (74) loop -> LOOP LLLAVE . metodo RLLAVE
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . entrada
    (14) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> . LET ID IGUAL valor ENDCHAR
    (16) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (90) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (74) loop -> . LOOP LLLAVE metodo RLLAVE
    (104) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (93) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (49) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 13
    CONST           shift and go to state 14
    PRINTLN         shift and go to state 15
    LOOP            shift and go to state 16
    IF              shift and go to state 17
    IO              shift and go to state 18
    WHILE           shift and go to state 19

    metodo                         shift and go to state 54
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    entrada                        shift and go to state 10
    while                          shift and go to state 11

state 28

    (104) ifblock -> IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (108) ifcondicion -> LPAREN . comparacion RPAREN
    (109) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (110) ifcondicion -> LPAREN . ifcondicion RPAREN
    (97) ifparams -> . ifcondicion
    (98) ifparams -> . boolean
    (99) ifparams -> . ID
    (28) comparacion -> . valorescomp signocompar valorescomp
    (106) ifcondicion -> . comparacion
    (107) ifcondicion -> . comparacion signoconect ifcondicion
    (108) ifcondicion -> . LPAREN comparacion RPAREN
    (109) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (110) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE
    (39) valorescomp -> . ID
    (40) valorescomp -> . IDCHAR
    (41) valorescomp -> . IDSTRING
    (42) valorescomp -> . INTTYPE
    (43) valorescomp -> . NINTTYPE
    (44) valorescomp -> . FLOATTYPE
    (45) valorescomp -> . NFLOATTYPE
    (46) valorescomp -> . boolean

    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    IDCHAR          shift and go to state 37
    IDSTRING        shift and go to state 38
    INTTYPE         shift and go to state 39
    NINTTYPE        shift and go to state 40
    FLOATTYPE       shift and go to state 41
    NFLOATTYPE      shift and go to state 42

    ifparams                       shift and go to state 55
    comparacion                    shift and go to state 56
    ifcondicion                    shift and go to state 57
    boolean                        shift and go to state 31
    valorescomp                    shift and go to state 36

state 29

    (105) ifblock -> IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 58


state 30

    (97) ifparams -> ifcondicion .

    LLLAVE          reduce using rule 97 (ifparams -> ifcondicion .)
    ENDCHAR         reduce using rule 97 (ifparams -> ifcondicion .)


state 31

    (98) ifparams -> boolean .
    (46) valorescomp -> boolean .

    LLLAVE          reduce using rule 98 (ifparams -> boolean .)
    RPAREN          reduce using rule 98 (ifparams -> boolean .)
    ENDCHAR         reduce using rule 98 (ifparams -> boolean .)
    MAYORQUE        reduce using rule 46 (valorescomp -> boolean .)
    MENORQUE        reduce using rule 46 (valorescomp -> boolean .)
    DIFERENTE       reduce using rule 46 (valorescomp -> boolean .)
    IDENTICO        reduce using rule 46 (valorescomp -> boolean .)


state 32

    (99) ifparams -> ID .
    (39) valorescomp -> ID .

    LLLAVE          reduce using rule 99 (ifparams -> ID .)
    RPAREN          reduce using rule 99 (ifparams -> ID .)
    ENDCHAR         reduce using rule 99 (ifparams -> ID .)
    MAYORQUE        reduce using rule 39 (valorescomp -> ID .)
    MENORQUE        reduce using rule 39 (valorescomp -> ID .)
    DIFERENTE       reduce using rule 39 (valorescomp -> ID .)
    IDENTICO        reduce using rule 39 (valorescomp -> ID .)


state 33

    (106) ifcondicion -> comparacion .
    (107) ifcondicion -> comparacion . signoconect ifcondicion
    (62) signoconect -> . DAMPERSAND
    (63) signoconect -> . OR

    LLLAVE          reduce using rule 106 (ifcondicion -> comparacion .)
    RPAREN          reduce using rule 106 (ifcondicion -> comparacion .)
    ENDCHAR         reduce using rule 106 (ifcondicion -> comparacion .)
    DAMPERSAND      shift and go to state 60
    OR              shift and go to state 61

    signoconect                    shift and go to state 59

state 34

    (95) boolean -> TRUE .

    LLLAVE          reduce using rule 95 (boolean -> TRUE .)
    MAYORQUE        reduce using rule 95 (boolean -> TRUE .)
    MENORQUE        reduce using rule 95 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 95 (boolean -> TRUE .)
    IDENTICO        reduce using rule 95 (boolean -> TRUE .)
    RPAREN          reduce using rule 95 (boolean -> TRUE .)
    DAMPERSAND      reduce using rule 95 (boolean -> TRUE .)
    OR              reduce using rule 95 (boolean -> TRUE .)
    ENDCHAR         reduce using rule 95 (boolean -> TRUE .)


state 35

    (96) boolean -> FALSE .

    LLLAVE          reduce using rule 96 (boolean -> FALSE .)
    MAYORQUE        reduce using rule 96 (boolean -> FALSE .)
    MENORQUE        reduce using rule 96 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 96 (boolean -> FALSE .)
    IDENTICO        reduce using rule 96 (boolean -> FALSE .)
    RPAREN          reduce using rule 96 (boolean -> FALSE .)
    DAMPERSAND      reduce using rule 96 (boolean -> FALSE .)
    OR              reduce using rule 96 (boolean -> FALSE .)
    ENDCHAR         reduce using rule 96 (boolean -> FALSE .)


state 36

    (28) comparacion -> valorescomp . signocompar valorescomp
    (30) signocompar -> . MAYORQUE
    (31) signocompar -> . MENORQUE
    (32) signocompar -> . DIFERENTE
    (33) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 63
    MENORQUE        shift and go to state 64
    DIFERENTE       shift and go to state 65
    IDENTICO        shift and go to state 66

    signocompar                    shift and go to state 62

state 37

    (40) valorescomp -> IDCHAR .

    MAYORQUE        reduce using rule 40 (valorescomp -> IDCHAR .)
    MENORQUE        reduce using rule 40 (valorescomp -> IDCHAR .)
    DIFERENTE       reduce using rule 40 (valorescomp -> IDCHAR .)
    IDENTICO        reduce using rule 40 (valorescomp -> IDCHAR .)
    DAMPERSAND      reduce using rule 40 (valorescomp -> IDCHAR .)
    OR              reduce using rule 40 (valorescomp -> IDCHAR .)
    LLLAVE          reduce using rule 40 (valorescomp -> IDCHAR .)
    RPAREN          reduce using rule 40 (valorescomp -> IDCHAR .)
    ENDCHAR         reduce using rule 40 (valorescomp -> IDCHAR .)


state 38

    (41) valorescomp -> IDSTRING .

    MAYORQUE        reduce using rule 41 (valorescomp -> IDSTRING .)
    MENORQUE        reduce using rule 41 (valorescomp -> IDSTRING .)
    DIFERENTE       reduce using rule 41 (valorescomp -> IDSTRING .)
    IDENTICO        reduce using rule 41 (valorescomp -> IDSTRING .)
    DAMPERSAND      reduce using rule 41 (valorescomp -> IDSTRING .)
    OR              reduce using rule 41 (valorescomp -> IDSTRING .)
    LLLAVE          reduce using rule 41 (valorescomp -> IDSTRING .)
    RPAREN          reduce using rule 41 (valorescomp -> IDSTRING .)
    ENDCHAR         reduce using rule 41 (valorescomp -> IDSTRING .)


state 39

    (42) valorescomp -> INTTYPE .

    MAYORQUE        reduce using rule 42 (valorescomp -> INTTYPE .)
    MENORQUE        reduce using rule 42 (valorescomp -> INTTYPE .)
    DIFERENTE       reduce using rule 42 (valorescomp -> INTTYPE .)
    IDENTICO        reduce using rule 42 (valorescomp -> INTTYPE .)
    DAMPERSAND      reduce using rule 42 (valorescomp -> INTTYPE .)
    OR              reduce using rule 42 (valorescomp -> INTTYPE .)
    LLLAVE          reduce using rule 42 (valorescomp -> INTTYPE .)
    RPAREN          reduce using rule 42 (valorescomp -> INTTYPE .)
    ENDCHAR         reduce using rule 42 (valorescomp -> INTTYPE .)


state 40

    (43) valorescomp -> NINTTYPE .

    MAYORQUE        reduce using rule 43 (valorescomp -> NINTTYPE .)
    MENORQUE        reduce using rule 43 (valorescomp -> NINTTYPE .)
    DIFERENTE       reduce using rule 43 (valorescomp -> NINTTYPE .)
    IDENTICO        reduce using rule 43 (valorescomp -> NINTTYPE .)
    DAMPERSAND      reduce using rule 43 (valorescomp -> NINTTYPE .)
    OR              reduce using rule 43 (valorescomp -> NINTTYPE .)
    LLLAVE          reduce using rule 43 (valorescomp -> NINTTYPE .)
    RPAREN          reduce using rule 43 (valorescomp -> NINTTYPE .)
    ENDCHAR         reduce using rule 43 (valorescomp -> NINTTYPE .)


state 41

    (44) valorescomp -> FLOATTYPE .

    MAYORQUE        reduce using rule 44 (valorescomp -> FLOATTYPE .)
    MENORQUE        reduce using rule 44 (valorescomp -> FLOATTYPE .)
    DIFERENTE       reduce using rule 44 (valorescomp -> FLOATTYPE .)
    IDENTICO        reduce using rule 44 (valorescomp -> FLOATTYPE .)
    DAMPERSAND      reduce using rule 44 (valorescomp -> FLOATTYPE .)
    OR              reduce using rule 44 (valorescomp -> FLOATTYPE .)
    LLLAVE          reduce using rule 44 (valorescomp -> FLOATTYPE .)
    RPAREN          reduce using rule 44 (valorescomp -> FLOATTYPE .)
    ENDCHAR         reduce using rule 44 (valorescomp -> FLOATTYPE .)


state 42

    (45) valorescomp -> NFLOATTYPE .

    MAYORQUE        reduce using rule 45 (valorescomp -> NFLOATTYPE .)
    MENORQUE        reduce using rule 45 (valorescomp -> NFLOATTYPE .)
    DIFERENTE       reduce using rule 45 (valorescomp -> NFLOATTYPE .)
    IDENTICO        reduce using rule 45 (valorescomp -> NFLOATTYPE .)
    DAMPERSAND      reduce using rule 45 (valorescomp -> NFLOATTYPE .)
    OR              reduce using rule 45 (valorescomp -> NFLOATTYPE .)
    LLLAVE          reduce using rule 45 (valorescomp -> NFLOATTYPE .)
    RPAREN          reduce using rule 45 (valorescomp -> NFLOATTYPE .)
    ENDCHAR         reduce using rule 45 (valorescomp -> NFLOATTYPE .)


state 43

    (93) entrada -> IO DOSDOBLEPUNTOS . STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> IO DOSDOBLEPUNTOS . STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    STDIN           shift and go to state 67


state 44

    (49) while -> WHILE ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 68


state 45

    (108) ifcondicion -> LPAREN . comparacion RPAREN
    (109) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (110) ifcondicion -> LPAREN . ifcondicion RPAREN
    (28) comparacion -> . valorescomp signocompar valorescomp
    (106) ifcondicion -> . comparacion
    (107) ifcondicion -> . comparacion signoconect ifcondicion
    (108) ifcondicion -> . LPAREN comparacion RPAREN
    (109) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (110) ifcondicion -> . LPAREN ifcondicion RPAREN
    (39) valorescomp -> . ID
    (40) valorescomp -> . IDCHAR
    (41) valorescomp -> . IDSTRING
    (42) valorescomp -> . INTTYPE
    (43) valorescomp -> . NINTTYPE
    (44) valorescomp -> . FLOATTYPE
    (45) valorescomp -> . NFLOATTYPE
    (46) valorescomp -> . boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    LPAREN          shift and go to state 45
    ID              shift and go to state 70
    IDCHAR          shift and go to state 37
    IDSTRING        shift and go to state 38
    INTTYPE         shift and go to state 39
    NINTTYPE        shift and go to state 40
    FLOATTYPE       shift and go to state 41
    NFLOATTYPE      shift and go to state 42
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    comparacion                    shift and go to state 56
    ifcondicion                    shift and go to state 69
    valorescomp                    shift and go to state 36
    boolean                        shift and go to state 71

state 46

    (102) elseifblock -> ifblock ELSE IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> ifblock ELSE IF . ifparams LLLAVE cuerpof RLLAVE
    (97) ifparams -> . ifcondicion
    (98) ifparams -> . boolean
    (99) ifparams -> . ID
    (106) ifcondicion -> . comparacion
    (107) ifcondicion -> . comparacion signoconect ifcondicion
    (108) ifcondicion -> . LPAREN comparacion RPAREN
    (109) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (110) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE
    (28) comparacion -> . valorescomp signocompar valorescomp
    (39) valorescomp -> . ID
    (40) valorescomp -> . IDCHAR
    (41) valorescomp -> . IDSTRING
    (42) valorescomp -> . INTTYPE
    (43) valorescomp -> . NINTTYPE
    (44) valorescomp -> . FLOATTYPE
    (45) valorescomp -> . NFLOATTYPE
    (46) valorescomp -> . boolean

    LPAREN          shift and go to state 72
    ID              shift and go to state 32
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    IDCHAR          shift and go to state 37
    IDSTRING        shift and go to state 38
    INTTYPE         shift and go to state 39
    NINTTYPE        shift and go to state 40
    FLOATTYPE       shift and go to state 41
    NFLOATTYPE      shift and go to state 42

    ifparams                       shift and go to state 73
    ifcondicion                    shift and go to state 30
    boolean                        shift and go to state 31
    comparacion                    shift and go to state 33
    valorescomp                    shift and go to state 36

state 47

    (100) elseblock -> ifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . entrada
    (14) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> . LET ID IGUAL valor ENDCHAR
    (16) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (90) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (74) loop -> . LOOP LLLAVE metodo RLLAVE
    (104) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (93) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (49) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 13
    CONST           shift and go to state 14
    PRINTLN         shift and go to state 15
    LOOP            shift and go to state 16
    IF              shift and go to state 17
    IO              shift and go to state 18
    WHILE           shift and go to state 19

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 74
    metodo                         shift and go to state 75
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    entrada                        shift and go to state 10
    while                          shift and go to state 11

state 48

    (101) elseblock -> elseifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . entrada
    (14) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> . LET ID IGUAL valor ENDCHAR
    (16) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (90) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (74) loop -> . LOOP LLLAVE metodo RLLAVE
    (104) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (93) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (49) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 13
    CONST           shift and go to state 14
    PRINTLN         shift and go to state 15
    LOOP            shift and go to state 16
    IF              shift and go to state 17
    IO              shift and go to state 18
    WHILE           shift and go to state 19

    elseifblock                    shift and go to state 8
    cuerpof                        shift and go to state 76
    metodo                         shift and go to state 75
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseblock                      shift and go to state 9
    entrada                        shift and go to state 10
    while                          shift and go to state 11

state 49

    (89) funcion -> FN ID LPAREN . params RPAREN LLLAVE metodo RLLAVE
    (111) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (112) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (77) params -> . ID COLON datatype
    (78) params -> . ID COLON datatype COMA params

    ID              shift and go to state 77

    params                         shift and go to state 78

state 50

    (5) asignacion -> LET MUT ID . IGUAL valor ENDCHAR
    (6) asignacion -> LET MUT ID . IGUAL estructuras ENDCHAR

    IGUAL           shift and go to state 79


state 51

    (15) asignacion -> LET ID IGUAL . valor ENDCHAR
    (18) valor -> . valornumerico
    (19) valor -> . TRUE
    (20) valor -> . FALSE
    (21) valor -> . ID
    (22) valor -> . IDCHAR
    (23) valor -> . IDSTRING
    (24) valor -> . expresion
    (25) valor -> . conectores
    (26) valor -> . comparacion
    (70) valornumerico -> . NINTTYPE
    (71) valornumerico -> . INTTYPE
    (72) valornumerico -> . FLOATTYPE
    (73) valornumerico -> . NFLOATTYPE
    (69) expresion -> . valornumerico signo valornumerico
    (58) conectores -> . boolean signoconect boolean
    (59) conectores -> . EXCLAM boolean
    (60) conectores -> . ID signoconect ID
    (28) comparacion -> . valorescomp signocompar valorescomp
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE
    (39) valorescomp -> . ID
    (40) valorescomp -> . IDCHAR
    (41) valorescomp -> . IDSTRING
    (42) valorescomp -> . INTTYPE
    (43) valorescomp -> . NINTTYPE
    (44) valorescomp -> . FLOATTYPE
    (45) valorescomp -> . NFLOATTYPE
    (46) valorescomp -> . boolean

    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    ID              shift and go to state 80
    IDCHAR          shift and go to state 85
    IDSTRING        shift and go to state 86
    NINTTYPE        shift and go to state 90
    INTTYPE         shift and go to state 91
    FLOATTYPE       shift and go to state 92
    NFLOATTYPE      shift and go to state 93
    EXCLAM          shift and go to state 95

    valor                          shift and go to state 81
    valornumerico                  shift and go to state 82
    expresion                      shift and go to state 87
    conectores                     shift and go to state 88
    comparacion                    shift and go to state 89
    boolean                        shift and go to state 94
    valorescomp                    shift and go to state 36

state 52

    (16) asignacion -> CONST ID COLON . intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> CONST ID COLON . intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> CONST ID COLON . uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> CONST ID COLON . floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> CONST ID COLON . strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> CONST ID COLON . STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> CONST ID COLON . STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> CONST ID COLON . BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> CONST ID COLON . CHAR IGUAL IDCHAR ENDCHAR
    (64) intsize -> . INT8
    (65) intsize -> . INT16
    (66) intsize -> . INT32
    (67) intsize -> . INT64
    (68) intsize -> . INT128
    (84) uintsize -> . UINT8
    (85) uintsize -> . UINT16
    (86) uintsize -> . UINT32
    (87) uintsize -> . UINT64
    (88) uintsize -> . UINT128
    (75) floatsize -> . FLOAT32
    (76) floatsize -> . FLOAT64
    (91) strsize -> . AMPERSAND COMILLA STATIC STR
    (92) strsize -> . AMPERSAND STR

    STRING          shift and go to state 100
    BOOL            shift and go to state 101
    CHAR            shift and go to state 102
    INT8            shift and go to state 103
    INT16           shift and go to state 104
    INT32           shift and go to state 105
    INT64           shift and go to state 106
    INT128          shift and go to state 107
    UINT8           shift and go to state 108
    UINT16          shift and go to state 109
    UINT32          shift and go to state 110
    UINT64          shift and go to state 111
    UINT128         shift and go to state 112
    FLOAT32         shift and go to state 113
    FLOAT64         shift and go to state 114
    AMPERSAND       shift and go to state 115

    intsize                        shift and go to state 96
    uintsize                       shift and go to state 97
    floatsize                      shift and go to state 98
    strsize                        shift and go to state 99

state 53

    (90) impresion -> PRINTLN LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 116


state 54

    (74) loop -> LOOP LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 117


state 55

    (104) ifblock -> IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 118


state 56

    (108) ifcondicion -> LPAREN comparacion . RPAREN
    (109) ifcondicion -> LPAREN comparacion . RPAREN signoconect ifcondicion
    (106) ifcondicion -> comparacion .
    (107) ifcondicion -> comparacion . signoconect ifcondicion
    (62) signoconect -> . DAMPERSAND
    (63) signoconect -> . OR

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 119
    DAMPERSAND      shift and go to state 60
    OR              shift and go to state 61

  ! RPAREN          [ reduce using rule 106 (ifcondicion -> comparacion .) ]

    signoconect                    shift and go to state 59

state 57

    (110) ifcondicion -> LPAREN ifcondicion . RPAREN
    (97) ifparams -> ifcondicion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 120

  ! RPAREN          [ reduce using rule 97 (ifparams -> ifcondicion .) ]


state 58

    (105) ifblock -> IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . entrada
    (14) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> . LET ID IGUAL valor ENDCHAR
    (16) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (90) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (74) loop -> . LOOP LLLAVE metodo RLLAVE
    (104) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (93) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (49) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 13
    CONST           shift and go to state 14
    PRINTLN         shift and go to state 15
    LOOP            shift and go to state 16
    IF              shift and go to state 17
    IO              shift and go to state 18
    WHILE           shift and go to state 19

    cuerpof                        shift and go to state 121
    metodo                         shift and go to state 75
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    entrada                        shift and go to state 10
    while                          shift and go to state 11

state 59

    (107) ifcondicion -> comparacion signoconect . ifcondicion
    (106) ifcondicion -> . comparacion
    (107) ifcondicion -> . comparacion signoconect ifcondicion
    (108) ifcondicion -> . LPAREN comparacion RPAREN
    (109) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (110) ifcondicion -> . LPAREN ifcondicion RPAREN
    (28) comparacion -> . valorescomp signocompar valorescomp
    (39) valorescomp -> . ID
    (40) valorescomp -> . IDCHAR
    (41) valorescomp -> . IDSTRING
    (42) valorescomp -> . INTTYPE
    (43) valorescomp -> . NINTTYPE
    (44) valorescomp -> . FLOATTYPE
    (45) valorescomp -> . NFLOATTYPE
    (46) valorescomp -> . boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    LPAREN          shift and go to state 45
    ID              shift and go to state 70
    IDCHAR          shift and go to state 37
    IDSTRING        shift and go to state 38
    INTTYPE         shift and go to state 39
    NINTTYPE        shift and go to state 40
    FLOATTYPE       shift and go to state 41
    NFLOATTYPE      shift and go to state 42
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    comparacion                    shift and go to state 33
    ifcondicion                    shift and go to state 122
    valorescomp                    shift and go to state 36
    boolean                        shift and go to state 71

state 60

    (62) signoconect -> DAMPERSAND .

    LPAREN          reduce using rule 62 (signoconect -> DAMPERSAND .)
    ID              reduce using rule 62 (signoconect -> DAMPERSAND .)
    IDCHAR          reduce using rule 62 (signoconect -> DAMPERSAND .)
    IDSTRING        reduce using rule 62 (signoconect -> DAMPERSAND .)
    INTTYPE         reduce using rule 62 (signoconect -> DAMPERSAND .)
    NINTTYPE        reduce using rule 62 (signoconect -> DAMPERSAND .)
    FLOATTYPE       reduce using rule 62 (signoconect -> DAMPERSAND .)
    NFLOATTYPE      reduce using rule 62 (signoconect -> DAMPERSAND .)
    TRUE            reduce using rule 62 (signoconect -> DAMPERSAND .)
    FALSE           reduce using rule 62 (signoconect -> DAMPERSAND .)


state 61

    (63) signoconect -> OR .

    LPAREN          reduce using rule 63 (signoconect -> OR .)
    ID              reduce using rule 63 (signoconect -> OR .)
    IDCHAR          reduce using rule 63 (signoconect -> OR .)
    IDSTRING        reduce using rule 63 (signoconect -> OR .)
    INTTYPE         reduce using rule 63 (signoconect -> OR .)
    NINTTYPE        reduce using rule 63 (signoconect -> OR .)
    FLOATTYPE       reduce using rule 63 (signoconect -> OR .)
    NFLOATTYPE      reduce using rule 63 (signoconect -> OR .)
    TRUE            reduce using rule 63 (signoconect -> OR .)
    FALSE           reduce using rule 63 (signoconect -> OR .)


state 62

    (28) comparacion -> valorescomp signocompar . valorescomp
    (39) valorescomp -> . ID
    (40) valorescomp -> . IDCHAR
    (41) valorescomp -> . IDSTRING
    (42) valorescomp -> . INTTYPE
    (43) valorescomp -> . NINTTYPE
    (44) valorescomp -> . FLOATTYPE
    (45) valorescomp -> . NFLOATTYPE
    (46) valorescomp -> . boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    ID              shift and go to state 70
    IDCHAR          shift and go to state 37
    IDSTRING        shift and go to state 38
    INTTYPE         shift and go to state 39
    NINTTYPE        shift and go to state 40
    FLOATTYPE       shift and go to state 41
    NFLOATTYPE      shift and go to state 42
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    valorescomp                    shift and go to state 123
    boolean                        shift and go to state 71

state 63

    (30) signocompar -> MAYORQUE .

    ID              reduce using rule 30 (signocompar -> MAYORQUE .)
    IDCHAR          reduce using rule 30 (signocompar -> MAYORQUE .)
    IDSTRING        reduce using rule 30 (signocompar -> MAYORQUE .)
    INTTYPE         reduce using rule 30 (signocompar -> MAYORQUE .)
    NINTTYPE        reduce using rule 30 (signocompar -> MAYORQUE .)
    FLOATTYPE       reduce using rule 30 (signocompar -> MAYORQUE .)
    NFLOATTYPE      reduce using rule 30 (signocompar -> MAYORQUE .)
    TRUE            reduce using rule 30 (signocompar -> MAYORQUE .)
    FALSE           reduce using rule 30 (signocompar -> MAYORQUE .)


state 64

    (31) signocompar -> MENORQUE .

    ID              reduce using rule 31 (signocompar -> MENORQUE .)
    IDCHAR          reduce using rule 31 (signocompar -> MENORQUE .)
    IDSTRING        reduce using rule 31 (signocompar -> MENORQUE .)
    INTTYPE         reduce using rule 31 (signocompar -> MENORQUE .)
    NINTTYPE        reduce using rule 31 (signocompar -> MENORQUE .)
    FLOATTYPE       reduce using rule 31 (signocompar -> MENORQUE .)
    NFLOATTYPE      reduce using rule 31 (signocompar -> MENORQUE .)
    TRUE            reduce using rule 31 (signocompar -> MENORQUE .)
    FALSE           reduce using rule 31 (signocompar -> MENORQUE .)


state 65

    (32) signocompar -> DIFERENTE .

    ID              reduce using rule 32 (signocompar -> DIFERENTE .)
    IDCHAR          reduce using rule 32 (signocompar -> DIFERENTE .)
    IDSTRING        reduce using rule 32 (signocompar -> DIFERENTE .)
    INTTYPE         reduce using rule 32 (signocompar -> DIFERENTE .)
    NINTTYPE        reduce using rule 32 (signocompar -> DIFERENTE .)
    FLOATTYPE       reduce using rule 32 (signocompar -> DIFERENTE .)
    NFLOATTYPE      reduce using rule 32 (signocompar -> DIFERENTE .)
    TRUE            reduce using rule 32 (signocompar -> DIFERENTE .)
    FALSE           reduce using rule 32 (signocompar -> DIFERENTE .)


state 66

    (33) signocompar -> IDENTICO .

    ID              reduce using rule 33 (signocompar -> IDENTICO .)
    IDCHAR          reduce using rule 33 (signocompar -> IDENTICO .)
    IDSTRING        reduce using rule 33 (signocompar -> IDENTICO .)
    INTTYPE         reduce using rule 33 (signocompar -> IDENTICO .)
    NINTTYPE        reduce using rule 33 (signocompar -> IDENTICO .)
    FLOATTYPE       reduce using rule 33 (signocompar -> IDENTICO .)
    NFLOATTYPE      reduce using rule 33 (signocompar -> IDENTICO .)
    TRUE            reduce using rule 33 (signocompar -> IDENTICO .)
    FALSE           reduce using rule 33 (signocompar -> IDENTICO .)


state 67

    (93) entrada -> IO DOSDOBLEPUNTOS STDIN . LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> IO DOSDOBLEPUNTOS STDIN . LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 124


state 68

    (49) while -> WHILE ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . entrada
    (14) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> . LET ID IGUAL valor ENDCHAR
    (16) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (90) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (74) loop -> . LOOP LLLAVE metodo RLLAVE
    (104) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (93) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (49) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 13
    CONST           shift and go to state 14
    PRINTLN         shift and go to state 15
    LOOP            shift and go to state 16
    IF              shift and go to state 17
    IO              shift and go to state 18
    WHILE           shift and go to state 19

    cuerpof                        shift and go to state 125
    metodo                         shift and go to state 75
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    entrada                        shift and go to state 10
    while                          shift and go to state 11

state 69

    (110) ifcondicion -> LPAREN ifcondicion . RPAREN

    RPAREN          shift and go to state 120


state 70

    (39) valorescomp -> ID .

    MAYORQUE        reduce using rule 39 (valorescomp -> ID .)
    MENORQUE        reduce using rule 39 (valorescomp -> ID .)
    DIFERENTE       reduce using rule 39 (valorescomp -> ID .)
    IDENTICO        reduce using rule 39 (valorescomp -> ID .)
    DAMPERSAND      reduce using rule 39 (valorescomp -> ID .)
    OR              reduce using rule 39 (valorescomp -> ID .)
    LLLAVE          reduce using rule 39 (valorescomp -> ID .)
    RPAREN          reduce using rule 39 (valorescomp -> ID .)
    ENDCHAR         reduce using rule 39 (valorescomp -> ID .)


state 71

    (46) valorescomp -> boolean .

    MAYORQUE        reduce using rule 46 (valorescomp -> boolean .)
    MENORQUE        reduce using rule 46 (valorescomp -> boolean .)
    DIFERENTE       reduce using rule 46 (valorescomp -> boolean .)
    IDENTICO        reduce using rule 46 (valorescomp -> boolean .)
    DAMPERSAND      reduce using rule 46 (valorescomp -> boolean .)
    OR              reduce using rule 46 (valorescomp -> boolean .)
    LLLAVE          reduce using rule 46 (valorescomp -> boolean .)
    RPAREN          reduce using rule 46 (valorescomp -> boolean .)
    ENDCHAR         reduce using rule 46 (valorescomp -> boolean .)


state 72

    (102) elseifblock -> ifblock ELSE IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (108) ifcondicion -> LPAREN . comparacion RPAREN
    (109) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (110) ifcondicion -> LPAREN . ifcondicion RPAREN
    (97) ifparams -> . ifcondicion
    (98) ifparams -> . boolean
    (99) ifparams -> . ID
    (28) comparacion -> . valorescomp signocompar valorescomp
    (106) ifcondicion -> . comparacion
    (107) ifcondicion -> . comparacion signoconect ifcondicion
    (108) ifcondicion -> . LPAREN comparacion RPAREN
    (109) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (110) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE
    (39) valorescomp -> . ID
    (40) valorescomp -> . IDCHAR
    (41) valorescomp -> . IDSTRING
    (42) valorescomp -> . INTTYPE
    (43) valorescomp -> . NINTTYPE
    (44) valorescomp -> . FLOATTYPE
    (45) valorescomp -> . NFLOATTYPE
    (46) valorescomp -> . boolean

    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    IDCHAR          shift and go to state 37
    IDSTRING        shift and go to state 38
    INTTYPE         shift and go to state 39
    NINTTYPE        shift and go to state 40
    FLOATTYPE       shift and go to state 41
    NFLOATTYPE      shift and go to state 42

    ifparams                       shift and go to state 126
    comparacion                    shift and go to state 56
    ifcondicion                    shift and go to state 57
    boolean                        shift and go to state 31
    valorescomp                    shift and go to state 36

state 73

    (103) elseifblock -> ifblock ELSE IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 127


state 74

    (100) elseblock -> ifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 128


state 75

    (3) cuerpof -> metodo .
    (4) cuerpof -> metodo . cuerpof
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . entrada
    (14) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> . LET ID IGUAL valor ENDCHAR
    (16) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (90) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (74) loop -> . LOOP LLLAVE metodo RLLAVE
    (104) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (93) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (49) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    RLLAVE          reduce using rule 3 (cuerpof -> metodo .)
    RETURN          reduce using rule 3 (cuerpof -> metodo .)
    ID              reduce using rule 3 (cuerpof -> metodo .)
    LET             shift and go to state 13
    CONST           shift and go to state 14
    PRINTLN         shift and go to state 15
    LOOP            shift and go to state 16
    IF              shift and go to state 17
    IO              shift and go to state 18
    WHILE           shift and go to state 19

    metodo                         shift and go to state 75
    cuerpof                        shift and go to state 129
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    entrada                        shift and go to state 10
    while                          shift and go to state 11

state 76

    (101) elseblock -> elseifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 130


state 77

    (77) params -> ID . COLON datatype
    (78) params -> ID . COLON datatype COMA params

    COLON           shift and go to state 131


state 78

    (89) funcion -> FN ID LPAREN params . RPAREN LLLAVE metodo RLLAVE
    (111) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (112) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    RPAREN          shift and go to state 132


state 79

    (5) asignacion -> LET MUT ID IGUAL . valor ENDCHAR
    (6) asignacion -> LET MUT ID IGUAL . estructuras ENDCHAR
    (18) valor -> . valornumerico
    (19) valor -> . TRUE
    (20) valor -> . FALSE
    (21) valor -> . ID
    (22) valor -> . IDCHAR
    (23) valor -> . IDSTRING
    (24) valor -> . expresion
    (25) valor -> . conectores
    (26) valor -> . comparacion
    (36) estructuras -> . linkedlist
    (37) estructuras -> . hashmap
    (38) estructuras -> . vec
    (70) valornumerico -> . NINTTYPE
    (71) valornumerico -> . INTTYPE
    (72) valornumerico -> . FLOATTYPE
    (73) valornumerico -> . NFLOATTYPE
    (69) expresion -> . valornumerico signo valornumerico
    (58) conectores -> . boolean signoconect boolean
    (59) conectores -> . EXCLAM boolean
    (60) conectores -> . ID signoconect ID
    (28) comparacion -> . valorescomp signocompar valorescomp
    (51) linkedlist -> . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN
    (57) hashmap -> . HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
    (61) vec -> . VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE
    (39) valorescomp -> . ID
    (40) valorescomp -> . IDCHAR
    (41) valorescomp -> . IDSTRING
    (42) valorescomp -> . INTTYPE
    (43) valorescomp -> . NINTTYPE
    (44) valorescomp -> . FLOATTYPE
    (45) valorescomp -> . NFLOATTYPE
    (46) valorescomp -> . boolean

    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    ID              shift and go to state 80
    IDCHAR          shift and go to state 85
    IDSTRING        shift and go to state 86
    NINTTYPE        shift and go to state 90
    INTTYPE         shift and go to state 91
    FLOATTYPE       shift and go to state 92
    NFLOATTYPE      shift and go to state 93
    EXCLAM          shift and go to state 95
    LINKEDLIST      shift and go to state 138
    HASHMAP         shift and go to state 139
    VEC             shift and go to state 140

    valor                          shift and go to state 133
    estructuras                    shift and go to state 134
    valornumerico                  shift and go to state 82
    expresion                      shift and go to state 87
    conectores                     shift and go to state 88
    comparacion                    shift and go to state 89
    linkedlist                     shift and go to state 135
    hashmap                        shift and go to state 136
    vec                            shift and go to state 137
    boolean                        shift and go to state 94
    valorescomp                    shift and go to state 36

state 80

    (21) valor -> ID .
    (60) conectores -> ID . signoconect ID
    (39) valorescomp -> ID .
    (62) signoconect -> . DAMPERSAND
    (63) signoconect -> . OR

    ENDCHAR         reduce using rule 21 (valor -> ID .)
    MAYORQUE        reduce using rule 39 (valorescomp -> ID .)
    MENORQUE        reduce using rule 39 (valorescomp -> ID .)
    DIFERENTE       reduce using rule 39 (valorescomp -> ID .)
    IDENTICO        reduce using rule 39 (valorescomp -> ID .)
    DAMPERSAND      shift and go to state 60
    OR              shift and go to state 61

    signoconect                    shift and go to state 141

state 81

    (15) asignacion -> LET ID IGUAL valor . ENDCHAR

    ENDCHAR         shift and go to state 142


state 82

    (18) valor -> valornumerico .
    (69) expresion -> valornumerico . signo valornumerico
    (79) signo -> . PLUS
    (80) signo -> . TIMES
    (81) signo -> . MINUS
    (82) signo -> . PORCENTAJE
    (83) signo -> . DIVIDE

    ENDCHAR         reduce using rule 18 (valor -> valornumerico .)
    PLUS            shift and go to state 144
    TIMES           shift and go to state 145
    MINUS           shift and go to state 146
    PORCENTAJE      shift and go to state 147
    DIVIDE          shift and go to state 148

    signo                          shift and go to state 143

state 83

    (19) valor -> TRUE .
    (95) boolean -> TRUE .

    ENDCHAR         reduce using rule 19 (valor -> TRUE .)
    DAMPERSAND      reduce using rule 95 (boolean -> TRUE .)
    OR              reduce using rule 95 (boolean -> TRUE .)
    MAYORQUE        reduce using rule 95 (boolean -> TRUE .)
    MENORQUE        reduce using rule 95 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 95 (boolean -> TRUE .)
    IDENTICO        reduce using rule 95 (boolean -> TRUE .)


state 84

    (20) valor -> FALSE .
    (96) boolean -> FALSE .

    ENDCHAR         reduce using rule 20 (valor -> FALSE .)
    DAMPERSAND      reduce using rule 96 (boolean -> FALSE .)
    OR              reduce using rule 96 (boolean -> FALSE .)
    MAYORQUE        reduce using rule 96 (boolean -> FALSE .)
    MENORQUE        reduce using rule 96 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 96 (boolean -> FALSE .)
    IDENTICO        reduce using rule 96 (boolean -> FALSE .)


state 85

    (22) valor -> IDCHAR .
    (40) valorescomp -> IDCHAR .

    ENDCHAR         reduce using rule 22 (valor -> IDCHAR .)
    MAYORQUE        reduce using rule 40 (valorescomp -> IDCHAR .)
    MENORQUE        reduce using rule 40 (valorescomp -> IDCHAR .)
    DIFERENTE       reduce using rule 40 (valorescomp -> IDCHAR .)
    IDENTICO        reduce using rule 40 (valorescomp -> IDCHAR .)


state 86

    (23) valor -> IDSTRING .
    (41) valorescomp -> IDSTRING .

    ENDCHAR         reduce using rule 23 (valor -> IDSTRING .)
    MAYORQUE        reduce using rule 41 (valorescomp -> IDSTRING .)
    MENORQUE        reduce using rule 41 (valorescomp -> IDSTRING .)
    DIFERENTE       reduce using rule 41 (valorescomp -> IDSTRING .)
    IDENTICO        reduce using rule 41 (valorescomp -> IDSTRING .)


state 87

    (24) valor -> expresion .

    ENDCHAR         reduce using rule 24 (valor -> expresion .)


state 88

    (25) valor -> conectores .

    ENDCHAR         reduce using rule 25 (valor -> conectores .)


state 89

    (26) valor -> comparacion .

    ENDCHAR         reduce using rule 26 (valor -> comparacion .)


state 90

    (70) valornumerico -> NINTTYPE .
    (43) valorescomp -> NINTTYPE .

    PLUS            reduce using rule 70 (valornumerico -> NINTTYPE .)
    TIMES           reduce using rule 70 (valornumerico -> NINTTYPE .)
    MINUS           reduce using rule 70 (valornumerico -> NINTTYPE .)
    PORCENTAJE      reduce using rule 70 (valornumerico -> NINTTYPE .)
    DIVIDE          reduce using rule 70 (valornumerico -> NINTTYPE .)
    ENDCHAR         reduce using rule 70 (valornumerico -> NINTTYPE .)
    MAYORQUE        reduce using rule 43 (valorescomp -> NINTTYPE .)
    MENORQUE        reduce using rule 43 (valorescomp -> NINTTYPE .)
    DIFERENTE       reduce using rule 43 (valorescomp -> NINTTYPE .)
    IDENTICO        reduce using rule 43 (valorescomp -> NINTTYPE .)


state 91

    (71) valornumerico -> INTTYPE .
    (42) valorescomp -> INTTYPE .

    PLUS            reduce using rule 71 (valornumerico -> INTTYPE .)
    TIMES           reduce using rule 71 (valornumerico -> INTTYPE .)
    MINUS           reduce using rule 71 (valornumerico -> INTTYPE .)
    PORCENTAJE      reduce using rule 71 (valornumerico -> INTTYPE .)
    DIVIDE          reduce using rule 71 (valornumerico -> INTTYPE .)
    ENDCHAR         reduce using rule 71 (valornumerico -> INTTYPE .)
    MAYORQUE        reduce using rule 42 (valorescomp -> INTTYPE .)
    MENORQUE        reduce using rule 42 (valorescomp -> INTTYPE .)
    DIFERENTE       reduce using rule 42 (valorescomp -> INTTYPE .)
    IDENTICO        reduce using rule 42 (valorescomp -> INTTYPE .)


state 92

    (72) valornumerico -> FLOATTYPE .
    (44) valorescomp -> FLOATTYPE .

    PLUS            reduce using rule 72 (valornumerico -> FLOATTYPE .)
    TIMES           reduce using rule 72 (valornumerico -> FLOATTYPE .)
    MINUS           reduce using rule 72 (valornumerico -> FLOATTYPE .)
    PORCENTAJE      reduce using rule 72 (valornumerico -> FLOATTYPE .)
    DIVIDE          reduce using rule 72 (valornumerico -> FLOATTYPE .)
    ENDCHAR         reduce using rule 72 (valornumerico -> FLOATTYPE .)
    MAYORQUE        reduce using rule 44 (valorescomp -> FLOATTYPE .)
    MENORQUE        reduce using rule 44 (valorescomp -> FLOATTYPE .)
    DIFERENTE       reduce using rule 44 (valorescomp -> FLOATTYPE .)
    IDENTICO        reduce using rule 44 (valorescomp -> FLOATTYPE .)


state 93

    (73) valornumerico -> NFLOATTYPE .
    (45) valorescomp -> NFLOATTYPE .

    PLUS            reduce using rule 73 (valornumerico -> NFLOATTYPE .)
    TIMES           reduce using rule 73 (valornumerico -> NFLOATTYPE .)
    MINUS           reduce using rule 73 (valornumerico -> NFLOATTYPE .)
    PORCENTAJE      reduce using rule 73 (valornumerico -> NFLOATTYPE .)
    DIVIDE          reduce using rule 73 (valornumerico -> NFLOATTYPE .)
    ENDCHAR         reduce using rule 73 (valornumerico -> NFLOATTYPE .)
    MAYORQUE        reduce using rule 45 (valorescomp -> NFLOATTYPE .)
    MENORQUE        reduce using rule 45 (valorescomp -> NFLOATTYPE .)
    DIFERENTE       reduce using rule 45 (valorescomp -> NFLOATTYPE .)
    IDENTICO        reduce using rule 45 (valorescomp -> NFLOATTYPE .)


state 94

    (58) conectores -> boolean . signoconect boolean
    (46) valorescomp -> boolean .
    (62) signoconect -> . DAMPERSAND
    (63) signoconect -> . OR

    MAYORQUE        reduce using rule 46 (valorescomp -> boolean .)
    MENORQUE        reduce using rule 46 (valorescomp -> boolean .)
    DIFERENTE       reduce using rule 46 (valorescomp -> boolean .)
    IDENTICO        reduce using rule 46 (valorescomp -> boolean .)
    DAMPERSAND      shift and go to state 60
    OR              shift and go to state 61

    signoconect                    shift and go to state 149

state 95

    (59) conectores -> EXCLAM . boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    boolean                        shift and go to state 150

state 96

    (16) asignacion -> CONST ID COLON intsize . IGUAL INTTYPE ENDCHAR
    (17) asignacion -> CONST ID COLON intsize . IGUAL NINTTYPE ENDCHAR

    IGUAL           shift and go to state 151


state 97

    (27) asignacion -> CONST ID COLON uintsize . IGUAL INTTYPE ENDCHAR

    IGUAL           shift and go to state 152


state 98

    (29) asignacion -> CONST ID COLON floatsize . IGUAL FLOATTYPE ENDCHAR

    IGUAL           shift and go to state 153


state 99

    (34) asignacion -> CONST ID COLON strsize . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 154


state 100

    (35) asignacion -> CONST ID COLON STRING . IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> CONST ID COLON STRING . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 155


state 101

    (48) asignacion -> CONST ID COLON BOOL . IGUAL boolean ENDCHAR

    IGUAL           shift and go to state 156


state 102

    (50) asignacion -> CONST ID COLON CHAR . IGUAL IDCHAR ENDCHAR

    IGUAL           shift and go to state 157


state 103

    (64) intsize -> INT8 .

    IGUAL           reduce using rule 64 (intsize -> INT8 .)
    COMA            reduce using rule 64 (intsize -> INT8 .)
    RPAREN          reduce using rule 64 (intsize -> INT8 .)
    LLLAVE          reduce using rule 64 (intsize -> INT8 .)


state 104

    (65) intsize -> INT16 .

    IGUAL           reduce using rule 65 (intsize -> INT16 .)
    COMA            reduce using rule 65 (intsize -> INT16 .)
    RPAREN          reduce using rule 65 (intsize -> INT16 .)
    LLLAVE          reduce using rule 65 (intsize -> INT16 .)


state 105

    (66) intsize -> INT32 .

    IGUAL           reduce using rule 66 (intsize -> INT32 .)
    COMA            reduce using rule 66 (intsize -> INT32 .)
    RPAREN          reduce using rule 66 (intsize -> INT32 .)
    LLLAVE          reduce using rule 66 (intsize -> INT32 .)


state 106

    (67) intsize -> INT64 .

    IGUAL           reduce using rule 67 (intsize -> INT64 .)
    COMA            reduce using rule 67 (intsize -> INT64 .)
    RPAREN          reduce using rule 67 (intsize -> INT64 .)
    LLLAVE          reduce using rule 67 (intsize -> INT64 .)


state 107

    (68) intsize -> INT128 .

    IGUAL           reduce using rule 68 (intsize -> INT128 .)
    COMA            reduce using rule 68 (intsize -> INT128 .)
    RPAREN          reduce using rule 68 (intsize -> INT128 .)
    LLLAVE          reduce using rule 68 (intsize -> INT128 .)


state 108

    (84) uintsize -> UINT8 .

    IGUAL           reduce using rule 84 (uintsize -> UINT8 .)
    COMA            reduce using rule 84 (uintsize -> UINT8 .)
    RPAREN          reduce using rule 84 (uintsize -> UINT8 .)
    LLLAVE          reduce using rule 84 (uintsize -> UINT8 .)


state 109

    (85) uintsize -> UINT16 .

    IGUAL           reduce using rule 85 (uintsize -> UINT16 .)
    COMA            reduce using rule 85 (uintsize -> UINT16 .)
    RPAREN          reduce using rule 85 (uintsize -> UINT16 .)
    LLLAVE          reduce using rule 85 (uintsize -> UINT16 .)


state 110

    (86) uintsize -> UINT32 .

    IGUAL           reduce using rule 86 (uintsize -> UINT32 .)
    COMA            reduce using rule 86 (uintsize -> UINT32 .)
    RPAREN          reduce using rule 86 (uintsize -> UINT32 .)
    LLLAVE          reduce using rule 86 (uintsize -> UINT32 .)


state 111

    (87) uintsize -> UINT64 .

    IGUAL           reduce using rule 87 (uintsize -> UINT64 .)
    COMA            reduce using rule 87 (uintsize -> UINT64 .)
    RPAREN          reduce using rule 87 (uintsize -> UINT64 .)
    LLLAVE          reduce using rule 87 (uintsize -> UINT64 .)


state 112

    (88) uintsize -> UINT128 .

    IGUAL           reduce using rule 88 (uintsize -> UINT128 .)
    COMA            reduce using rule 88 (uintsize -> UINT128 .)
    RPAREN          reduce using rule 88 (uintsize -> UINT128 .)
    LLLAVE          reduce using rule 88 (uintsize -> UINT128 .)


state 113

    (75) floatsize -> FLOAT32 .

    IGUAL           reduce using rule 75 (floatsize -> FLOAT32 .)
    COMA            reduce using rule 75 (floatsize -> FLOAT32 .)
    RPAREN          reduce using rule 75 (floatsize -> FLOAT32 .)
    LLLAVE          reduce using rule 75 (floatsize -> FLOAT32 .)


state 114

    (76) floatsize -> FLOAT64 .

    IGUAL           reduce using rule 76 (floatsize -> FLOAT64 .)
    COMA            reduce using rule 76 (floatsize -> FLOAT64 .)
    RPAREN          reduce using rule 76 (floatsize -> FLOAT64 .)
    LLLAVE          reduce using rule 76 (floatsize -> FLOAT64 .)


state 115

    (91) strsize -> AMPERSAND . COMILLA STATIC STR
    (92) strsize -> AMPERSAND . STR

    COMILLA         shift and go to state 158
    STR             shift and go to state 159


state 116

    (90) impresion -> PRINTLN LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 160


state 117

    (74) loop -> LOOP LLLAVE metodo RLLAVE .

    $end            reduce using rule 74 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RLLAVE          reduce using rule 74 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LET             reduce using rule 74 (loop -> LOOP LLLAVE metodo RLLAVE .)
    CONST           reduce using rule 74 (loop -> LOOP LLLAVE metodo RLLAVE .)
    PRINTLN         reduce using rule 74 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LOOP            reduce using rule 74 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IF              reduce using rule 74 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IO              reduce using rule 74 (loop -> LOOP LLLAVE metodo RLLAVE .)
    WHILE           reduce using rule 74 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RETURN          reduce using rule 74 (loop -> LOOP LLLAVE metodo RLLAVE .)
    ID              reduce using rule 74 (loop -> LOOP LLLAVE metodo RLLAVE .)


state 118

    (104) ifblock -> IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 161


state 119

    (108) ifcondicion -> LPAREN comparacion RPAREN .
    (109) ifcondicion -> LPAREN comparacion RPAREN . signoconect ifcondicion
    (62) signoconect -> . DAMPERSAND
    (63) signoconect -> . OR

    LLLAVE          reduce using rule 108 (ifcondicion -> LPAREN comparacion RPAREN .)
    RPAREN          reduce using rule 108 (ifcondicion -> LPAREN comparacion RPAREN .)
    ENDCHAR         reduce using rule 108 (ifcondicion -> LPAREN comparacion RPAREN .)
    DAMPERSAND      shift and go to state 60
    OR              shift and go to state 61

    signoconect                    shift and go to state 162

state 120

    (110) ifcondicion -> LPAREN ifcondicion RPAREN .

    LLLAVE          reduce using rule 110 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    RPAREN          reduce using rule 110 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    ENDCHAR         reduce using rule 110 (ifcondicion -> LPAREN ifcondicion RPAREN .)


state 121

    (105) ifblock -> IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 163


state 122

    (107) ifcondicion -> comparacion signoconect ifcondicion .

    LLLAVE          reduce using rule 107 (ifcondicion -> comparacion signoconect ifcondicion .)
    RPAREN          reduce using rule 107 (ifcondicion -> comparacion signoconect ifcondicion .)
    ENDCHAR         reduce using rule 107 (ifcondicion -> comparacion signoconect ifcondicion .)


state 123

    (28) comparacion -> valorescomp signocompar valorescomp .

    DAMPERSAND      reduce using rule 28 (comparacion -> valorescomp signocompar valorescomp .)
    OR              reduce using rule 28 (comparacion -> valorescomp signocompar valorescomp .)
    LLLAVE          reduce using rule 28 (comparacion -> valorescomp signocompar valorescomp .)
    RPAREN          reduce using rule 28 (comparacion -> valorescomp signocompar valorescomp .)
    ENDCHAR         reduce using rule 28 (comparacion -> valorescomp signocompar valorescomp .)


state 124

    (93) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN . RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN . RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    RPAREN          shift and go to state 164


state 125

    (49) while -> WHILE ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 165


state 126

    (102) elseifblock -> ifblock ELSE IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 166


state 127

    (103) elseifblock -> ifblock ELSE IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . entrada
    (14) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> . LET ID IGUAL valor ENDCHAR
    (16) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (90) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (74) loop -> . LOOP LLLAVE metodo RLLAVE
    (104) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (93) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (49) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 13
    CONST           shift and go to state 14
    PRINTLN         shift and go to state 15
    LOOP            shift and go to state 16
    IF              shift and go to state 17
    IO              shift and go to state 18
    WHILE           shift and go to state 19

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 167
    metodo                         shift and go to state 75
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    entrada                        shift and go to state 10
    while                          shift and go to state 11

state 128

    (100) elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 100 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)


state 129

    (4) cuerpof -> metodo cuerpof .

    RLLAVE          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    RETURN          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    ID              reduce using rule 4 (cuerpof -> metodo cuerpof .)


state 130

    (101) elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 101 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)


state 131

    (77) params -> ID COLON . datatype
    (78) params -> ID COLON . datatype COMA params
    (52) datatype -> . intsize
    (53) datatype -> . uintsize
    (54) datatype -> . floatsize
    (55) datatype -> . strsize
    (56) datatype -> . STRING
    (64) intsize -> . INT8
    (65) intsize -> . INT16
    (66) intsize -> . INT32
    (67) intsize -> . INT64
    (68) intsize -> . INT128
    (84) uintsize -> . UINT8
    (85) uintsize -> . UINT16
    (86) uintsize -> . UINT32
    (87) uintsize -> . UINT64
    (88) uintsize -> . UINT128
    (75) floatsize -> . FLOAT32
    (76) floatsize -> . FLOAT64
    (91) strsize -> . AMPERSAND COMILLA STATIC STR
    (92) strsize -> . AMPERSAND STR

    STRING          shift and go to state 173
    INT8            shift and go to state 103
    INT16           shift and go to state 104
    INT32           shift and go to state 105
    INT64           shift and go to state 106
    INT128          shift and go to state 107
    UINT8           shift and go to state 108
    UINT16          shift and go to state 109
    UINT32          shift and go to state 110
    UINT64          shift and go to state 111
    UINT128         shift and go to state 112
    FLOAT32         shift and go to state 113
    FLOAT64         shift and go to state 114
    AMPERSAND       shift and go to state 115

    datatype                       shift and go to state 168
    intsize                        shift and go to state 169
    uintsize                       shift and go to state 170
    floatsize                      shift and go to state 171
    strsize                        shift and go to state 172

state 132

    (89) funcion -> FN ID LPAREN params RPAREN . LLLAVE metodo RLLAVE
    (111) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (112) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    LLLAVE          shift and go to state 174
    ARROWOPT        shift and go to state 175


state 133

    (5) asignacion -> LET MUT ID IGUAL valor . ENDCHAR

    ENDCHAR         shift and go to state 176


state 134

    (6) asignacion -> LET MUT ID IGUAL estructuras . ENDCHAR

    ENDCHAR         shift and go to state 177


state 135

    (36) estructuras -> linkedlist .

    ENDCHAR         reduce using rule 36 (estructuras -> linkedlist .)


state 136

    (37) estructuras -> hashmap .

    ENDCHAR         reduce using rule 37 (estructuras -> hashmap .)


state 137

    (38) estructuras -> vec .

    ENDCHAR         reduce using rule 38 (estructuras -> vec .)


state 138

    (51) linkedlist -> LINKEDLIST . DOSDOBLEPUNTOS NEW LPAREN RPAREN

    DOSDOBLEPUNTOS  shift and go to state 178


state 139

    (57) hashmap -> HASHMAP . DOSDOBLEPUNTOS NEW LPAREN RPAREN

    DOSDOBLEPUNTOS  shift and go to state 179


state 140

    (61) vec -> VEC . DOSDOBLEPUNTOS NEW LPAREN RPAREN

    DOSDOBLEPUNTOS  shift and go to state 180


state 141

    (60) conectores -> ID signoconect . ID

    ID              shift and go to state 181


state 142

    (15) asignacion -> LET ID IGUAL valor ENDCHAR .

    $end            reduce using rule 15 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    RLLAVE          reduce using rule 15 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    LET             reduce using rule 15 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    CONST           reduce using rule 15 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    PRINTLN         reduce using rule 15 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    LOOP            reduce using rule 15 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    IF              reduce using rule 15 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    IO              reduce using rule 15 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    WHILE           reduce using rule 15 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    RETURN          reduce using rule 15 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    ID              reduce using rule 15 (asignacion -> LET ID IGUAL valor ENDCHAR .)


state 143

    (69) expresion -> valornumerico signo . valornumerico
    (70) valornumerico -> . NINTTYPE
    (71) valornumerico -> . INTTYPE
    (72) valornumerico -> . FLOATTYPE
    (73) valornumerico -> . NFLOATTYPE

    NINTTYPE        shift and go to state 183
    INTTYPE         shift and go to state 184
    FLOATTYPE       shift and go to state 185
    NFLOATTYPE      shift and go to state 186

    valornumerico                  shift and go to state 182

state 144

    (79) signo -> PLUS .

    NINTTYPE        reduce using rule 79 (signo -> PLUS .)
    INTTYPE         reduce using rule 79 (signo -> PLUS .)
    FLOATTYPE       reduce using rule 79 (signo -> PLUS .)
    NFLOATTYPE      reduce using rule 79 (signo -> PLUS .)


state 145

    (80) signo -> TIMES .

    NINTTYPE        reduce using rule 80 (signo -> TIMES .)
    INTTYPE         reduce using rule 80 (signo -> TIMES .)
    FLOATTYPE       reduce using rule 80 (signo -> TIMES .)
    NFLOATTYPE      reduce using rule 80 (signo -> TIMES .)


state 146

    (81) signo -> MINUS .

    NINTTYPE        reduce using rule 81 (signo -> MINUS .)
    INTTYPE         reduce using rule 81 (signo -> MINUS .)
    FLOATTYPE       reduce using rule 81 (signo -> MINUS .)
    NFLOATTYPE      reduce using rule 81 (signo -> MINUS .)


state 147

    (82) signo -> PORCENTAJE .

    NINTTYPE        reduce using rule 82 (signo -> PORCENTAJE .)
    INTTYPE         reduce using rule 82 (signo -> PORCENTAJE .)
    FLOATTYPE       reduce using rule 82 (signo -> PORCENTAJE .)
    NFLOATTYPE      reduce using rule 82 (signo -> PORCENTAJE .)


state 148

    (83) signo -> DIVIDE .

    NINTTYPE        reduce using rule 83 (signo -> DIVIDE .)
    INTTYPE         reduce using rule 83 (signo -> DIVIDE .)
    FLOATTYPE       reduce using rule 83 (signo -> DIVIDE .)
    NFLOATTYPE      reduce using rule 83 (signo -> DIVIDE .)


state 149

    (58) conectores -> boolean signoconect . boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    boolean                        shift and go to state 187

state 150

    (59) conectores -> EXCLAM boolean .

    ENDCHAR         reduce using rule 59 (conectores -> EXCLAM boolean .)


state 151

    (16) asignacion -> CONST ID COLON intsize IGUAL . INTTYPE ENDCHAR
    (17) asignacion -> CONST ID COLON intsize IGUAL . NINTTYPE ENDCHAR

    INTTYPE         shift and go to state 188
    NINTTYPE        shift and go to state 189


state 152

    (27) asignacion -> CONST ID COLON uintsize IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 190


state 153

    (29) asignacion -> CONST ID COLON floatsize IGUAL . FLOATTYPE ENDCHAR

    FLOATTYPE       shift and go to state 191


state 154

    (34) asignacion -> CONST ID COLON strsize IGUAL . IDSTRING ENDCHAR

    IDSTRING        shift and go to state 192


state 155

    (35) asignacion -> CONST ID COLON STRING IGUAL . STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> CONST ID COLON STRING IGUAL . IDSTRING ENDCHAR

    STRING          shift and go to state 193
    IDSTRING        shift and go to state 194


state 156

    (48) asignacion -> CONST ID COLON BOOL IGUAL . boolean ENDCHAR
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    boolean                        shift and go to state 195

state 157

    (50) asignacion -> CONST ID COLON CHAR IGUAL . IDCHAR ENDCHAR

    IDCHAR          shift and go to state 196


state 158

    (91) strsize -> AMPERSAND COMILLA . STATIC STR

    STATIC          shift and go to state 197


state 159

    (92) strsize -> AMPERSAND STR .

    IGUAL           reduce using rule 92 (strsize -> AMPERSAND STR .)
    COMA            reduce using rule 92 (strsize -> AMPERSAND STR .)
    RPAREN          reduce using rule 92 (strsize -> AMPERSAND STR .)
    LLLAVE          reduce using rule 92 (strsize -> AMPERSAND STR .)


state 160

    (90) impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 90 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 90 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 90 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 90 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 90 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 90 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 90 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 90 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 90 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 90 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 90 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)


state 161

    (104) ifblock -> IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . entrada
    (14) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> . LET ID IGUAL valor ENDCHAR
    (16) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (90) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (74) loop -> . LOOP LLLAVE metodo RLLAVE
    (104) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (93) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (49) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 13
    CONST           shift and go to state 14
    PRINTLN         shift and go to state 15
    LOOP            shift and go to state 16
    IF              shift and go to state 17
    IO              shift and go to state 18
    WHILE           shift and go to state 19

    cuerpof                        shift and go to state 198
    metodo                         shift and go to state 75
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    entrada                        shift and go to state 10
    while                          shift and go to state 11

state 162

    (109) ifcondicion -> LPAREN comparacion RPAREN signoconect . ifcondicion
    (106) ifcondicion -> . comparacion
    (107) ifcondicion -> . comparacion signoconect ifcondicion
    (108) ifcondicion -> . LPAREN comparacion RPAREN
    (109) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (110) ifcondicion -> . LPAREN ifcondicion RPAREN
    (28) comparacion -> . valorescomp signocompar valorescomp
    (39) valorescomp -> . ID
    (40) valorescomp -> . IDCHAR
    (41) valorescomp -> . IDSTRING
    (42) valorescomp -> . INTTYPE
    (43) valorescomp -> . NINTTYPE
    (44) valorescomp -> . FLOATTYPE
    (45) valorescomp -> . NFLOATTYPE
    (46) valorescomp -> . boolean
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE

    LPAREN          shift and go to state 45
    ID              shift and go to state 70
    IDCHAR          shift and go to state 37
    IDSTRING        shift and go to state 38
    INTTYPE         shift and go to state 39
    NINTTYPE        shift and go to state 40
    FLOATTYPE       shift and go to state 41
    NFLOATTYPE      shift and go to state 42
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    comparacion                    shift and go to state 33
    ifcondicion                    shift and go to state 199
    valorescomp                    shift and go to state 36
    boolean                        shift and go to state 71

state 163

    (105) ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 105 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 105 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 105 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 105 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 105 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 105 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 105 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 105 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 105 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 105 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 105 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 105 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)


state 164

    (93) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN . POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN . POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    POINT           shift and go to state 200


state 165

    (49) while -> WHILE ifparams LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 49 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 49 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 49 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 49 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 49 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 49 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 49 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 49 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 49 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 49 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 49 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)


state 166

    (102) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 201


state 167

    (103) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 202


state 168

    (77) params -> ID COLON datatype .
    (78) params -> ID COLON datatype . COMA params

    RPAREN          reduce using rule 77 (params -> ID COLON datatype .)
    COMA            shift and go to state 203


state 169

    (52) datatype -> intsize .

    COMA            reduce using rule 52 (datatype -> intsize .)
    RPAREN          reduce using rule 52 (datatype -> intsize .)
    LLLAVE          reduce using rule 52 (datatype -> intsize .)


state 170

    (53) datatype -> uintsize .

    COMA            reduce using rule 53 (datatype -> uintsize .)
    RPAREN          reduce using rule 53 (datatype -> uintsize .)
    LLLAVE          reduce using rule 53 (datatype -> uintsize .)


state 171

    (54) datatype -> floatsize .

    COMA            reduce using rule 54 (datatype -> floatsize .)
    RPAREN          reduce using rule 54 (datatype -> floatsize .)
    LLLAVE          reduce using rule 54 (datatype -> floatsize .)


state 172

    (55) datatype -> strsize .

    COMA            reduce using rule 55 (datatype -> strsize .)
    RPAREN          reduce using rule 55 (datatype -> strsize .)
    LLLAVE          reduce using rule 55 (datatype -> strsize .)


state 173

    (56) datatype -> STRING .

    COMA            reduce using rule 56 (datatype -> STRING .)
    RPAREN          reduce using rule 56 (datatype -> STRING .)
    LLLAVE          reduce using rule 56 (datatype -> STRING .)


state 174

    (89) funcion -> FN ID LPAREN params RPAREN LLLAVE . metodo RLLAVE
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . entrada
    (14) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> . LET ID IGUAL valor ENDCHAR
    (16) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (90) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (74) loop -> . LOOP LLLAVE metodo RLLAVE
    (104) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (93) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (49) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 13
    CONST           shift and go to state 14
    PRINTLN         shift and go to state 15
    LOOP            shift and go to state 16
    IF              shift and go to state 17
    IO              shift and go to state 18
    WHILE           shift and go to state 19

    metodo                         shift and go to state 204
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    entrada                        shift and go to state 10
    while                          shift and go to state 11

state 175

    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (112) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof ID RLLAVE
    (52) datatype -> . intsize
    (53) datatype -> . uintsize
    (54) datatype -> . floatsize
    (55) datatype -> . strsize
    (56) datatype -> . STRING
    (64) intsize -> . INT8
    (65) intsize -> . INT16
    (66) intsize -> . INT32
    (67) intsize -> . INT64
    (68) intsize -> . INT128
    (84) uintsize -> . UINT8
    (85) uintsize -> . UINT16
    (86) uintsize -> . UINT32
    (87) uintsize -> . UINT64
    (88) uintsize -> . UINT128
    (75) floatsize -> . FLOAT32
    (76) floatsize -> . FLOAT64
    (91) strsize -> . AMPERSAND COMILLA STATIC STR
    (92) strsize -> . AMPERSAND STR

    STRING          shift and go to state 173
    INT8            shift and go to state 103
    INT16           shift and go to state 104
    INT32           shift and go to state 105
    INT64           shift and go to state 106
    INT128          shift and go to state 107
    UINT8           shift and go to state 108
    UINT16          shift and go to state 109
    UINT32          shift and go to state 110
    UINT64          shift and go to state 111
    UINT128         shift and go to state 112
    FLOAT32         shift and go to state 113
    FLOAT64         shift and go to state 114
    AMPERSAND       shift and go to state 115

    datatype                       shift and go to state 205
    intsize                        shift and go to state 169
    uintsize                       shift and go to state 170
    floatsize                      shift and go to state 171
    strsize                        shift and go to state 172

state 176

    (5) asignacion -> LET MUT ID IGUAL valor ENDCHAR .

    $end            reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    RLLAVE          reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    LET             reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    CONST           reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    PRINTLN         reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    LOOP            reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    IF              reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    IO              reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    WHILE           reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    RETURN          reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    ID              reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)


state 177

    (6) asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .

    $end            reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RLLAVE          reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LET             reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    CONST           reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    PRINTLN         reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LOOP            reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IF              reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IO              reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    WHILE           reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RETURN          reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    ID              reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)


state 178

    (51) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS . NEW LPAREN RPAREN

    NEW             shift and go to state 206


state 179

    (57) hashmap -> HASHMAP DOSDOBLEPUNTOS . NEW LPAREN RPAREN

    NEW             shift and go to state 207


state 180

    (61) vec -> VEC DOSDOBLEPUNTOS . NEW LPAREN RPAREN

    NEW             shift and go to state 208


state 181

    (60) conectores -> ID signoconect ID .

    ENDCHAR         reduce using rule 60 (conectores -> ID signoconect ID .)


state 182

    (69) expresion -> valornumerico signo valornumerico .

    ENDCHAR         reduce using rule 69 (expresion -> valornumerico signo valornumerico .)


state 183

    (70) valornumerico -> NINTTYPE .

    ENDCHAR         reduce using rule 70 (valornumerico -> NINTTYPE .)


state 184

    (71) valornumerico -> INTTYPE .

    ENDCHAR         reduce using rule 71 (valornumerico -> INTTYPE .)


state 185

    (72) valornumerico -> FLOATTYPE .

    ENDCHAR         reduce using rule 72 (valornumerico -> FLOATTYPE .)


state 186

    (73) valornumerico -> NFLOATTYPE .

    ENDCHAR         reduce using rule 73 (valornumerico -> NFLOATTYPE .)


state 187

    (58) conectores -> boolean signoconect boolean .

    ENDCHAR         reduce using rule 58 (conectores -> boolean signoconect boolean .)


state 188

    (16) asignacion -> CONST ID COLON intsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 209


state 189

    (17) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 210


state 190

    (27) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 211


state 191

    (29) asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE . ENDCHAR

    ENDCHAR         shift and go to state 212


state 192

    (34) asignacion -> CONST ID COLON strsize IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 213


state 193

    (35) asignacion -> CONST ID COLON STRING IGUAL STRING . DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 214


state 194

    (47) asignacion -> CONST ID COLON STRING IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 215


state 195

    (48) asignacion -> CONST ID COLON BOOL IGUAL boolean . ENDCHAR

    ENDCHAR         shift and go to state 216


state 196

    (50) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR . ENDCHAR

    ENDCHAR         shift and go to state 217


state 197

    (91) strsize -> AMPERSAND COMILLA STATIC . STR

    STR             shift and go to state 218


state 198

    (104) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 219


state 199

    (109) ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .

    LLLAVE          reduce using rule 109 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    RPAREN          reduce using rule 109 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    ENDCHAR         reduce using rule 109 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)


state 200

    (93) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT . READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT . READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    READLINE        shift and go to state 220


state 201

    (102) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . entrada
    (14) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> . LET ID IGUAL valor ENDCHAR
    (16) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (90) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (74) loop -> . LOOP LLLAVE metodo RLLAVE
    (104) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (93) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (49) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 13
    CONST           shift and go to state 14
    PRINTLN         shift and go to state 15
    LOOP            shift and go to state 16
    IF              shift and go to state 17
    IO              shift and go to state 18
    WHILE           shift and go to state 19

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 221
    metodo                         shift and go to state 75
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    entrada                        shift and go to state 10
    while                          shift and go to state 11

state 202

    (103) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 103 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)


state 203

    (78) params -> ID COLON datatype COMA . params
    (77) params -> . ID COLON datatype
    (78) params -> . ID COLON datatype COMA params

    ID              shift and go to state 77

    params                         shift and go to state 222

state 204

    (89) funcion -> FN ID LPAREN params RPAREN LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 223


state 205

    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (112) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof ID RLLAVE

    LLLAVE          shift and go to state 224


state 206

    (51) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW . LPAREN RPAREN

    LPAREN          shift and go to state 225


state 207

    (57) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW . LPAREN RPAREN

    LPAREN          shift and go to state 226


state 208

    (61) vec -> VEC DOSDOBLEPUNTOS NEW . LPAREN RPAREN

    LPAREN          shift and go to state 227


state 209

    (16) asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 16 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 16 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 16 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 16 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 16 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 16 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 16 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 16 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 16 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 16 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 16 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)


state 210

    (17) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .

    $end            reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LET             reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    CONST           reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LOOP            reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IF              reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IO              reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    WHILE           reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RETURN          reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    ID              reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)


state 211

    (27) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 27 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 27 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 27 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 27 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 27 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 27 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 27 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 27 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 27 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 27 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 27 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)


state 212

    (29) asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .

    $end            reduce using rule 29 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    RLLAVE          reduce using rule 29 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    LET             reduce using rule 29 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    CONST           reduce using rule 29 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    PRINTLN         reduce using rule 29 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    LOOP            reduce using rule 29 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IF              reduce using rule 29 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IO              reduce using rule 29 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    WHILE           reduce using rule 29 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    RETURN          reduce using rule 29 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    ID              reduce using rule 29 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)


state 213

    (34) asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 34 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 34 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 34 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 34 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 34 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 34 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 34 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IO              reduce using rule 34 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    WHILE           reduce using rule 34 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 34 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 34 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)


state 214

    (35) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS . FROM LPAREN IDSTRING RPAREN ENDCHAR

    FROM            shift and go to state 228


state 215

    (47) asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 47 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 47 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 47 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 47 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 47 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 47 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 47 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IO              reduce using rule 47 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    WHILE           reduce using rule 47 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 47 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 47 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)


state 216

    (48) asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .

    $end            reduce using rule 48 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RLLAVE          reduce using rule 48 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LET             reduce using rule 48 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    CONST           reduce using rule 48 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    PRINTLN         reduce using rule 48 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LOOP            reduce using rule 48 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IF              reduce using rule 48 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IO              reduce using rule 48 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    WHILE           reduce using rule 48 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RETURN          reduce using rule 48 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    ID              reduce using rule 48 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)


state 217

    (50) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .

    $end            reduce using rule 50 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RLLAVE          reduce using rule 50 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LET             reduce using rule 50 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    CONST           reduce using rule 50 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    PRINTLN         reduce using rule 50 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LOOP            reduce using rule 50 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IF              reduce using rule 50 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IO              reduce using rule 50 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    WHILE           reduce using rule 50 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RETURN          reduce using rule 50 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    ID              reduce using rule 50 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)


state 218

    (91) strsize -> AMPERSAND COMILLA STATIC STR .

    IGUAL           reduce using rule 91 (strsize -> AMPERSAND COMILLA STATIC STR .)
    COMA            reduce using rule 91 (strsize -> AMPERSAND COMILLA STATIC STR .)
    RPAREN          reduce using rule 91 (strsize -> AMPERSAND COMILLA STATIC STR .)
    LLLAVE          reduce using rule 91 (strsize -> AMPERSAND COMILLA STATIC STR .)


state 219

    (104) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 104 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 104 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 104 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 104 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 104 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 104 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 104 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 104 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 104 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 104 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 104 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 104 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 220

    (93) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE . LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE . LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 229


state 221

    (102) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 230


state 222

    (78) params -> ID COLON datatype COMA params .

    RPAREN          reduce using rule 78 (params -> ID COLON datatype COMA params .)


state 223

    (89) funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE .

    $end            reduce using rule 89 (funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE .)


state 224

    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof RETURN ifparams ENDCHAR RLLAVE
    (112) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof ID RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . entrada
    (14) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (15) asignacion -> . LET ID IGUAL valor ENDCHAR
    (16) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (27) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (29) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (34) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (35) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (47) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (48) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (50) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (90) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (74) loop -> . LOOP LLLAVE metodo RLLAVE
    (104) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (105) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (102) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (103) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (100) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (101) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (93) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (49) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 13
    CONST           shift and go to state 14
    PRINTLN         shift and go to state 15
    LOOP            shift and go to state 16
    IF              shift and go to state 17
    IO              shift and go to state 18
    WHILE           shift and go to state 19

    cuerpof                        shift and go to state 231
    metodo                         shift and go to state 75
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    entrada                        shift and go to state 10
    while                          shift and go to state 11

state 225

    (51) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN . RPAREN

    RPAREN          shift and go to state 232


state 226

    (57) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN . RPAREN

    RPAREN          shift and go to state 233


state 227

    (61) vec -> VEC DOSDOBLEPUNTOS NEW LPAREN . RPAREN

    RPAREN          shift and go to state 234


state 228

    (35) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 235


state 229

    (93) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN . AMPERSAND MUT ID RPAREN ENDCHAR
    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN . AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    AMPERSAND       shift and go to state 236


state 230

    (102) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 102 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 231

    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . RETURN ifparams ENDCHAR RLLAVE
    (112) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . ID RLLAVE

    RETURN          shift and go to state 238
    ID              shift and go to state 237


state 232

    (51) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN .

    ENDCHAR         reduce using rule 51 (linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN .)


state 233

    (57) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .

    ENDCHAR         reduce using rule 57 (hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .)


state 234

    (61) vec -> VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN .

    ENDCHAR         reduce using rule 61 (vec -> VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN .)


state 235

    (35) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 239


state 236

    (93) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND . MUT ID RPAREN ENDCHAR
    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND . MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    MUT             shift and go to state 240


state 237

    (112) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID . RLLAVE

    RLLAVE          shift and go to state 241


state 238

    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN . ifparams ENDCHAR RLLAVE
    (97) ifparams -> . ifcondicion
    (98) ifparams -> . boolean
    (99) ifparams -> . ID
    (106) ifcondicion -> . comparacion
    (107) ifcondicion -> . comparacion signoconect ifcondicion
    (108) ifcondicion -> . LPAREN comparacion RPAREN
    (109) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (110) ifcondicion -> . LPAREN ifcondicion RPAREN
    (95) boolean -> . TRUE
    (96) boolean -> . FALSE
    (28) comparacion -> . valorescomp signocompar valorescomp
    (39) valorescomp -> . ID
    (40) valorescomp -> . IDCHAR
    (41) valorescomp -> . IDSTRING
    (42) valorescomp -> . INTTYPE
    (43) valorescomp -> . NINTTYPE
    (44) valorescomp -> . FLOATTYPE
    (45) valorescomp -> . NFLOATTYPE
    (46) valorescomp -> . boolean

    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    IDCHAR          shift and go to state 37
    IDSTRING        shift and go to state 38
    INTTYPE         shift and go to state 39
    NINTTYPE        shift and go to state 40
    FLOATTYPE       shift and go to state 41
    NFLOATTYPE      shift and go to state 42

    ifparams                       shift and go to state 242
    ifcondicion                    shift and go to state 30
    boolean                        shift and go to state 31
    comparacion                    shift and go to state 33
    valorescomp                    shift and go to state 36

state 239

    (35) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 243


state 240

    (93) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT . ID RPAREN ENDCHAR
    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT . ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    ID              shift and go to state 244


state 241

    (112) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .

    $end            reduce using rule 112 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .)


state 242

    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams . ENDCHAR RLLAVE

    ENDCHAR         shift and go to state 245


state 243

    (35) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 246


state 244

    (93) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID . RPAREN ENDCHAR
    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID . RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    RPAREN          shift and go to state 247


state 245

    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR . RLLAVE

    RLLAVE          shift and go to state 248


state 246

    (35) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 35 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 35 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 35 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 35 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 35 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 35 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 35 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 35 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 35 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 35 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 35 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)


state 247

    (93) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN . ENDCHAR
    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN . POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    ENDCHAR         shift and go to state 250
    POINT           shift and go to state 249


state 248

    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .

    $end            reduce using rule 111 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .)


state 249

    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT . EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    EXPECT          shift and go to state 251


state 250

    (93) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .

    $end            reduce using rule 93 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 93 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    LET             reduce using rule 93 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    CONST           reduce using rule 93 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 93 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    LOOP            reduce using rule 93 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    IF              reduce using rule 93 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    IO              reduce using rule 93 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    WHILE           reduce using rule 93 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    RETURN          reduce using rule 93 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    ID              reduce using rule 93 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)


state 251

    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 252


state 252

    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 253


state 253

    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 254


state 254

    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 255


state 255

    (94) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 94 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 94 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 94 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 94 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 94 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 94 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 94 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 94 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 94 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 94 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 94 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 56 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 57 resolved as shift
