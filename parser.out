Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASYNC
    AWAIT
    BREAK
    CONTINUE
    DIVASIGN
    DOLAR
    DYN
    ENUM
    ERR
    FINAL
    FOR
    FORMAT
    IMPL
    IN
    INPUT
    INTERRO
    LCOR
    MAINFN
    MATCH
    MOVE
    MULTIASIGN
    OK
    PARSE
    POINTERSIZE
    PRIV
    PUB
    RCOR
    REF
    RESTAASIGN
    SELF
    SIZEOF
    STRUCT
    SUMAASIGN
    SUPER
    TYPE
    TYPEOF
    UNSAFE
    UNWRAPOR
    USE
    WHERE

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> metodo
Rule 2     cuerpo -> funcion
Rule 3     cuerpof -> metodo
Rule 4     cuerpof -> metodo cuerpof
Rule 5     asignacion -> LET MUT ID IGUAL valor ENDCHAR
Rule 6     asignacion -> LET MUT ID IGUAL estructuras ENDCHAR
Rule 7     metodo -> asignacion
Rule 8     metodo -> impresion
Rule 9     metodo -> loop
Rule 10    metodo -> ifblock
Rule 11    metodo -> elseifblock
Rule 12    metodo -> elseblock
Rule 13    metodo -> vectorpush
Rule 14    metodo -> llpushfront
Rule 15    metodo -> llpopback
Rule 16    metodo -> sumaint
Rule 17    metodo -> entrada
Rule 18    metodo -> while
Rule 19    asignacion -> LET ID IGUAL valor ENDCHAR
Rule 20    asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
Rule 21    asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
Rule 22    valor -> valornumerico
Rule 23    valor -> TRUE
Rule 24    valor -> FALSE
Rule 25    valor -> ID
Rule 26    valor -> IDCHAR
Rule 27    valor -> IDSTRING
Rule 28    valor -> expresion
Rule 29    valor -> conectores
Rule 30    valor -> comparacion
Rule 31    asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 32    asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
Rule 33    vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
Rule 34    asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
Rule 35    comparacion -> ID signocompar ID
Rule 36    comparacion -> IDCHAR signocompar IDCHAR
Rule 37    comparacion -> IDSTRING signocompar IDSTRING
Rule 38    asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
Rule 39    comparacion -> INTTYPE signocompar INTTYPE
Rule 40    comparacion -> NINTTYPE signocompar NINTTYPE
Rule 41    comparacion -> FLOATTYPE signocompar FLOATTYPE
Rule 42    estructuras -> linkedlist
Rule 43    estructuras -> hashmap
Rule 44    asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR
Rule 45    comparacion -> boolean signocompar boolean
Rule 46    while -> WHILE ifparams LLLAVE cuerpof RLLAVE
Rule 47    asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
Rule 48    datatype -> intsize
Rule 49    datatype -> uintsize
Rule 50    datatype -> floatsize
Rule 51    datatype -> strsize
Rule 52    datatype -> STRING
Rule 53    datatype -> BOOL
Rule 54    hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
Rule 55    expresion -> valornumerico signo valornumerico
Rule 56    signocompar -> MAYORQUE
Rule 57    signocompar -> MENORQUE
Rule 58    signocompar -> DIFERENTE
Rule 59    signocompar -> IDENTICO
Rule 60    valornumerico -> NINTTYPE
Rule 61    valornumerico -> INTTYPE
Rule 62    valornumerico -> FLOATTYPE
Rule 63    valornumerico -> NFLOATTYPE
Rule 64    asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 65    intsize -> INT8
Rule 66    intsize -> INT16
Rule 67    intsize -> INT32
Rule 68    intsize -> INT64
Rule 69    intsize -> INT128
Rule 70    linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 71    llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
Rule 72    conectores -> boolean signoconect boolean
Rule 73    conectores -> EXCLAM boolean
Rule 74    conectores -> ID signoconect ID
Rule 75    signo -> PLUS
Rule 76    signo -> TIMES
Rule 77    signo -> MINUS
Rule 78    signo -> PORCENTAJE
Rule 79    signo -> DIVIDE
Rule 80    floatsize -> FLOAT32
Rule 81    floatsize -> FLOAT64
Rule 82    signoconect -> DAMPERSAND
Rule 83    signoconect -> OR
Rule 84    uintsize -> UINT8
Rule 85    uintsize -> UINT16
Rule 86    uintsize -> UINT32
Rule 87    uintsize -> UINT64
Rule 88    uintsize -> UINT128
Rule 89    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
Rule 90    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
Rule 91    llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR
Rule 92    loop -> LOOP LLLAVE metodo RLLAVE
Rule 93    strsize -> AMPERSAND COMILLA STATIC STR
Rule 94    strsize -> AMPERSAND STR
Rule 95    params -> ID COLON datatype
Rule 96    params -> ID COLON datatype COMA params
Rule 97    boolean -> TRUE
Rule 98    boolean -> FALSE
Rule 99    funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE
Rule 100   impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
Rule 101   asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
Rule 102   ifparams -> ifcondicion
Rule 103   ifparams -> boolean
Rule 104   ifparams -> ID
Rule 105   asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
Rule 106   elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE
Rule 107   elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE
Rule 108   asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
Rule 109   elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 110   elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
Rule 111   ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 112   ifblock -> IF ifparams LLLAVE cuerpof RLLAVE
Rule 113   sumaint -> ID PLUS ID
Rule 114   ifcondicion -> comparacion
Rule 115   ifcondicion -> comparacion signoconect ifcondicion
Rule 116   ifcondicion -> LPAREN comparacion RPAREN
Rule 117   ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion
Rule 118   ifcondicion -> LPAREN ifcondicion RPAREN
Rule 119   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
Rule 120   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

Terminals, with rules where they appear

AMPERSAND            : 89 90 93 94
ARROWOPT             : 119 120
ASYNC                : 
AWAIT                : 
BOOL                 : 44 53
BREAK                : 
CHAR                 : 47
COLON                : 20 21 32 34 38 44 47 95 96 101 105 108
COMA                 : 96
COMILLA              : 93
CONST                : 20 21 32 34 38 44 47 101 105 108
CONTINUE             : 
DAMPERSAND           : 82
DIFERENTE            : 58
DIVASIGN             : 
DIVIDE               : 79
DOLAR                : 
DOSDOBLEPUNTOS       : 31 34 54 64 70 89 90
DYN                  : 
ELSE                 : 106 107 109 110
ENDCHAR              : 5 6 19 20 21 31 32 33 34 38 44 47 64 70 71 89 90 91 100 101 105 108 119
ENUM                 : 
ERR                  : 
EXCLAM               : 73
EXPECT               : 90
FALSE                : 24 98
FINAL                : 
FLOAT32              : 80
FLOAT64              : 81
FLOATTYPE            : 41 41 62
FN                   : 99 119 120
FOR                  : 
FORMAT               : 
FROM                 : 34
HASHMAP              : 54
ID                   : 5 6 19 20 21 25 31 32 33 34 35 35 38 44 47 64 71 74 74 89 90 91 95 96 99 101 104 105 108 113 113 119 120 120
IDCHAR               : 26 36 36 47
IDENTICO             : 59
IDSTRING             : 27 32 34 37 37 38 90 100
IF                   : 109 110 111 112
IGUAL                : 5 6 19 20 21 31 32 34 38 44 47 64 101 105 108
IMPL                 : 
IN                   : 
INPUT                : 
INT128               : 69
INT16                : 66
INT32                : 67 105
INT64                : 68 108
INT8                 : 65
INTERRO              : 
INTTYPE              : 20 33 39 39 61 71 101 105 108
IO                   : 89 90
LCOR                 : 
LET                  : 5 6 19 31 64
LINKEDLIST           : 64 70
LLLAVE               : 46 92 99 106 107 109 110 111 112 119 120
LOOP                 : 92
LPAREN               : 31 33 34 54 64 70 71 89 89 90 90 90 91 99 100 109 111 116 117 118 119 120
MAINFN               : 
MATCH                : 
MAYORQUE             : 56
MENORQUE             : 57
MINUS                : 77
MOVE                 : 
MULTIASIGN           : 
MUT                  : 5 6 31 64 89 90
NEW                  : 31 54 64 70
NFLOATTYPE           : 63
NINTTYPE             : 21 40 40 60
OK                   : 
OR                   : 83
PARSE                : 
PLUS                 : 75 113
POINT                : 33 71 89 90 90 91
POINTERSIZE          : 
POP_BACK             : 91
PORCENTAJE           : 78
PRINTLN              : 100
PRIV                 : 
PUB                  : 
PUSH                 : 33
PUSH_FRONT           : 71
RCOR                 : 
READLINE             : 89 90
REF                  : 
RESTAASIGN           : 
RETURN               : 119
RLLAVE               : 46 92 99 106 107 109 110 111 112 119 120
RPAREN               : 31 33 34 54 64 70 71 89 89 90 90 90 91 99 100 109 111 116 117 118 119 120
SELF                 : 
SIZEOF               : 
STATIC               : 93
STDIN                : 89 90
STR                  : 93 94
STRING               : 34 34 38 52
STRUCT               : 
SUMAASIGN            : 
SUPER                : 
TIMES                : 76
TRUE                 : 23 97
TYPE                 : 
TYPEOF               : 
UINT128              : 88
UINT16               : 85
UINT32               : 86
UINT64               : 87
UINT8                : 84
UNSAFE               : 
UNWRAPOR             : 
USE                  : 
VEC                  : 31
WHERE                : 
WHILE                : 46
error                : 

Nonterminals, with rules where they appear

asignacion           : 7
boolean              : 44 45 45 72 72 73 103
comparacion          : 30 114 115 116 117
conectores           : 29
cuerpo               : 0
cuerpof              : 4 46 106 107 109 110 111 112 119 120
datatype             : 95 96 119 120
elseblock            : 12
elseifblock          : 11 107
entrada              : 17
estructuras          : 6
expresion            : 28
floatsize            : 50
funcion              : 2
hashmap              : 43
ifblock              : 10 106 109 110
ifcondicion          : 102 115 117 118
ifparams             : 46 109 110 111 112 119
impresion            : 8
intsize              : 20 21 48
linkedlist           : 42
llpopback            : 15
llpushfront          : 14
loop                 : 9
metodo               : 1 3 4 92 99
params               : 96 99 119 120
signo                : 55
signocompar          : 35 36 37 39 40 41 45
signoconect          : 72 74 115 117
strsize              : 32 51
sumaint              : 16
uintsize             : 49 101
valor                : 5 19
valornumerico        : 22 55 55
vectorpush           : 13
while                : 18

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . metodo
    (2) cuerpo -> . funcion
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . vectorpush
    (14) metodo -> . llpushfront
    (15) metodo -> . llpopback
    (16) metodo -> . sumaint
    (17) metodo -> . entrada
    (18) metodo -> . while
    (99) funcion -> . FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE
    (119) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> . LET ID IGUAL valor ENDCHAR
    (20) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (32) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (64) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (101) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (100) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (92) loop -> . LOOP LLLAVE metodo RLLAVE
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (107) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (33) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> . ID PLUS ID
    (89) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (46) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    FN              shift and go to state 16
    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    cuerpo                         shift and go to state 1
    metodo                         shift and go to state 2
    funcion                        shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> metodo .

    $end            reduce using rule 1 (cuerpo -> metodo .)


state 3

    (2) cuerpo -> funcion .

    $end            reduce using rule 2 (cuerpo -> funcion .)


state 4

    (7) metodo -> asignacion .

    $end            reduce using rule 7 (metodo -> asignacion .)
    RLLAVE          reduce using rule 7 (metodo -> asignacion .)
    LET             reduce using rule 7 (metodo -> asignacion .)
    CONST           reduce using rule 7 (metodo -> asignacion .)
    PRINTLN         reduce using rule 7 (metodo -> asignacion .)
    LOOP            reduce using rule 7 (metodo -> asignacion .)
    IF              reduce using rule 7 (metodo -> asignacion .)
    ID              reduce using rule 7 (metodo -> asignacion .)
    IO              reduce using rule 7 (metodo -> asignacion .)
    WHILE           reduce using rule 7 (metodo -> asignacion .)
    RETURN          reduce using rule 7 (metodo -> asignacion .)


state 5

    (8) metodo -> impresion .

    $end            reduce using rule 8 (metodo -> impresion .)
    RLLAVE          reduce using rule 8 (metodo -> impresion .)
    LET             reduce using rule 8 (metodo -> impresion .)
    CONST           reduce using rule 8 (metodo -> impresion .)
    PRINTLN         reduce using rule 8 (metodo -> impresion .)
    LOOP            reduce using rule 8 (metodo -> impresion .)
    IF              reduce using rule 8 (metodo -> impresion .)
    ID              reduce using rule 8 (metodo -> impresion .)
    IO              reduce using rule 8 (metodo -> impresion .)
    WHILE           reduce using rule 8 (metodo -> impresion .)
    RETURN          reduce using rule 8 (metodo -> impresion .)


state 6

    (9) metodo -> loop .

    $end            reduce using rule 9 (metodo -> loop .)
    RLLAVE          reduce using rule 9 (metodo -> loop .)
    LET             reduce using rule 9 (metodo -> loop .)
    CONST           reduce using rule 9 (metodo -> loop .)
    PRINTLN         reduce using rule 9 (metodo -> loop .)
    LOOP            reduce using rule 9 (metodo -> loop .)
    IF              reduce using rule 9 (metodo -> loop .)
    ID              reduce using rule 9 (metodo -> loop .)
    IO              reduce using rule 9 (metodo -> loop .)
    WHILE           reduce using rule 9 (metodo -> loop .)
    RETURN          reduce using rule 9 (metodo -> loop .)


state 7

    (10) metodo -> ifblock .
    (109) elseifblock -> ifblock . ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> ifblock . ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> ifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 10 (metodo -> ifblock .)
    RLLAVE          reduce using rule 10 (metodo -> ifblock .)
    LET             reduce using rule 10 (metodo -> ifblock .)
    CONST           reduce using rule 10 (metodo -> ifblock .)
    PRINTLN         reduce using rule 10 (metodo -> ifblock .)
    LOOP            reduce using rule 10 (metodo -> ifblock .)
    IF              reduce using rule 10 (metodo -> ifblock .)
    ID              reduce using rule 10 (metodo -> ifblock .)
    IO              reduce using rule 10 (metodo -> ifblock .)
    WHILE           reduce using rule 10 (metodo -> ifblock .)
    RETURN          reduce using rule 10 (metodo -> ifblock .)
    ELSE            shift and go to state 25


state 8

    (11) metodo -> elseifblock .
    (107) elseblock -> elseifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 11 (metodo -> elseifblock .)
    RLLAVE          reduce using rule 11 (metodo -> elseifblock .)
    LET             reduce using rule 11 (metodo -> elseifblock .)
    CONST           reduce using rule 11 (metodo -> elseifblock .)
    PRINTLN         reduce using rule 11 (metodo -> elseifblock .)
    LOOP            reduce using rule 11 (metodo -> elseifblock .)
    IF              reduce using rule 11 (metodo -> elseifblock .)
    ID              reduce using rule 11 (metodo -> elseifblock .)
    IO              reduce using rule 11 (metodo -> elseifblock .)
    WHILE           reduce using rule 11 (metodo -> elseifblock .)
    RETURN          reduce using rule 11 (metodo -> elseifblock .)
    ELSE            shift and go to state 26


state 9

    (12) metodo -> elseblock .

    $end            reduce using rule 12 (metodo -> elseblock .)
    RLLAVE          reduce using rule 12 (metodo -> elseblock .)
    LET             reduce using rule 12 (metodo -> elseblock .)
    CONST           reduce using rule 12 (metodo -> elseblock .)
    PRINTLN         reduce using rule 12 (metodo -> elseblock .)
    LOOP            reduce using rule 12 (metodo -> elseblock .)
    IF              reduce using rule 12 (metodo -> elseblock .)
    ID              reduce using rule 12 (metodo -> elseblock .)
    IO              reduce using rule 12 (metodo -> elseblock .)
    WHILE           reduce using rule 12 (metodo -> elseblock .)
    RETURN          reduce using rule 12 (metodo -> elseblock .)


state 10

    (13) metodo -> vectorpush .

    $end            reduce using rule 13 (metodo -> vectorpush .)
    RLLAVE          reduce using rule 13 (metodo -> vectorpush .)
    LET             reduce using rule 13 (metodo -> vectorpush .)
    CONST           reduce using rule 13 (metodo -> vectorpush .)
    PRINTLN         reduce using rule 13 (metodo -> vectorpush .)
    LOOP            reduce using rule 13 (metodo -> vectorpush .)
    IF              reduce using rule 13 (metodo -> vectorpush .)
    ID              reduce using rule 13 (metodo -> vectorpush .)
    IO              reduce using rule 13 (metodo -> vectorpush .)
    WHILE           reduce using rule 13 (metodo -> vectorpush .)
    RETURN          reduce using rule 13 (metodo -> vectorpush .)


state 11

    (14) metodo -> llpushfront .

    $end            reduce using rule 14 (metodo -> llpushfront .)
    RLLAVE          reduce using rule 14 (metodo -> llpushfront .)
    LET             reduce using rule 14 (metodo -> llpushfront .)
    CONST           reduce using rule 14 (metodo -> llpushfront .)
    PRINTLN         reduce using rule 14 (metodo -> llpushfront .)
    LOOP            reduce using rule 14 (metodo -> llpushfront .)
    IF              reduce using rule 14 (metodo -> llpushfront .)
    ID              reduce using rule 14 (metodo -> llpushfront .)
    IO              reduce using rule 14 (metodo -> llpushfront .)
    WHILE           reduce using rule 14 (metodo -> llpushfront .)
    RETURN          reduce using rule 14 (metodo -> llpushfront .)


state 12

    (15) metodo -> llpopback .

    $end            reduce using rule 15 (metodo -> llpopback .)
    RLLAVE          reduce using rule 15 (metodo -> llpopback .)
    LET             reduce using rule 15 (metodo -> llpopback .)
    CONST           reduce using rule 15 (metodo -> llpopback .)
    PRINTLN         reduce using rule 15 (metodo -> llpopback .)
    LOOP            reduce using rule 15 (metodo -> llpopback .)
    IF              reduce using rule 15 (metodo -> llpopback .)
    ID              reduce using rule 15 (metodo -> llpopback .)
    IO              reduce using rule 15 (metodo -> llpopback .)
    WHILE           reduce using rule 15 (metodo -> llpopback .)
    RETURN          reduce using rule 15 (metodo -> llpopback .)


state 13

    (16) metodo -> sumaint .

    $end            reduce using rule 16 (metodo -> sumaint .)
    RLLAVE          reduce using rule 16 (metodo -> sumaint .)
    LET             reduce using rule 16 (metodo -> sumaint .)
    CONST           reduce using rule 16 (metodo -> sumaint .)
    PRINTLN         reduce using rule 16 (metodo -> sumaint .)
    LOOP            reduce using rule 16 (metodo -> sumaint .)
    IF              reduce using rule 16 (metodo -> sumaint .)
    ID              reduce using rule 16 (metodo -> sumaint .)
    IO              reduce using rule 16 (metodo -> sumaint .)
    WHILE           reduce using rule 16 (metodo -> sumaint .)
    RETURN          reduce using rule 16 (metodo -> sumaint .)


state 14

    (17) metodo -> entrada .

    $end            reduce using rule 17 (metodo -> entrada .)
    RLLAVE          reduce using rule 17 (metodo -> entrada .)
    LET             reduce using rule 17 (metodo -> entrada .)
    CONST           reduce using rule 17 (metodo -> entrada .)
    PRINTLN         reduce using rule 17 (metodo -> entrada .)
    LOOP            reduce using rule 17 (metodo -> entrada .)
    IF              reduce using rule 17 (metodo -> entrada .)
    ID              reduce using rule 17 (metodo -> entrada .)
    IO              reduce using rule 17 (metodo -> entrada .)
    WHILE           reduce using rule 17 (metodo -> entrada .)
    RETURN          reduce using rule 17 (metodo -> entrada .)


state 15

    (18) metodo -> while .

    $end            reduce using rule 18 (metodo -> while .)
    RLLAVE          reduce using rule 18 (metodo -> while .)
    LET             reduce using rule 18 (metodo -> while .)
    CONST           reduce using rule 18 (metodo -> while .)
    PRINTLN         reduce using rule 18 (metodo -> while .)
    LOOP            reduce using rule 18 (metodo -> while .)
    IF              reduce using rule 18 (metodo -> while .)
    ID              reduce using rule 18 (metodo -> while .)
    IO              reduce using rule 18 (metodo -> while .)
    WHILE           reduce using rule 18 (metodo -> while .)
    RETURN          reduce using rule 18 (metodo -> while .)


state 16

    (99) funcion -> FN . ID LPAREN params RPAREN LLLAVE metodo RLLAVE
    (119) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    ID              shift and go to state 27


state 17

    (33) vectorpush -> ID . POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> ID . POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> ID . POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> ID . PLUS ID

    POINT           shift and go to state 28
    PLUS            shift and go to state 29


state 18

    (5) asignacion -> LET . MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> LET . MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> LET . ID IGUAL valor ENDCHAR
    (31) asignacion -> LET . MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (64) asignacion -> LET . MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    MUT             shift and go to state 30
    ID              shift and go to state 31


state 19

    (20) asignacion -> CONST . ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> CONST . ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (32) asignacion -> CONST . ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> CONST . ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> CONST . ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> CONST . ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> CONST . ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (101) asignacion -> CONST . ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> CONST . ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> CONST . ID COLON INT64 IGUAL INTTYPE ENDCHAR

    ID              shift and go to state 32


state 20

    (100) impresion -> PRINTLN . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 33


state 21

    (92) loop -> LOOP . LLLAVE metodo RLLAVE

    LLLAVE          shift and go to state 34


state 22

    (111) ifblock -> IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> IF . ifparams LLLAVE cuerpof RLLAVE
    (102) ifparams -> . ifcondicion
    (103) ifparams -> . boolean
    (104) ifparams -> . ID
    (114) ifcondicion -> . comparacion
    (115) ifcondicion -> . comparacion signoconect ifcondicion
    (116) ifcondicion -> . LPAREN comparacion RPAREN
    (117) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (118) ifcondicion -> . LPAREN ifcondicion RPAREN
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (35) comparacion -> . ID signocompar ID
    (36) comparacion -> . IDCHAR signocompar IDCHAR
    (37) comparacion -> . IDSTRING signocompar IDSTRING
    (39) comparacion -> . INTTYPE signocompar INTTYPE
    (40) comparacion -> . NINTTYPE signocompar NINTTYPE
    (41) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (45) comparacion -> . boolean signocompar boolean

    LPAREN          shift and go to state 35
    ID              shift and go to state 39
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47

    ifparams                       shift and go to state 36
    ifcondicion                    shift and go to state 37
    boolean                        shift and go to state 38
    comparacion                    shift and go to state 40

state 23

    (89) entrada -> IO . DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> IO . DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 48


state 24

    (46) while -> WHILE . ifparams LLLAVE cuerpof RLLAVE
    (102) ifparams -> . ifcondicion
    (103) ifparams -> . boolean
    (104) ifparams -> . ID
    (114) ifcondicion -> . comparacion
    (115) ifcondicion -> . comparacion signoconect ifcondicion
    (116) ifcondicion -> . LPAREN comparacion RPAREN
    (117) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (118) ifcondicion -> . LPAREN ifcondicion RPAREN
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (35) comparacion -> . ID signocompar ID
    (36) comparacion -> . IDCHAR signocompar IDCHAR
    (37) comparacion -> . IDSTRING signocompar IDSTRING
    (39) comparacion -> . INTTYPE signocompar INTTYPE
    (40) comparacion -> . NINTTYPE signocompar NINTTYPE
    (41) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (45) comparacion -> . boolean signocompar boolean

    ID              shift and go to state 39
    LPAREN          shift and go to state 50
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47

    ifparams                       shift and go to state 49
    ifcondicion                    shift and go to state 37
    boolean                        shift and go to state 38
    comparacion                    shift and go to state 40

state 25

    (109) elseifblock -> ifblock ELSE . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> ifblock ELSE . IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> ifblock ELSE . LLLAVE cuerpof RLLAVE

    IF              shift and go to state 51
    LLLAVE          shift and go to state 52


state 26

    (107) elseblock -> elseifblock ELSE . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 53


state 27

    (99) funcion -> FN ID . LPAREN params RPAREN LLLAVE metodo RLLAVE
    (119) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    LPAREN          shift and go to state 54


state 28

    (33) vectorpush -> ID POINT . PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> ID POINT . PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> ID POINT . POP_BACK LPAREN RPAREN ENDCHAR

    PUSH            shift and go to state 55
    PUSH_FRONT      shift and go to state 56
    POP_BACK        shift and go to state 57


state 29

    (113) sumaint -> ID PLUS . ID

    ID              shift and go to state 58


state 30

    (5) asignacion -> LET MUT . ID IGUAL valor ENDCHAR
    (6) asignacion -> LET MUT . ID IGUAL estructuras ENDCHAR
    (31) asignacion -> LET MUT . ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (64) asignacion -> LET MUT . ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    ID              shift and go to state 59


state 31

    (19) asignacion -> LET ID . IGUAL valor ENDCHAR

    IGUAL           shift and go to state 60


state 32

    (20) asignacion -> CONST ID . COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> CONST ID . COLON intsize IGUAL NINTTYPE ENDCHAR
    (32) asignacion -> CONST ID . COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> CONST ID . COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> CONST ID . COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> CONST ID . COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> CONST ID . COLON CHAR IGUAL IDCHAR ENDCHAR
    (101) asignacion -> CONST ID . COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> CONST ID . COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> CONST ID . COLON INT64 IGUAL INTTYPE ENDCHAR

    COLON           shift and go to state 61


state 33

    (100) impresion -> PRINTLN LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 62


state 34

    (92) loop -> LOOP LLLAVE . metodo RLLAVE
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . vectorpush
    (14) metodo -> . llpushfront
    (15) metodo -> . llpopback
    (16) metodo -> . sumaint
    (17) metodo -> . entrada
    (18) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> . LET ID IGUAL valor ENDCHAR
    (20) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (32) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (64) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (101) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (100) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (92) loop -> . LOOP LLLAVE metodo RLLAVE
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (107) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (33) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> . ID PLUS ID
    (89) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (46) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    metodo                         shift and go to state 63
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 35

    (111) ifblock -> IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (116) ifcondicion -> LPAREN . comparacion RPAREN
    (117) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (118) ifcondicion -> LPAREN . ifcondicion RPAREN
    (102) ifparams -> . ifcondicion
    (103) ifparams -> . boolean
    (104) ifparams -> . ID
    (35) comparacion -> . ID signocompar ID
    (36) comparacion -> . IDCHAR signocompar IDCHAR
    (37) comparacion -> . IDSTRING signocompar IDSTRING
    (39) comparacion -> . INTTYPE signocompar INTTYPE
    (40) comparacion -> . NINTTYPE signocompar NINTTYPE
    (41) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (45) comparacion -> . boolean signocompar boolean
    (114) ifcondicion -> . comparacion
    (115) ifcondicion -> . comparacion signoconect ifcondicion
    (116) ifcondicion -> . LPAREN comparacion RPAREN
    (117) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (118) ifcondicion -> . LPAREN ifcondicion RPAREN
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE

    ID              shift and go to state 39
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47
    LPAREN          shift and go to state 50
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    ifparams                       shift and go to state 64
    comparacion                    shift and go to state 65
    ifcondicion                    shift and go to state 66
    boolean                        shift and go to state 38

state 36

    (112) ifblock -> IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 67


state 37

    (102) ifparams -> ifcondicion .

    LLLAVE          reduce using rule 102 (ifparams -> ifcondicion .)
    ENDCHAR         reduce using rule 102 (ifparams -> ifcondicion .)


state 38

    (103) ifparams -> boolean .
    (45) comparacion -> boolean . signocompar boolean
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    LLLAVE          reduce using rule 103 (ifparams -> boolean .)
    RPAREN          reduce using rule 103 (ifparams -> boolean .)
    ENDCHAR         reduce using rule 103 (ifparams -> boolean .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 68

state 39

    (104) ifparams -> ID .
    (35) comparacion -> ID . signocompar ID
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    LLLAVE          reduce using rule 104 (ifparams -> ID .)
    RPAREN          reduce using rule 104 (ifparams -> ID .)
    ENDCHAR         reduce using rule 104 (ifparams -> ID .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 73

state 40

    (114) ifcondicion -> comparacion .
    (115) ifcondicion -> comparacion . signoconect ifcondicion
    (82) signoconect -> . DAMPERSAND
    (83) signoconect -> . OR

    LLLAVE          reduce using rule 114 (ifcondicion -> comparacion .)
    RPAREN          reduce using rule 114 (ifcondicion -> comparacion .)
    ENDCHAR         reduce using rule 114 (ifcondicion -> comparacion .)
    DAMPERSAND      shift and go to state 75
    OR              shift and go to state 76

    signoconect                    shift and go to state 74

state 41

    (97) boolean -> TRUE .

    MAYORQUE        reduce using rule 97 (boolean -> TRUE .)
    MENORQUE        reduce using rule 97 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 97 (boolean -> TRUE .)
    IDENTICO        reduce using rule 97 (boolean -> TRUE .)
    LLLAVE          reduce using rule 97 (boolean -> TRUE .)
    RPAREN          reduce using rule 97 (boolean -> TRUE .)
    DAMPERSAND      reduce using rule 97 (boolean -> TRUE .)
    OR              reduce using rule 97 (boolean -> TRUE .)
    ENDCHAR         reduce using rule 97 (boolean -> TRUE .)


state 42

    (98) boolean -> FALSE .

    MAYORQUE        reduce using rule 98 (boolean -> FALSE .)
    MENORQUE        reduce using rule 98 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 98 (boolean -> FALSE .)
    IDENTICO        reduce using rule 98 (boolean -> FALSE .)
    LLLAVE          reduce using rule 98 (boolean -> FALSE .)
    RPAREN          reduce using rule 98 (boolean -> FALSE .)
    DAMPERSAND      reduce using rule 98 (boolean -> FALSE .)
    OR              reduce using rule 98 (boolean -> FALSE .)
    ENDCHAR         reduce using rule 98 (boolean -> FALSE .)


state 43

    (36) comparacion -> IDCHAR . signocompar IDCHAR
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 77

state 44

    (37) comparacion -> IDSTRING . signocompar IDSTRING
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 78

state 45

    (39) comparacion -> INTTYPE . signocompar INTTYPE
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 79

state 46

    (40) comparacion -> NINTTYPE . signocompar NINTTYPE
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 80

state 47

    (41) comparacion -> FLOATTYPE . signocompar FLOATTYPE
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 81

state 48

    (89) entrada -> IO DOSDOBLEPUNTOS . STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> IO DOSDOBLEPUNTOS . STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    STDIN           shift and go to state 82


state 49

    (46) while -> WHILE ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 83


state 50

    (116) ifcondicion -> LPAREN . comparacion RPAREN
    (117) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (118) ifcondicion -> LPAREN . ifcondicion RPAREN
    (35) comparacion -> . ID signocompar ID
    (36) comparacion -> . IDCHAR signocompar IDCHAR
    (37) comparacion -> . IDSTRING signocompar IDSTRING
    (39) comparacion -> . INTTYPE signocompar INTTYPE
    (40) comparacion -> . NINTTYPE signocompar NINTTYPE
    (41) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (45) comparacion -> . boolean signocompar boolean
    (114) ifcondicion -> . comparacion
    (115) ifcondicion -> . comparacion signoconect ifcondicion
    (116) ifcondicion -> . LPAREN comparacion RPAREN
    (117) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (118) ifcondicion -> . LPAREN ifcondicion RPAREN
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE

    ID              shift and go to state 85
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47
    LPAREN          shift and go to state 50
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    comparacion                    shift and go to state 65
    ifcondicion                    shift and go to state 84
    boolean                        shift and go to state 86

state 51

    (109) elseifblock -> ifblock ELSE IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> ifblock ELSE IF . ifparams LLLAVE cuerpof RLLAVE
    (102) ifparams -> . ifcondicion
    (103) ifparams -> . boolean
    (104) ifparams -> . ID
    (114) ifcondicion -> . comparacion
    (115) ifcondicion -> . comparacion signoconect ifcondicion
    (116) ifcondicion -> . LPAREN comparacion RPAREN
    (117) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (118) ifcondicion -> . LPAREN ifcondicion RPAREN
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (35) comparacion -> . ID signocompar ID
    (36) comparacion -> . IDCHAR signocompar IDCHAR
    (37) comparacion -> . IDSTRING signocompar IDSTRING
    (39) comparacion -> . INTTYPE signocompar INTTYPE
    (40) comparacion -> . NINTTYPE signocompar NINTTYPE
    (41) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (45) comparacion -> . boolean signocompar boolean

    LPAREN          shift and go to state 87
    ID              shift and go to state 39
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47

    ifparams                       shift and go to state 88
    ifcondicion                    shift and go to state 37
    boolean                        shift and go to state 38
    comparacion                    shift and go to state 40

state 52

    (106) elseblock -> ifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . vectorpush
    (14) metodo -> . llpushfront
    (15) metodo -> . llpopback
    (16) metodo -> . sumaint
    (17) metodo -> . entrada
    (18) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> . LET ID IGUAL valor ENDCHAR
    (20) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (32) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (64) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (101) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (100) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (92) loop -> . LOOP LLLAVE metodo RLLAVE
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (107) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (33) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> . ID PLUS ID
    (89) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (46) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 89
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 53

    (107) elseblock -> elseifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . vectorpush
    (14) metodo -> . llpushfront
    (15) metodo -> . llpopback
    (16) metodo -> . sumaint
    (17) metodo -> . entrada
    (18) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> . LET ID IGUAL valor ENDCHAR
    (20) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (32) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (64) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (101) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (100) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (92) loop -> . LOOP LLLAVE metodo RLLAVE
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (107) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (33) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> . ID PLUS ID
    (89) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (46) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    elseifblock                    shift and go to state 8
    cuerpof                        shift and go to state 91
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 54

    (99) funcion -> FN ID LPAREN . params RPAREN LLLAVE metodo RLLAVE
    (119) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (95) params -> . ID COLON datatype
    (96) params -> . ID COLON datatype COMA params

    ID              shift and go to state 92

    params                         shift and go to state 93

state 55

    (33) vectorpush -> ID POINT PUSH . LPAREN INTTYPE RPAREN ENDCHAR

    LPAREN          shift and go to state 94


state 56

    (71) llpushfront -> ID POINT PUSH_FRONT . LPAREN INTTYPE RPAREN ENDCHAR

    LPAREN          shift and go to state 95


state 57

    (91) llpopback -> ID POINT POP_BACK . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 96


state 58

    (113) sumaint -> ID PLUS ID .

    $end            reduce using rule 113 (sumaint -> ID PLUS ID .)
    RLLAVE          reduce using rule 113 (sumaint -> ID PLUS ID .)
    LET             reduce using rule 113 (sumaint -> ID PLUS ID .)
    CONST           reduce using rule 113 (sumaint -> ID PLUS ID .)
    PRINTLN         reduce using rule 113 (sumaint -> ID PLUS ID .)
    LOOP            reduce using rule 113 (sumaint -> ID PLUS ID .)
    IF              reduce using rule 113 (sumaint -> ID PLUS ID .)
    ID              reduce using rule 113 (sumaint -> ID PLUS ID .)
    IO              reduce using rule 113 (sumaint -> ID PLUS ID .)
    WHILE           reduce using rule 113 (sumaint -> ID PLUS ID .)
    RETURN          reduce using rule 113 (sumaint -> ID PLUS ID .)


state 59

    (5) asignacion -> LET MUT ID . IGUAL valor ENDCHAR
    (6) asignacion -> LET MUT ID . IGUAL estructuras ENDCHAR
    (31) asignacion -> LET MUT ID . IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (64) asignacion -> LET MUT ID . IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    IGUAL           shift and go to state 97


state 60

    (19) asignacion -> LET ID IGUAL . valor ENDCHAR
    (22) valor -> . valornumerico
    (23) valor -> . TRUE
    (24) valor -> . FALSE
    (25) valor -> . ID
    (26) valor -> . IDCHAR
    (27) valor -> . IDSTRING
    (28) valor -> . expresion
    (29) valor -> . conectores
    (30) valor -> . comparacion
    (60) valornumerico -> . NINTTYPE
    (61) valornumerico -> . INTTYPE
    (62) valornumerico -> . FLOATTYPE
    (63) valornumerico -> . NFLOATTYPE
    (55) expresion -> . valornumerico signo valornumerico
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (35) comparacion -> . ID signocompar ID
    (36) comparacion -> . IDCHAR signocompar IDCHAR
    (37) comparacion -> . IDSTRING signocompar IDSTRING
    (39) comparacion -> . INTTYPE signocompar INTTYPE
    (40) comparacion -> . NINTTYPE signocompar NINTTYPE
    (41) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (45) comparacion -> . boolean signocompar boolean
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE

    TRUE            shift and go to state 101
    FALSE           shift and go to state 102
    ID              shift and go to state 98
    IDCHAR          shift and go to state 103
    IDSTRING        shift and go to state 104
    NINTTYPE        shift and go to state 108
    INTTYPE         shift and go to state 109
    FLOATTYPE       shift and go to state 110
    NFLOATTYPE      shift and go to state 111
    EXCLAM          shift and go to state 113

    valor                          shift and go to state 99
    valornumerico                  shift and go to state 100
    expresion                      shift and go to state 105
    conectores                     shift and go to state 106
    comparacion                    shift and go to state 107
    boolean                        shift and go to state 112

state 61

    (20) asignacion -> CONST ID COLON . intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> CONST ID COLON . intsize IGUAL NINTTYPE ENDCHAR
    (32) asignacion -> CONST ID COLON . strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> CONST ID COLON . STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> CONST ID COLON . STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> CONST ID COLON . BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> CONST ID COLON . CHAR IGUAL IDCHAR ENDCHAR
    (101) asignacion -> CONST ID COLON . uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> CONST ID COLON . INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> CONST ID COLON . INT64 IGUAL INTTYPE ENDCHAR
    (65) intsize -> . INT8
    (66) intsize -> . INT16
    (67) intsize -> . INT32
    (68) intsize -> . INT64
    (69) intsize -> . INT128
    (93) strsize -> . AMPERSAND COMILLA STATIC STR
    (94) strsize -> . AMPERSAND STR
    (84) uintsize -> . UINT8
    (85) uintsize -> . UINT16
    (86) uintsize -> . UINT32
    (87) uintsize -> . UINT64
    (88) uintsize -> . UINT128

    STRING          shift and go to state 116
    BOOL            shift and go to state 117
    CHAR            shift and go to state 118
    INT32           shift and go to state 120
    INT64           shift and go to state 121
    INT8            shift and go to state 122
    INT16           shift and go to state 123
    INT128          shift and go to state 124
    AMPERSAND       shift and go to state 125
    UINT8           shift and go to state 126
    UINT16          shift and go to state 127
    UINT32          shift and go to state 128
    UINT64          shift and go to state 129
    UINT128         shift and go to state 130

    intsize                        shift and go to state 114
    strsize                        shift and go to state 115
    uintsize                       shift and go to state 119

state 62

    (100) impresion -> PRINTLN LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 131


state 63

    (92) loop -> LOOP LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 132


state 64

    (111) ifblock -> IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 133


state 65

    (116) ifcondicion -> LPAREN comparacion . RPAREN
    (117) ifcondicion -> LPAREN comparacion . RPAREN signoconect ifcondicion
    (114) ifcondicion -> comparacion .
    (115) ifcondicion -> comparacion . signoconect ifcondicion
    (82) signoconect -> . DAMPERSAND
    (83) signoconect -> . OR

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 134
    DAMPERSAND      shift and go to state 75
    OR              shift and go to state 76

  ! RPAREN          [ reduce using rule 114 (ifcondicion -> comparacion .) ]

    signoconect                    shift and go to state 74

state 66

    (118) ifcondicion -> LPAREN ifcondicion . RPAREN
    (102) ifparams -> ifcondicion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 135

  ! RPAREN          [ reduce using rule 102 (ifparams -> ifcondicion .) ]


state 67

    (112) ifblock -> IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . vectorpush
    (14) metodo -> . llpushfront
    (15) metodo -> . llpopback
    (16) metodo -> . sumaint
    (17) metodo -> . entrada
    (18) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> . LET ID IGUAL valor ENDCHAR
    (20) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (32) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (64) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (101) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (100) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (92) loop -> . LOOP LLLAVE metodo RLLAVE
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (107) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (33) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> . ID PLUS ID
    (89) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (46) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    cuerpof                        shift and go to state 136
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 68

    (45) comparacion -> boolean signocompar . boolean
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    boolean                        shift and go to state 137

state 69

    (56) signocompar -> MAYORQUE .

    TRUE            reduce using rule 56 (signocompar -> MAYORQUE .)
    FALSE           reduce using rule 56 (signocompar -> MAYORQUE .)
    ID              reduce using rule 56 (signocompar -> MAYORQUE .)
    IDCHAR          reduce using rule 56 (signocompar -> MAYORQUE .)
    IDSTRING        reduce using rule 56 (signocompar -> MAYORQUE .)
    INTTYPE         reduce using rule 56 (signocompar -> MAYORQUE .)
    NINTTYPE        reduce using rule 56 (signocompar -> MAYORQUE .)
    FLOATTYPE       reduce using rule 56 (signocompar -> MAYORQUE .)


state 70

    (57) signocompar -> MENORQUE .

    TRUE            reduce using rule 57 (signocompar -> MENORQUE .)
    FALSE           reduce using rule 57 (signocompar -> MENORQUE .)
    ID              reduce using rule 57 (signocompar -> MENORQUE .)
    IDCHAR          reduce using rule 57 (signocompar -> MENORQUE .)
    IDSTRING        reduce using rule 57 (signocompar -> MENORQUE .)
    INTTYPE         reduce using rule 57 (signocompar -> MENORQUE .)
    NINTTYPE        reduce using rule 57 (signocompar -> MENORQUE .)
    FLOATTYPE       reduce using rule 57 (signocompar -> MENORQUE .)


state 71

    (58) signocompar -> DIFERENTE .

    TRUE            reduce using rule 58 (signocompar -> DIFERENTE .)
    FALSE           reduce using rule 58 (signocompar -> DIFERENTE .)
    ID              reduce using rule 58 (signocompar -> DIFERENTE .)
    IDCHAR          reduce using rule 58 (signocompar -> DIFERENTE .)
    IDSTRING        reduce using rule 58 (signocompar -> DIFERENTE .)
    INTTYPE         reduce using rule 58 (signocompar -> DIFERENTE .)
    NINTTYPE        reduce using rule 58 (signocompar -> DIFERENTE .)
    FLOATTYPE       reduce using rule 58 (signocompar -> DIFERENTE .)


state 72

    (59) signocompar -> IDENTICO .

    TRUE            reduce using rule 59 (signocompar -> IDENTICO .)
    FALSE           reduce using rule 59 (signocompar -> IDENTICO .)
    ID              reduce using rule 59 (signocompar -> IDENTICO .)
    IDCHAR          reduce using rule 59 (signocompar -> IDENTICO .)
    IDSTRING        reduce using rule 59 (signocompar -> IDENTICO .)
    INTTYPE         reduce using rule 59 (signocompar -> IDENTICO .)
    NINTTYPE        reduce using rule 59 (signocompar -> IDENTICO .)
    FLOATTYPE       reduce using rule 59 (signocompar -> IDENTICO .)


state 73

    (35) comparacion -> ID signocompar . ID

    ID              shift and go to state 138


state 74

    (115) ifcondicion -> comparacion signoconect . ifcondicion
    (114) ifcondicion -> . comparacion
    (115) ifcondicion -> . comparacion signoconect ifcondicion
    (116) ifcondicion -> . LPAREN comparacion RPAREN
    (117) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (118) ifcondicion -> . LPAREN ifcondicion RPAREN
    (35) comparacion -> . ID signocompar ID
    (36) comparacion -> . IDCHAR signocompar IDCHAR
    (37) comparacion -> . IDSTRING signocompar IDSTRING
    (39) comparacion -> . INTTYPE signocompar INTTYPE
    (40) comparacion -> . NINTTYPE signocompar NINTTYPE
    (41) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (45) comparacion -> . boolean signocompar boolean
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE

    LPAREN          shift and go to state 50
    ID              shift and go to state 85
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    comparacion                    shift and go to state 40
    ifcondicion                    shift and go to state 139
    boolean                        shift and go to state 86

state 75

    (82) signoconect -> DAMPERSAND .

    LPAREN          reduce using rule 82 (signoconect -> DAMPERSAND .)
    ID              reduce using rule 82 (signoconect -> DAMPERSAND .)
    IDCHAR          reduce using rule 82 (signoconect -> DAMPERSAND .)
    IDSTRING        reduce using rule 82 (signoconect -> DAMPERSAND .)
    INTTYPE         reduce using rule 82 (signoconect -> DAMPERSAND .)
    NINTTYPE        reduce using rule 82 (signoconect -> DAMPERSAND .)
    FLOATTYPE       reduce using rule 82 (signoconect -> DAMPERSAND .)
    TRUE            reduce using rule 82 (signoconect -> DAMPERSAND .)
    FALSE           reduce using rule 82 (signoconect -> DAMPERSAND .)


state 76

    (83) signoconect -> OR .

    LPAREN          reduce using rule 83 (signoconect -> OR .)
    ID              reduce using rule 83 (signoconect -> OR .)
    IDCHAR          reduce using rule 83 (signoconect -> OR .)
    IDSTRING        reduce using rule 83 (signoconect -> OR .)
    INTTYPE         reduce using rule 83 (signoconect -> OR .)
    NINTTYPE        reduce using rule 83 (signoconect -> OR .)
    FLOATTYPE       reduce using rule 83 (signoconect -> OR .)
    TRUE            reduce using rule 83 (signoconect -> OR .)
    FALSE           reduce using rule 83 (signoconect -> OR .)


state 77

    (36) comparacion -> IDCHAR signocompar . IDCHAR

    IDCHAR          shift and go to state 140


state 78

    (37) comparacion -> IDSTRING signocompar . IDSTRING

    IDSTRING        shift and go to state 141


state 79

    (39) comparacion -> INTTYPE signocompar . INTTYPE

    INTTYPE         shift and go to state 142


state 80

    (40) comparacion -> NINTTYPE signocompar . NINTTYPE

    NINTTYPE        shift and go to state 143


state 81

    (41) comparacion -> FLOATTYPE signocompar . FLOATTYPE

    FLOATTYPE       shift and go to state 144


state 82

    (89) entrada -> IO DOSDOBLEPUNTOS STDIN . LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> IO DOSDOBLEPUNTOS STDIN . LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 145


state 83

    (46) while -> WHILE ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . vectorpush
    (14) metodo -> . llpushfront
    (15) metodo -> . llpopback
    (16) metodo -> . sumaint
    (17) metodo -> . entrada
    (18) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> . LET ID IGUAL valor ENDCHAR
    (20) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (32) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (64) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (101) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (100) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (92) loop -> . LOOP LLLAVE metodo RLLAVE
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (107) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (33) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> . ID PLUS ID
    (89) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (46) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    cuerpof                        shift and go to state 146
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 84

    (118) ifcondicion -> LPAREN ifcondicion . RPAREN

    RPAREN          shift and go to state 135


state 85

    (35) comparacion -> ID . signocompar ID
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 73

state 86

    (45) comparacion -> boolean . signocompar boolean
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 68

state 87

    (109) elseifblock -> ifblock ELSE IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (116) ifcondicion -> LPAREN . comparacion RPAREN
    (117) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (118) ifcondicion -> LPAREN . ifcondicion RPAREN
    (102) ifparams -> . ifcondicion
    (103) ifparams -> . boolean
    (104) ifparams -> . ID
    (35) comparacion -> . ID signocompar ID
    (36) comparacion -> . IDCHAR signocompar IDCHAR
    (37) comparacion -> . IDSTRING signocompar IDSTRING
    (39) comparacion -> . INTTYPE signocompar INTTYPE
    (40) comparacion -> . NINTTYPE signocompar NINTTYPE
    (41) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (45) comparacion -> . boolean signocompar boolean
    (114) ifcondicion -> . comparacion
    (115) ifcondicion -> . comparacion signoconect ifcondicion
    (116) ifcondicion -> . LPAREN comparacion RPAREN
    (117) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (118) ifcondicion -> . LPAREN ifcondicion RPAREN
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE

    ID              shift and go to state 39
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47
    LPAREN          shift and go to state 50
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    ifparams                       shift and go to state 147
    comparacion                    shift and go to state 65
    ifcondicion                    shift and go to state 66
    boolean                        shift and go to state 38

state 88

    (110) elseifblock -> ifblock ELSE IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 148


state 89

    (106) elseblock -> ifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 149


state 90

    (3) cuerpof -> metodo .
    (4) cuerpof -> metodo . cuerpof
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . vectorpush
    (14) metodo -> . llpushfront
    (15) metodo -> . llpopback
    (16) metodo -> . sumaint
    (17) metodo -> . entrada
    (18) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> . LET ID IGUAL valor ENDCHAR
    (20) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (32) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (64) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (101) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (100) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (92) loop -> . LOOP LLLAVE metodo RLLAVE
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (107) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (33) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> . ID PLUS ID
    (89) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (46) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          reduce using rule 3 (cuerpof -> metodo .)
    RETURN          reduce using rule 3 (cuerpof -> metodo .)
    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

  ! ID              [ reduce using rule 3 (cuerpof -> metodo .) ]

    metodo                         shift and go to state 90
    cuerpof                        shift and go to state 150
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 91

    (107) elseblock -> elseifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 151


state 92

    (95) params -> ID . COLON datatype
    (96) params -> ID . COLON datatype COMA params

    COLON           shift and go to state 152


state 93

    (99) funcion -> FN ID LPAREN params . RPAREN LLLAVE metodo RLLAVE
    (119) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    RPAREN          shift and go to state 153


state 94

    (33) vectorpush -> ID POINT PUSH LPAREN . INTTYPE RPAREN ENDCHAR

    INTTYPE         shift and go to state 154


state 95

    (71) llpushfront -> ID POINT PUSH_FRONT LPAREN . INTTYPE RPAREN ENDCHAR

    INTTYPE         shift and go to state 155


state 96

    (91) llpopback -> ID POINT POP_BACK LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 156


state 97

    (5) asignacion -> LET MUT ID IGUAL . valor ENDCHAR
    (6) asignacion -> LET MUT ID IGUAL . estructuras ENDCHAR
    (31) asignacion -> LET MUT ID IGUAL . VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (64) asignacion -> LET MUT ID IGUAL . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (22) valor -> . valornumerico
    (23) valor -> . TRUE
    (24) valor -> . FALSE
    (25) valor -> . ID
    (26) valor -> . IDCHAR
    (27) valor -> . IDSTRING
    (28) valor -> . expresion
    (29) valor -> . conectores
    (30) valor -> . comparacion
    (42) estructuras -> . linkedlist
    (43) estructuras -> . hashmap
    (60) valornumerico -> . NINTTYPE
    (61) valornumerico -> . INTTYPE
    (62) valornumerico -> . FLOATTYPE
    (63) valornumerico -> . NFLOATTYPE
    (55) expresion -> . valornumerico signo valornumerico
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (35) comparacion -> . ID signocompar ID
    (36) comparacion -> . IDCHAR signocompar IDCHAR
    (37) comparacion -> . IDSTRING signocompar IDSTRING
    (39) comparacion -> . INTTYPE signocompar INTTYPE
    (40) comparacion -> . NINTTYPE signocompar NINTTYPE
    (41) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (45) comparacion -> . boolean signocompar boolean
    (70) linkedlist -> . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (54) hashmap -> . HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE

    VEC             shift and go to state 159
    LINKEDLIST      shift and go to state 160
    TRUE            shift and go to state 101
    FALSE           shift and go to state 102
    ID              shift and go to state 98
    IDCHAR          shift and go to state 103
    IDSTRING        shift and go to state 104
    NINTTYPE        shift and go to state 108
    INTTYPE         shift and go to state 109
    FLOATTYPE       shift and go to state 110
    NFLOATTYPE      shift and go to state 111
    EXCLAM          shift and go to state 113
    HASHMAP         shift and go to state 163

    valor                          shift and go to state 157
    estructuras                    shift and go to state 158
    valornumerico                  shift and go to state 100
    expresion                      shift and go to state 105
    conectores                     shift and go to state 106
    comparacion                    shift and go to state 107
    linkedlist                     shift and go to state 161
    hashmap                        shift and go to state 162
    boolean                        shift and go to state 112

state 98

    (25) valor -> ID .
    (74) conectores -> ID . signoconect ID
    (35) comparacion -> ID . signocompar ID
    (82) signoconect -> . DAMPERSAND
    (83) signoconect -> . OR
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 25 (valor -> ID .)
    DAMPERSAND      shift and go to state 75
    OR              shift and go to state 76
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signoconect                    shift and go to state 164
    signocompar                    shift and go to state 73

state 99

    (19) asignacion -> LET ID IGUAL valor . ENDCHAR

    ENDCHAR         shift and go to state 165


state 100

    (22) valor -> valornumerico .
    (55) expresion -> valornumerico . signo valornumerico
    (75) signo -> . PLUS
    (76) signo -> . TIMES
    (77) signo -> . MINUS
    (78) signo -> . PORCENTAJE
    (79) signo -> . DIVIDE

    ENDCHAR         reduce using rule 22 (valor -> valornumerico .)
    PLUS            shift and go to state 167
    TIMES           shift and go to state 168
    MINUS           shift and go to state 169
    PORCENTAJE      shift and go to state 170
    DIVIDE          shift and go to state 171

    signo                          shift and go to state 166

state 101

    (23) valor -> TRUE .
    (97) boolean -> TRUE .

    ENDCHAR         reduce using rule 23 (valor -> TRUE .)
    DAMPERSAND      reduce using rule 97 (boolean -> TRUE .)
    OR              reduce using rule 97 (boolean -> TRUE .)
    MAYORQUE        reduce using rule 97 (boolean -> TRUE .)
    MENORQUE        reduce using rule 97 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 97 (boolean -> TRUE .)
    IDENTICO        reduce using rule 97 (boolean -> TRUE .)


state 102

    (24) valor -> FALSE .
    (98) boolean -> FALSE .

    ENDCHAR         reduce using rule 24 (valor -> FALSE .)
    DAMPERSAND      reduce using rule 98 (boolean -> FALSE .)
    OR              reduce using rule 98 (boolean -> FALSE .)
    MAYORQUE        reduce using rule 98 (boolean -> FALSE .)
    MENORQUE        reduce using rule 98 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 98 (boolean -> FALSE .)
    IDENTICO        reduce using rule 98 (boolean -> FALSE .)


state 103

    (26) valor -> IDCHAR .
    (36) comparacion -> IDCHAR . signocompar IDCHAR
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 26 (valor -> IDCHAR .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 77

state 104

    (27) valor -> IDSTRING .
    (37) comparacion -> IDSTRING . signocompar IDSTRING
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 27 (valor -> IDSTRING .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 78

state 105

    (28) valor -> expresion .

    ENDCHAR         reduce using rule 28 (valor -> expresion .)


state 106

    (29) valor -> conectores .

    ENDCHAR         reduce using rule 29 (valor -> conectores .)


state 107

    (30) valor -> comparacion .

    ENDCHAR         reduce using rule 30 (valor -> comparacion .)


state 108

    (60) valornumerico -> NINTTYPE .
    (40) comparacion -> NINTTYPE . signocompar NINTTYPE
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    PLUS            reduce using rule 60 (valornumerico -> NINTTYPE .)
    TIMES           reduce using rule 60 (valornumerico -> NINTTYPE .)
    MINUS           reduce using rule 60 (valornumerico -> NINTTYPE .)
    PORCENTAJE      reduce using rule 60 (valornumerico -> NINTTYPE .)
    DIVIDE          reduce using rule 60 (valornumerico -> NINTTYPE .)
    ENDCHAR         reduce using rule 60 (valornumerico -> NINTTYPE .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 80

state 109

    (61) valornumerico -> INTTYPE .
    (39) comparacion -> INTTYPE . signocompar INTTYPE
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    PLUS            reduce using rule 61 (valornumerico -> INTTYPE .)
    TIMES           reduce using rule 61 (valornumerico -> INTTYPE .)
    MINUS           reduce using rule 61 (valornumerico -> INTTYPE .)
    PORCENTAJE      reduce using rule 61 (valornumerico -> INTTYPE .)
    DIVIDE          reduce using rule 61 (valornumerico -> INTTYPE .)
    ENDCHAR         reduce using rule 61 (valornumerico -> INTTYPE .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 79

state 110

    (62) valornumerico -> FLOATTYPE .
    (41) comparacion -> FLOATTYPE . signocompar FLOATTYPE
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    PLUS            reduce using rule 62 (valornumerico -> FLOATTYPE .)
    TIMES           reduce using rule 62 (valornumerico -> FLOATTYPE .)
    MINUS           reduce using rule 62 (valornumerico -> FLOATTYPE .)
    PORCENTAJE      reduce using rule 62 (valornumerico -> FLOATTYPE .)
    DIVIDE          reduce using rule 62 (valornumerico -> FLOATTYPE .)
    ENDCHAR         reduce using rule 62 (valornumerico -> FLOATTYPE .)
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signocompar                    shift and go to state 81

state 111

    (63) valornumerico -> NFLOATTYPE .

    PLUS            reduce using rule 63 (valornumerico -> NFLOATTYPE .)
    TIMES           reduce using rule 63 (valornumerico -> NFLOATTYPE .)
    MINUS           reduce using rule 63 (valornumerico -> NFLOATTYPE .)
    PORCENTAJE      reduce using rule 63 (valornumerico -> NFLOATTYPE .)
    DIVIDE          reduce using rule 63 (valornumerico -> NFLOATTYPE .)
    ENDCHAR         reduce using rule 63 (valornumerico -> NFLOATTYPE .)


state 112

    (72) conectores -> boolean . signoconect boolean
    (45) comparacion -> boolean . signocompar boolean
    (82) signoconect -> . DAMPERSAND
    (83) signoconect -> . OR
    (56) signocompar -> . MAYORQUE
    (57) signocompar -> . MENORQUE
    (58) signocompar -> . DIFERENTE
    (59) signocompar -> . IDENTICO

    DAMPERSAND      shift and go to state 75
    OR              shift and go to state 76
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    DIFERENTE       shift and go to state 71
    IDENTICO        shift and go to state 72

    signoconect                    shift and go to state 172
    signocompar                    shift and go to state 68

state 113

    (73) conectores -> EXCLAM . boolean
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    boolean                        shift and go to state 173

state 114

    (20) asignacion -> CONST ID COLON intsize . IGUAL INTTYPE ENDCHAR
    (21) asignacion -> CONST ID COLON intsize . IGUAL NINTTYPE ENDCHAR

    IGUAL           shift and go to state 174


state 115

    (32) asignacion -> CONST ID COLON strsize . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 175


state 116

    (34) asignacion -> CONST ID COLON STRING . IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> CONST ID COLON STRING . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 176


state 117

    (44) asignacion -> CONST ID COLON BOOL . IGUAL boolean ENDCHAR

    IGUAL           shift and go to state 177


state 118

    (47) asignacion -> CONST ID COLON CHAR . IGUAL IDCHAR ENDCHAR

    IGUAL           shift and go to state 178


state 119

    (101) asignacion -> CONST ID COLON uintsize . IGUAL INTTYPE ENDCHAR

    IGUAL           shift and go to state 179


state 120

    (105) asignacion -> CONST ID COLON INT32 . IGUAL INTTYPE ENDCHAR
    (67) intsize -> INT32 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 180

  ! IGUAL           [ reduce using rule 67 (intsize -> INT32 .) ]


state 121

    (108) asignacion -> CONST ID COLON INT64 . IGUAL INTTYPE ENDCHAR
    (68) intsize -> INT64 .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 181

  ! IGUAL           [ reduce using rule 68 (intsize -> INT64 .) ]


state 122

    (65) intsize -> INT8 .

    IGUAL           reduce using rule 65 (intsize -> INT8 .)
    COMA            reduce using rule 65 (intsize -> INT8 .)
    RPAREN          reduce using rule 65 (intsize -> INT8 .)
    LLLAVE          reduce using rule 65 (intsize -> INT8 .)


state 123

    (66) intsize -> INT16 .

    IGUAL           reduce using rule 66 (intsize -> INT16 .)
    COMA            reduce using rule 66 (intsize -> INT16 .)
    RPAREN          reduce using rule 66 (intsize -> INT16 .)
    LLLAVE          reduce using rule 66 (intsize -> INT16 .)


state 124

    (69) intsize -> INT128 .

    IGUAL           reduce using rule 69 (intsize -> INT128 .)
    COMA            reduce using rule 69 (intsize -> INT128 .)
    RPAREN          reduce using rule 69 (intsize -> INT128 .)
    LLLAVE          reduce using rule 69 (intsize -> INT128 .)


state 125

    (93) strsize -> AMPERSAND . COMILLA STATIC STR
    (94) strsize -> AMPERSAND . STR

    COMILLA         shift and go to state 182
    STR             shift and go to state 183


state 126

    (84) uintsize -> UINT8 .

    IGUAL           reduce using rule 84 (uintsize -> UINT8 .)
    COMA            reduce using rule 84 (uintsize -> UINT8 .)
    RPAREN          reduce using rule 84 (uintsize -> UINT8 .)
    LLLAVE          reduce using rule 84 (uintsize -> UINT8 .)


state 127

    (85) uintsize -> UINT16 .

    IGUAL           reduce using rule 85 (uintsize -> UINT16 .)
    COMA            reduce using rule 85 (uintsize -> UINT16 .)
    RPAREN          reduce using rule 85 (uintsize -> UINT16 .)
    LLLAVE          reduce using rule 85 (uintsize -> UINT16 .)


state 128

    (86) uintsize -> UINT32 .

    IGUAL           reduce using rule 86 (uintsize -> UINT32 .)
    COMA            reduce using rule 86 (uintsize -> UINT32 .)
    RPAREN          reduce using rule 86 (uintsize -> UINT32 .)
    LLLAVE          reduce using rule 86 (uintsize -> UINT32 .)


state 129

    (87) uintsize -> UINT64 .

    IGUAL           reduce using rule 87 (uintsize -> UINT64 .)
    COMA            reduce using rule 87 (uintsize -> UINT64 .)
    RPAREN          reduce using rule 87 (uintsize -> UINT64 .)
    LLLAVE          reduce using rule 87 (uintsize -> UINT64 .)


state 130

    (88) uintsize -> UINT128 .

    IGUAL           reduce using rule 88 (uintsize -> UINT128 .)
    COMA            reduce using rule 88 (uintsize -> UINT128 .)
    RPAREN          reduce using rule 88 (uintsize -> UINT128 .)
    LLLAVE          reduce using rule 88 (uintsize -> UINT128 .)


state 131

    (100) impresion -> PRINTLN LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 184


state 132

    (92) loop -> LOOP LLLAVE metodo RLLAVE .

    $end            reduce using rule 92 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RLLAVE          reduce using rule 92 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LET             reduce using rule 92 (loop -> LOOP LLLAVE metodo RLLAVE .)
    CONST           reduce using rule 92 (loop -> LOOP LLLAVE metodo RLLAVE .)
    PRINTLN         reduce using rule 92 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LOOP            reduce using rule 92 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IF              reduce using rule 92 (loop -> LOOP LLLAVE metodo RLLAVE .)
    ID              reduce using rule 92 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IO              reduce using rule 92 (loop -> LOOP LLLAVE metodo RLLAVE .)
    WHILE           reduce using rule 92 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RETURN          reduce using rule 92 (loop -> LOOP LLLAVE metodo RLLAVE .)


state 133

    (111) ifblock -> IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 185


state 134

    (116) ifcondicion -> LPAREN comparacion RPAREN .
    (117) ifcondicion -> LPAREN comparacion RPAREN . signoconect ifcondicion
    (82) signoconect -> . DAMPERSAND
    (83) signoconect -> . OR

    LLLAVE          reduce using rule 116 (ifcondicion -> LPAREN comparacion RPAREN .)
    RPAREN          reduce using rule 116 (ifcondicion -> LPAREN comparacion RPAREN .)
    ENDCHAR         reduce using rule 116 (ifcondicion -> LPAREN comparacion RPAREN .)
    DAMPERSAND      shift and go to state 75
    OR              shift and go to state 76

    signoconect                    shift and go to state 186

state 135

    (118) ifcondicion -> LPAREN ifcondicion RPAREN .

    LLLAVE          reduce using rule 118 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    RPAREN          reduce using rule 118 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    ENDCHAR         reduce using rule 118 (ifcondicion -> LPAREN ifcondicion RPAREN .)


state 136

    (112) ifblock -> IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 187


state 137

    (45) comparacion -> boolean signocompar boolean .

    DAMPERSAND      reduce using rule 45 (comparacion -> boolean signocompar boolean .)
    OR              reduce using rule 45 (comparacion -> boolean signocompar boolean .)
    LLLAVE          reduce using rule 45 (comparacion -> boolean signocompar boolean .)
    RPAREN          reduce using rule 45 (comparacion -> boolean signocompar boolean .)
    ENDCHAR         reduce using rule 45 (comparacion -> boolean signocompar boolean .)


state 138

    (35) comparacion -> ID signocompar ID .

    DAMPERSAND      reduce using rule 35 (comparacion -> ID signocompar ID .)
    OR              reduce using rule 35 (comparacion -> ID signocompar ID .)
    LLLAVE          reduce using rule 35 (comparacion -> ID signocompar ID .)
    RPAREN          reduce using rule 35 (comparacion -> ID signocompar ID .)
    ENDCHAR         reduce using rule 35 (comparacion -> ID signocompar ID .)


state 139

    (115) ifcondicion -> comparacion signoconect ifcondicion .

    LLLAVE          reduce using rule 115 (ifcondicion -> comparacion signoconect ifcondicion .)
    RPAREN          reduce using rule 115 (ifcondicion -> comparacion signoconect ifcondicion .)
    ENDCHAR         reduce using rule 115 (ifcondicion -> comparacion signoconect ifcondicion .)


state 140

    (36) comparacion -> IDCHAR signocompar IDCHAR .

    DAMPERSAND      reduce using rule 36 (comparacion -> IDCHAR signocompar IDCHAR .)
    OR              reduce using rule 36 (comparacion -> IDCHAR signocompar IDCHAR .)
    LLLAVE          reduce using rule 36 (comparacion -> IDCHAR signocompar IDCHAR .)
    RPAREN          reduce using rule 36 (comparacion -> IDCHAR signocompar IDCHAR .)
    ENDCHAR         reduce using rule 36 (comparacion -> IDCHAR signocompar IDCHAR .)


state 141

    (37) comparacion -> IDSTRING signocompar IDSTRING .

    DAMPERSAND      reduce using rule 37 (comparacion -> IDSTRING signocompar IDSTRING .)
    OR              reduce using rule 37 (comparacion -> IDSTRING signocompar IDSTRING .)
    LLLAVE          reduce using rule 37 (comparacion -> IDSTRING signocompar IDSTRING .)
    RPAREN          reduce using rule 37 (comparacion -> IDSTRING signocompar IDSTRING .)
    ENDCHAR         reduce using rule 37 (comparacion -> IDSTRING signocompar IDSTRING .)


state 142

    (39) comparacion -> INTTYPE signocompar INTTYPE .

    DAMPERSAND      reduce using rule 39 (comparacion -> INTTYPE signocompar INTTYPE .)
    OR              reduce using rule 39 (comparacion -> INTTYPE signocompar INTTYPE .)
    LLLAVE          reduce using rule 39 (comparacion -> INTTYPE signocompar INTTYPE .)
    RPAREN          reduce using rule 39 (comparacion -> INTTYPE signocompar INTTYPE .)
    ENDCHAR         reduce using rule 39 (comparacion -> INTTYPE signocompar INTTYPE .)


state 143

    (40) comparacion -> NINTTYPE signocompar NINTTYPE .

    DAMPERSAND      reduce using rule 40 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    OR              reduce using rule 40 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    LLLAVE          reduce using rule 40 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    RPAREN          reduce using rule 40 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    ENDCHAR         reduce using rule 40 (comparacion -> NINTTYPE signocompar NINTTYPE .)


state 144

    (41) comparacion -> FLOATTYPE signocompar FLOATTYPE .

    DAMPERSAND      reduce using rule 41 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    OR              reduce using rule 41 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    LLLAVE          reduce using rule 41 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    RPAREN          reduce using rule 41 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    ENDCHAR         reduce using rule 41 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)


state 145

    (89) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN . RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN . RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    RPAREN          shift and go to state 188


state 146

    (46) while -> WHILE ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 189


state 147

    (109) elseifblock -> ifblock ELSE IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 190


state 148

    (110) elseifblock -> ifblock ELSE IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . vectorpush
    (14) metodo -> . llpushfront
    (15) metodo -> . llpopback
    (16) metodo -> . sumaint
    (17) metodo -> . entrada
    (18) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> . LET ID IGUAL valor ENDCHAR
    (20) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (32) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (64) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (101) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (100) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (92) loop -> . LOOP LLLAVE metodo RLLAVE
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (107) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (33) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> . ID PLUS ID
    (89) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (46) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 191
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 149

    (106) elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 106 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 106 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 106 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 106 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 106 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 106 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 106 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 106 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 106 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 106 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 106 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)


state 150

    (4) cuerpof -> metodo cuerpof .

    RLLAVE          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    RETURN          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    ID              reduce using rule 4 (cuerpof -> metodo cuerpof .)


state 151

    (107) elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 107 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 107 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 107 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 107 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 107 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 107 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 107 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 107 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 107 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 107 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 107 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)


state 152

    (95) params -> ID COLON . datatype
    (96) params -> ID COLON . datatype COMA params
    (48) datatype -> . intsize
    (49) datatype -> . uintsize
    (50) datatype -> . floatsize
    (51) datatype -> . strsize
    (52) datatype -> . STRING
    (53) datatype -> . BOOL
    (65) intsize -> . INT8
    (66) intsize -> . INT16
    (67) intsize -> . INT32
    (68) intsize -> . INT64
    (69) intsize -> . INT128
    (84) uintsize -> . UINT8
    (85) uintsize -> . UINT16
    (86) uintsize -> . UINT32
    (87) uintsize -> . UINT64
    (88) uintsize -> . UINT128
    (80) floatsize -> . FLOAT32
    (81) floatsize -> . FLOAT64
    (93) strsize -> . AMPERSAND COMILLA STATIC STR
    (94) strsize -> . AMPERSAND STR

    STRING          shift and go to state 197
    BOOL            shift and go to state 198
    INT8            shift and go to state 122
    INT16           shift and go to state 123
    INT32           shift and go to state 199
    INT64           shift and go to state 200
    INT128          shift and go to state 124
    UINT8           shift and go to state 126
    UINT16          shift and go to state 127
    UINT32          shift and go to state 128
    UINT64          shift and go to state 129
    UINT128         shift and go to state 130
    FLOAT32         shift and go to state 201
    FLOAT64         shift and go to state 202
    AMPERSAND       shift and go to state 125

    datatype                       shift and go to state 192
    intsize                        shift and go to state 193
    uintsize                       shift and go to state 194
    floatsize                      shift and go to state 195
    strsize                        shift and go to state 196

state 153

    (99) funcion -> FN ID LPAREN params RPAREN . LLLAVE metodo RLLAVE
    (119) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    LLLAVE          shift and go to state 203
    ARROWOPT        shift and go to state 204


state 154

    (33) vectorpush -> ID POINT PUSH LPAREN INTTYPE . RPAREN ENDCHAR

    RPAREN          shift and go to state 205


state 155

    (71) llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE . RPAREN ENDCHAR

    RPAREN          shift and go to state 206


state 156

    (91) llpopback -> ID POINT POP_BACK LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 207


state 157

    (5) asignacion -> LET MUT ID IGUAL valor . ENDCHAR

    ENDCHAR         shift and go to state 208


state 158

    (6) asignacion -> LET MUT ID IGUAL estructuras . ENDCHAR

    ENDCHAR         shift and go to state 209


state 159

    (31) asignacion -> LET MUT ID IGUAL VEC . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 210


state 160

    (64) asignacion -> LET MUT ID IGUAL LINKEDLIST . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (70) linkedlist -> LINKEDLIST . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 211


state 161

    (42) estructuras -> linkedlist .

    ENDCHAR         reduce using rule 42 (estructuras -> linkedlist .)


state 162

    (43) estructuras -> hashmap .

    ENDCHAR         reduce using rule 43 (estructuras -> hashmap .)


state 163

    (54) hashmap -> HASHMAP . DOSDOBLEPUNTOS NEW LPAREN RPAREN

    DOSDOBLEPUNTOS  shift and go to state 212


state 164

    (74) conectores -> ID signoconect . ID

    ID              shift and go to state 213


state 165

    (19) asignacion -> LET ID IGUAL valor ENDCHAR .

    $end            reduce using rule 19 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    RLLAVE          reduce using rule 19 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    LET             reduce using rule 19 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    CONST           reduce using rule 19 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    PRINTLN         reduce using rule 19 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    LOOP            reduce using rule 19 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    IF              reduce using rule 19 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    ID              reduce using rule 19 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    IO              reduce using rule 19 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    WHILE           reduce using rule 19 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    RETURN          reduce using rule 19 (asignacion -> LET ID IGUAL valor ENDCHAR .)


state 166

    (55) expresion -> valornumerico signo . valornumerico
    (60) valornumerico -> . NINTTYPE
    (61) valornumerico -> . INTTYPE
    (62) valornumerico -> . FLOATTYPE
    (63) valornumerico -> . NFLOATTYPE

    NINTTYPE        shift and go to state 215
    INTTYPE         shift and go to state 216
    FLOATTYPE       shift and go to state 217
    NFLOATTYPE      shift and go to state 111

    valornumerico                  shift and go to state 214

state 167

    (75) signo -> PLUS .

    NINTTYPE        reduce using rule 75 (signo -> PLUS .)
    INTTYPE         reduce using rule 75 (signo -> PLUS .)
    FLOATTYPE       reduce using rule 75 (signo -> PLUS .)
    NFLOATTYPE      reduce using rule 75 (signo -> PLUS .)


state 168

    (76) signo -> TIMES .

    NINTTYPE        reduce using rule 76 (signo -> TIMES .)
    INTTYPE         reduce using rule 76 (signo -> TIMES .)
    FLOATTYPE       reduce using rule 76 (signo -> TIMES .)
    NFLOATTYPE      reduce using rule 76 (signo -> TIMES .)


state 169

    (77) signo -> MINUS .

    NINTTYPE        reduce using rule 77 (signo -> MINUS .)
    INTTYPE         reduce using rule 77 (signo -> MINUS .)
    FLOATTYPE       reduce using rule 77 (signo -> MINUS .)
    NFLOATTYPE      reduce using rule 77 (signo -> MINUS .)


state 170

    (78) signo -> PORCENTAJE .

    NINTTYPE        reduce using rule 78 (signo -> PORCENTAJE .)
    INTTYPE         reduce using rule 78 (signo -> PORCENTAJE .)
    FLOATTYPE       reduce using rule 78 (signo -> PORCENTAJE .)
    NFLOATTYPE      reduce using rule 78 (signo -> PORCENTAJE .)


state 171

    (79) signo -> DIVIDE .

    NINTTYPE        reduce using rule 79 (signo -> DIVIDE .)
    INTTYPE         reduce using rule 79 (signo -> DIVIDE .)
    FLOATTYPE       reduce using rule 79 (signo -> DIVIDE .)
    NFLOATTYPE      reduce using rule 79 (signo -> DIVIDE .)


state 172

    (72) conectores -> boolean signoconect . boolean
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    boolean                        shift and go to state 218

state 173

    (73) conectores -> EXCLAM boolean .

    ENDCHAR         reduce using rule 73 (conectores -> EXCLAM boolean .)


state 174

    (20) asignacion -> CONST ID COLON intsize IGUAL . INTTYPE ENDCHAR
    (21) asignacion -> CONST ID COLON intsize IGUAL . NINTTYPE ENDCHAR

    INTTYPE         shift and go to state 219
    NINTTYPE        shift and go to state 220


state 175

    (32) asignacion -> CONST ID COLON strsize IGUAL . IDSTRING ENDCHAR

    IDSTRING        shift and go to state 221


state 176

    (34) asignacion -> CONST ID COLON STRING IGUAL . STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> CONST ID COLON STRING IGUAL . IDSTRING ENDCHAR

    STRING          shift and go to state 222
    IDSTRING        shift and go to state 223


state 177

    (44) asignacion -> CONST ID COLON BOOL IGUAL . boolean ENDCHAR
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    boolean                        shift and go to state 224

state 178

    (47) asignacion -> CONST ID COLON CHAR IGUAL . IDCHAR ENDCHAR

    IDCHAR          shift and go to state 225


state 179

    (101) asignacion -> CONST ID COLON uintsize IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 226


state 180

    (105) asignacion -> CONST ID COLON INT32 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 227


state 181

    (108) asignacion -> CONST ID COLON INT64 IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 228


state 182

    (93) strsize -> AMPERSAND COMILLA . STATIC STR

    STATIC          shift and go to state 229


state 183

    (94) strsize -> AMPERSAND STR .

    IGUAL           reduce using rule 94 (strsize -> AMPERSAND STR .)
    COMA            reduce using rule 94 (strsize -> AMPERSAND STR .)
    RPAREN          reduce using rule 94 (strsize -> AMPERSAND STR .)
    LLLAVE          reduce using rule 94 (strsize -> AMPERSAND STR .)


state 184

    (100) impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 100 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 100 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 100 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 100 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 100 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 100 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 100 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 100 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 100 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 100 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 100 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)


state 185

    (111) ifblock -> IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . vectorpush
    (14) metodo -> . llpushfront
    (15) metodo -> . llpopback
    (16) metodo -> . sumaint
    (17) metodo -> . entrada
    (18) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> . LET ID IGUAL valor ENDCHAR
    (20) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (32) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (64) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (101) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (100) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (92) loop -> . LOOP LLLAVE metodo RLLAVE
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (107) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (33) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> . ID PLUS ID
    (89) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (46) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    cuerpof                        shift and go to state 230
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 186

    (117) ifcondicion -> LPAREN comparacion RPAREN signoconect . ifcondicion
    (114) ifcondicion -> . comparacion
    (115) ifcondicion -> . comparacion signoconect ifcondicion
    (116) ifcondicion -> . LPAREN comparacion RPAREN
    (117) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (118) ifcondicion -> . LPAREN ifcondicion RPAREN
    (35) comparacion -> . ID signocompar ID
    (36) comparacion -> . IDCHAR signocompar IDCHAR
    (37) comparacion -> . IDSTRING signocompar IDSTRING
    (39) comparacion -> . INTTYPE signocompar INTTYPE
    (40) comparacion -> . NINTTYPE signocompar NINTTYPE
    (41) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (45) comparacion -> . boolean signocompar boolean
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE

    LPAREN          shift and go to state 50
    ID              shift and go to state 85
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    comparacion                    shift and go to state 40
    ifcondicion                    shift and go to state 231
    boolean                        shift and go to state 86

state 187

    (112) ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)


state 188

    (89) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN . POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN . POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    POINT           shift and go to state 232


state 189

    (46) while -> WHILE ifparams LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 46 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 46 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 46 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 46 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 46 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 46 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 46 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 46 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 46 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 46 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 46 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)


state 190

    (109) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 233


state 191

    (110) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 234


state 192

    (95) params -> ID COLON datatype .
    (96) params -> ID COLON datatype . COMA params

    RPAREN          reduce using rule 95 (params -> ID COLON datatype .)
    COMA            shift and go to state 235


state 193

    (48) datatype -> intsize .

    COMA            reduce using rule 48 (datatype -> intsize .)
    RPAREN          reduce using rule 48 (datatype -> intsize .)
    LLLAVE          reduce using rule 48 (datatype -> intsize .)


state 194

    (49) datatype -> uintsize .

    COMA            reduce using rule 49 (datatype -> uintsize .)
    RPAREN          reduce using rule 49 (datatype -> uintsize .)
    LLLAVE          reduce using rule 49 (datatype -> uintsize .)


state 195

    (50) datatype -> floatsize .

    COMA            reduce using rule 50 (datatype -> floatsize .)
    RPAREN          reduce using rule 50 (datatype -> floatsize .)
    LLLAVE          reduce using rule 50 (datatype -> floatsize .)


state 196

    (51) datatype -> strsize .

    COMA            reduce using rule 51 (datatype -> strsize .)
    RPAREN          reduce using rule 51 (datatype -> strsize .)
    LLLAVE          reduce using rule 51 (datatype -> strsize .)


state 197

    (52) datatype -> STRING .

    COMA            reduce using rule 52 (datatype -> STRING .)
    RPAREN          reduce using rule 52 (datatype -> STRING .)
    LLLAVE          reduce using rule 52 (datatype -> STRING .)


state 198

    (53) datatype -> BOOL .

    COMA            reduce using rule 53 (datatype -> BOOL .)
    RPAREN          reduce using rule 53 (datatype -> BOOL .)
    LLLAVE          reduce using rule 53 (datatype -> BOOL .)


state 199

    (67) intsize -> INT32 .

    COMA            reduce using rule 67 (intsize -> INT32 .)
    RPAREN          reduce using rule 67 (intsize -> INT32 .)
    LLLAVE          reduce using rule 67 (intsize -> INT32 .)


state 200

    (68) intsize -> INT64 .

    COMA            reduce using rule 68 (intsize -> INT64 .)
    RPAREN          reduce using rule 68 (intsize -> INT64 .)
    LLLAVE          reduce using rule 68 (intsize -> INT64 .)


state 201

    (80) floatsize -> FLOAT32 .

    COMA            reduce using rule 80 (floatsize -> FLOAT32 .)
    RPAREN          reduce using rule 80 (floatsize -> FLOAT32 .)
    LLLAVE          reduce using rule 80 (floatsize -> FLOAT32 .)


state 202

    (81) floatsize -> FLOAT64 .

    COMA            reduce using rule 81 (floatsize -> FLOAT64 .)
    RPAREN          reduce using rule 81 (floatsize -> FLOAT64 .)
    LLLAVE          reduce using rule 81 (floatsize -> FLOAT64 .)


state 203

    (99) funcion -> FN ID LPAREN params RPAREN LLLAVE . metodo RLLAVE
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . vectorpush
    (14) metodo -> . llpushfront
    (15) metodo -> . llpopback
    (16) metodo -> . sumaint
    (17) metodo -> . entrada
    (18) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> . LET ID IGUAL valor ENDCHAR
    (20) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (32) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (64) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (101) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (100) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (92) loop -> . LOOP LLLAVE metodo RLLAVE
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (107) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (33) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> . ID PLUS ID
    (89) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (46) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    metodo                         shift and go to state 236
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 204

    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof ID RLLAVE
    (48) datatype -> . intsize
    (49) datatype -> . uintsize
    (50) datatype -> . floatsize
    (51) datatype -> . strsize
    (52) datatype -> . STRING
    (53) datatype -> . BOOL
    (65) intsize -> . INT8
    (66) intsize -> . INT16
    (67) intsize -> . INT32
    (68) intsize -> . INT64
    (69) intsize -> . INT128
    (84) uintsize -> . UINT8
    (85) uintsize -> . UINT16
    (86) uintsize -> . UINT32
    (87) uintsize -> . UINT64
    (88) uintsize -> . UINT128
    (80) floatsize -> . FLOAT32
    (81) floatsize -> . FLOAT64
    (93) strsize -> . AMPERSAND COMILLA STATIC STR
    (94) strsize -> . AMPERSAND STR

    STRING          shift and go to state 197
    BOOL            shift and go to state 198
    INT8            shift and go to state 122
    INT16           shift and go to state 123
    INT32           shift and go to state 199
    INT64           shift and go to state 200
    INT128          shift and go to state 124
    UINT8           shift and go to state 126
    UINT16          shift and go to state 127
    UINT32          shift and go to state 128
    UINT64          shift and go to state 129
    UINT128         shift and go to state 130
    FLOAT32         shift and go to state 201
    FLOAT64         shift and go to state 202
    AMPERSAND       shift and go to state 125

    datatype                       shift and go to state 237
    intsize                        shift and go to state 193
    uintsize                       shift and go to state 194
    floatsize                      shift and go to state 195
    strsize                        shift and go to state 196

state 205

    (33) vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 238


state 206

    (71) llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 239


state 207

    (91) llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 91 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 91 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 91 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 91 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 91 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 91 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 91 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 91 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    IO              reduce using rule 91 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    WHILE           reduce using rule 91 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 91 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)


state 208

    (5) asignacion -> LET MUT ID IGUAL valor ENDCHAR .

    $end            reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    RLLAVE          reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    LET             reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    CONST           reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    PRINTLN         reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    LOOP            reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    IF              reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    ID              reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    IO              reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    WHILE           reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    RETURN          reduce using rule 5 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)


state 209

    (6) asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .

    $end            reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RLLAVE          reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LET             reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    CONST           reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    PRINTLN         reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LOOP            reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IF              reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    ID              reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IO              reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    WHILE           reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RETURN          reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)


state 210

    (31) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR

    NEW             shift and go to state 240


state 211

    (64) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR
    (70) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR

    NEW             shift and go to state 241


state 212

    (54) hashmap -> HASHMAP DOSDOBLEPUNTOS . NEW LPAREN RPAREN

    NEW             shift and go to state 242


state 213

    (74) conectores -> ID signoconect ID .

    ENDCHAR         reduce using rule 74 (conectores -> ID signoconect ID .)


state 214

    (55) expresion -> valornumerico signo valornumerico .

    ENDCHAR         reduce using rule 55 (expresion -> valornumerico signo valornumerico .)


state 215

    (60) valornumerico -> NINTTYPE .

    ENDCHAR         reduce using rule 60 (valornumerico -> NINTTYPE .)


state 216

    (61) valornumerico -> INTTYPE .

    ENDCHAR         reduce using rule 61 (valornumerico -> INTTYPE .)


state 217

    (62) valornumerico -> FLOATTYPE .

    ENDCHAR         reduce using rule 62 (valornumerico -> FLOATTYPE .)


state 218

    (72) conectores -> boolean signoconect boolean .

    ENDCHAR         reduce using rule 72 (conectores -> boolean signoconect boolean .)


state 219

    (20) asignacion -> CONST ID COLON intsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 243


state 220

    (21) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 244


state 221

    (32) asignacion -> CONST ID COLON strsize IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 245


state 222

    (34) asignacion -> CONST ID COLON STRING IGUAL STRING . DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 246


state 223

    (38) asignacion -> CONST ID COLON STRING IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 247


state 224

    (44) asignacion -> CONST ID COLON BOOL IGUAL boolean . ENDCHAR

    ENDCHAR         shift and go to state 248


state 225

    (47) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR . ENDCHAR

    ENDCHAR         shift and go to state 249


state 226

    (101) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 250


state 227

    (105) asignacion -> CONST ID COLON INT32 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 251


state 228

    (108) asignacion -> CONST ID COLON INT64 IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 252


state 229

    (93) strsize -> AMPERSAND COMILLA STATIC . STR

    STR             shift and go to state 253


state 230

    (111) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 254


state 231

    (117) ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .

    LLLAVE          reduce using rule 117 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    RPAREN          reduce using rule 117 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    ENDCHAR         reduce using rule 117 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)


state 232

    (89) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT . READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT . READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    READLINE        shift and go to state 255


state 233

    (109) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . vectorpush
    (14) metodo -> . llpushfront
    (15) metodo -> . llpopback
    (16) metodo -> . sumaint
    (17) metodo -> . entrada
    (18) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> . LET ID IGUAL valor ENDCHAR
    (20) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (32) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (64) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (101) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (100) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (92) loop -> . LOOP LLLAVE metodo RLLAVE
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (107) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (33) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> . ID PLUS ID
    (89) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (46) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 256
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 234

    (110) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)


state 235

    (96) params -> ID COLON datatype COMA . params
    (95) params -> . ID COLON datatype
    (96) params -> . ID COLON datatype COMA params

    ID              shift and go to state 92

    params                         shift and go to state 257

state 236

    (99) funcion -> FN ID LPAREN params RPAREN LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 258


state 237

    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof ID RLLAVE

    LLLAVE          shift and go to state 259


state 238

    (33) vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .

    $end            reduce using rule 33 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 33 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    LET             reduce using rule 33 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    CONST           reduce using rule 33 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 33 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    LOOP            reduce using rule 33 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    IF              reduce using rule 33 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    ID              reduce using rule 33 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    IO              reduce using rule 33 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    WHILE           reduce using rule 33 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    RETURN          reduce using rule 33 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)


state 239

    (71) llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .

    $end            reduce using rule 71 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 71 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    LET             reduce using rule 71 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    CONST           reduce using rule 71 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 71 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    LOOP            reduce using rule 71 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    IF              reduce using rule 71 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    ID              reduce using rule 71 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    IO              reduce using rule 71 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    WHILE           reduce using rule 71 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    RETURN          reduce using rule 71 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)


state 240

    (31) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 260


state 241

    (64) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR
    (70) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 261


state 242

    (54) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW . LPAREN RPAREN

    LPAREN          shift and go to state 262


state 243

    (20) asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 20 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 20 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 20 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 20 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 20 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 20 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 20 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 20 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 20 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 20 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 20 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)


state 244

    (21) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .

    $end            reduce using rule 21 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 21 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LET             reduce using rule 21 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    CONST           reduce using rule 21 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 21 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LOOP            reduce using rule 21 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IF              reduce using rule 21 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    ID              reduce using rule 21 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IO              reduce using rule 21 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    WHILE           reduce using rule 21 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RETURN          reduce using rule 21 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)


state 245

    (32) asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 32 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 32 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 32 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 32 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 32 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 32 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 32 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 32 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IO              reduce using rule 32 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    WHILE           reduce using rule 32 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 32 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)


state 246

    (34) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS . FROM LPAREN IDSTRING RPAREN ENDCHAR

    FROM            shift and go to state 263


state 247

    (38) asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 38 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 38 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 38 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 38 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 38 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 38 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 38 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 38 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IO              reduce using rule 38 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    WHILE           reduce using rule 38 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 38 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)


state 248

    (44) asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .

    $end            reduce using rule 44 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RLLAVE          reduce using rule 44 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LET             reduce using rule 44 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    CONST           reduce using rule 44 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    PRINTLN         reduce using rule 44 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LOOP            reduce using rule 44 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IF              reduce using rule 44 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    ID              reduce using rule 44 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IO              reduce using rule 44 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    WHILE           reduce using rule 44 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RETURN          reduce using rule 44 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)


state 249

    (47) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .

    $end            reduce using rule 47 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RLLAVE          reduce using rule 47 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LET             reduce using rule 47 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    CONST           reduce using rule 47 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    PRINTLN         reduce using rule 47 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LOOP            reduce using rule 47 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IF              reduce using rule 47 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    ID              reduce using rule 47 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IO              reduce using rule 47 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    WHILE           reduce using rule 47 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RETURN          reduce using rule 47 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)


state 250

    (101) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 101 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 101 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 101 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 101 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 101 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 101 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 101 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 101 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 101 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 101 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 101 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)


state 251

    (105) asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 105 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 105 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 105 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 105 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 105 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 105 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 105 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 105 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 105 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 105 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 105 (asignacion -> CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR .)


state 252

    (108) asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 108 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 108 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 108 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 108 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 108 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 108 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 108 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 108 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 108 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 108 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 108 (asignacion -> CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR .)


state 253

    (93) strsize -> AMPERSAND COMILLA STATIC STR .

    IGUAL           reduce using rule 93 (strsize -> AMPERSAND COMILLA STATIC STR .)
    COMA            reduce using rule 93 (strsize -> AMPERSAND COMILLA STATIC STR .)
    RPAREN          reduce using rule 93 (strsize -> AMPERSAND COMILLA STATIC STR .)
    LLLAVE          reduce using rule 93 (strsize -> AMPERSAND COMILLA STATIC STR .)


state 254

    (111) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 255

    (89) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE . LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE . LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 264


state 256

    (109) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 265


state 257

    (96) params -> ID COLON datatype COMA params .

    RPAREN          reduce using rule 96 (params -> ID COLON datatype COMA params .)


state 258

    (99) funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE .

    $end            reduce using rule 99 (funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE .)


state 259

    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof ID RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . loop
    (10) metodo -> . ifblock
    (11) metodo -> . elseifblock
    (12) metodo -> . elseblock
    (13) metodo -> . vectorpush
    (14) metodo -> . llpushfront
    (15) metodo -> . llpopback
    (16) metodo -> . sumaint
    (17) metodo -> . entrada
    (18) metodo -> . while
    (5) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (19) asignacion -> . LET ID IGUAL valor ENDCHAR
    (20) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (21) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (31) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (32) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (34) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (38) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (44) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (47) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (64) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (101) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (105) asignacion -> . CONST ID COLON INT32 IGUAL INTTYPE ENDCHAR
    (108) asignacion -> . CONST ID COLON INT64 IGUAL INTTYPE ENDCHAR
    (100) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (92) loop -> . LOOP LLLAVE metodo RLLAVE
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (106) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (107) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (33) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (71) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (91) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (113) sumaint -> . ID PLUS ID
    (89) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (46) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 18
    CONST           shift and go to state 19
    PRINTLN         shift and go to state 20
    LOOP            shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 17
    IO              shift and go to state 23
    WHILE           shift and go to state 24

    cuerpof                        shift and go to state 266
    metodo                         shift and go to state 90
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    sumaint                        shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15

state 260

    (31) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 267


state 261

    (64) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR
    (70) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 268


state 262

    (54) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN . RPAREN

    RPAREN          shift and go to state 269


state 263

    (34) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 270


state 264

    (89) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN . AMPERSAND MUT ID RPAREN ENDCHAR
    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN . AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    AMPERSAND       shift and go to state 271


state 265

    (109) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 266

    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . RETURN ifparams ENDCHAR RLLAVE
    (120) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . ID RLLAVE

    RETURN          shift and go to state 273
    ID              shift and go to state 272


state 267

    (31) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 274


state 268

    (64) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR
    (70) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 275


state 269

    (54) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .

    ENDCHAR         reduce using rule 54 (hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .)


state 270

    (34) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 276


state 271

    (89) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND . MUT ID RPAREN ENDCHAR
    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND . MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    MUT             shift and go to state 277


state 272

    (120) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID . RLLAVE

    RLLAVE          shift and go to state 278


state 273

    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN . ifparams ENDCHAR RLLAVE
    (102) ifparams -> . ifcondicion
    (103) ifparams -> . boolean
    (104) ifparams -> . ID
    (114) ifcondicion -> . comparacion
    (115) ifcondicion -> . comparacion signoconect ifcondicion
    (116) ifcondicion -> . LPAREN comparacion RPAREN
    (117) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (118) ifcondicion -> . LPAREN ifcondicion RPAREN
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (35) comparacion -> . ID signocompar ID
    (36) comparacion -> . IDCHAR signocompar IDCHAR
    (37) comparacion -> . IDSTRING signocompar IDSTRING
    (39) comparacion -> . INTTYPE signocompar INTTYPE
    (40) comparacion -> . NINTTYPE signocompar NINTTYPE
    (41) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (45) comparacion -> . boolean signocompar boolean

    ID              shift and go to state 39
    LPAREN          shift and go to state 50
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDCHAR          shift and go to state 43
    IDSTRING        shift and go to state 44
    INTTYPE         shift and go to state 45
    NINTTYPE        shift and go to state 46
    FLOATTYPE       shift and go to state 47

    ifparams                       shift and go to state 279
    ifcondicion                    shift and go to state 37
    boolean                        shift and go to state 38
    comparacion                    shift and go to state 40

state 274

    (31) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IO              reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    WHILE           reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 31 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)


state 275

    (64) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .
    (70) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 64 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 64 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 64 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 64 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 64 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 64 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 64 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 64 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IO              reduce using rule 64 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    WHILE           reduce using rule 64 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 64 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ENDCHAR         reduce using rule 70 (linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)


state 276

    (34) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 280


state 277

    (89) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT . ID RPAREN ENDCHAR
    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT . ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    ID              shift and go to state 281


state 278

    (120) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .

    $end            reduce using rule 120 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .)


state 279

    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams . ENDCHAR RLLAVE

    ENDCHAR         shift and go to state 282


state 280

    (34) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 283


state 281

    (89) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID . RPAREN ENDCHAR
    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID . RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    RPAREN          shift and go to state 284


state 282

    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR . RLLAVE

    RLLAVE          shift and go to state 285


state 283

    (34) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 34 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 34 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 34 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 34 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 34 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 34 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 34 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 34 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 34 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 34 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 34 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)


state 284

    (89) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN . ENDCHAR
    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN . POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    ENDCHAR         shift and go to state 287
    POINT           shift and go to state 286


state 285

    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .

    $end            reduce using rule 119 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .)


state 286

    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT . EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    EXPECT          shift and go to state 288


state 287

    (89) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .

    $end            reduce using rule 89 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 89 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    LET             reduce using rule 89 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    CONST           reduce using rule 89 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 89 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    LOOP            reduce using rule 89 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    IF              reduce using rule 89 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    ID              reduce using rule 89 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    IO              reduce using rule 89 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    WHILE           reduce using rule 89 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    RETURN          reduce using rule 89 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)


state 288

    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 289


state 289

    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 290


state 290

    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 291


state 291

    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 292


state 292

    (90) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 90 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 90 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 90 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 90 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 90 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 90 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 90 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 90 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 90 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 90 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 90 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 65 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 66 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 121 resolved as shift
