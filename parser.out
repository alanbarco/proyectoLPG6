Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASYNC
    AWAIT
    BREAK
    CONTINUE
    DIVASIGN
    DOLAR
    DYN
    ENUM
    ERR
    FINAL
    FOR
    FORMAT
    IMPL
    IN
    INPUT
    INTERRO
    LCOR
    MAINFN
    MATCH
    MOVE
    MULTIASIGN
    OK
    PARSE
    POINTERSIZE
    PRIV
    PUB
    RCOR
    REF
    RESTAASIGN
    SELF
    SIZEOF
    STRUCT
    SUMAASIGN
    SUPER
    TYPE
    TYPEOF
    UNSAFE
    UNWRAPOR
    USE
    WHERE

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> metodo
Rule 2     cuerpo -> funcion
Rule 3     cuerpof -> metodo
Rule 4     cuerpof -> metodo cuerpof
Rule 5     metodo -> asignacion
Rule 6     metodo -> impresion
Rule 7     metodo -> loop
Rule 8     metodo -> ifblock
Rule 9     metodo -> elseifblock
Rule 10    metodo -> elseblock
Rule 11    metodo -> vectorpush
Rule 12    metodo -> llpushfront
Rule 13    metodo -> llpopback
Rule 14    metodo -> entrada
Rule 15    metodo -> while
Rule 16    valor -> valornumerico
Rule 17    valor -> TRUE
Rule 18    valor -> FALSE
Rule 19    valor -> ID
Rule 20    valor -> IDCHAR
Rule 21    valor -> IDSTRING
Rule 22    valor -> expresion
Rule 23    valor -> conectores
Rule 24    valor -> comparacion
Rule 25    datatype -> intsize
Rule 26    datatype -> uintsize
Rule 27    datatype -> floatsize
Rule 28    datatype -> strsize
Rule 29    datatype -> STRING
Rule 30    datatype -> BOOL
Rule 31    estructuras -> linkedlist
Rule 32    estructuras -> hashmap
Rule 33    comparacion -> ID signocompar ID
Rule 34    comparacion -> IDCHAR signocompar IDCHAR
Rule 35    comparacion -> IDSTRING signocompar IDSTRING
Rule 36    intsize -> INT8
Rule 37    intsize -> INT16
Rule 38    intsize -> INT32
Rule 39    intsize -> INT64
Rule 40    intsize -> INT128
Rule 41    asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 42    comparacion -> INTTYPE signocompar INTTYPE
Rule 43    comparacion -> NINTTYPE signocompar NINTTYPE
Rule 44    comparacion -> FLOATTYPE signocompar FLOATTYPE
Rule 45    while -> WHILE ifparams LLLAVE cuerpof RLLAVE
Rule 46    floatsize -> FLOAT32
Rule 47    floatsize -> FLOAT64
Rule 48    comparacion -> boolean signocompar boolean
Rule 49    asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
Rule 50    asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
Rule 51    hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
Rule 52    uintsize -> UINT8
Rule 53    uintsize -> UINT16
Rule 54    uintsize -> UINT32
Rule 55    uintsize -> UINT64
Rule 56    uintsize -> UINT128
Rule 57    expresion -> valornumerico signo valornumerico
Rule 58    valornumerico -> NINTTYPE
Rule 59    valornumerico -> INTTYPE
Rule 60    valornumerico -> FLOATTYPE
Rule 61    valornumerico -> NFLOATTYPE
Rule 62    asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
Rule 63    strsize -> AMPERSAND COMILLA STATIC STR
Rule 64    strsize -> AMPERSAND STR
Rule 65    signocompar -> MAYORQUE
Rule 66    signocompar -> MENORQUE
Rule 67    signocompar -> DIFERENTE
Rule 68    signocompar -> IDENTICO
Rule 69    boolean -> TRUE
Rule 70    boolean -> FALSE
Rule 71    asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
Rule 72    signo -> PLUS
Rule 73    signo -> TIMES
Rule 74    signo -> MINUS
Rule 75    signo -> PORCENTAJE
Rule 76    signo -> DIVIDE
Rule 77    linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 78    asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
Rule 79    conectores -> boolean signoconect boolean
Rule 80    conectores -> EXCLAM boolean
Rule 81    conectores -> ID signoconect ID
Rule 82    ifparams -> ifcondicion
Rule 83    ifparams -> boolean
Rule 84    ifparams -> ID
Rule 85    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
Rule 86    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
Rule 87    asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
Rule 88    signoconect -> DAMPERSAND
Rule 89    signoconect -> OR
Rule 90    elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE
Rule 91    elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE
Rule 92    asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
Rule 93    loop -> LOOP LLLAVE metodo RLLAVE
Rule 94    elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 95    elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
Rule 96    asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR
Rule 97    params -> ID COLON datatype
Rule 98    params -> ID COLON datatype COMA params
Rule 99    funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE
Rule 100   ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 101   ifblock -> IF ifparams LLLAVE cuerpof RLLAVE
Rule 102   asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
Rule 103   impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
Rule 104   ifcondicion -> comparacion
Rule 105   ifcondicion -> comparacion signoconect ifcondicion
Rule 106   ifcondicion -> LPAREN comparacion RPAREN
Rule 107   ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion
Rule 108   ifcondicion -> LPAREN ifcondicion RPAREN
Rule 109   vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
Rule 110   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
Rule 111   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
Rule 112   asignacion -> LET MUT ID IGUAL valor ENDCHAR
Rule 113   asignacion -> LET MUT ID IGUAL estructuras ENDCHAR
Rule 114   asignacion -> LET ID IGUAL valor ENDCHAR
Rule 115   asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 116   llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
Rule 117   llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR

Terminals, with rules where they appear

AMPERSAND            : 63 64 85 86
ARROWOPT             : 110 111
ASYNC                : 
AWAIT                : 
BOOL                 : 30 96
BREAK                : 
CHAR                 : 102
COLON                : 49 50 62 71 78 87 92 96 97 98 102
COMA                 : 98
COMILLA              : 63
CONST                : 49 50 62 71 78 87 92 96 102
CONTINUE             : 
DAMPERSAND           : 88
DIFERENTE            : 67
DIVASIGN             : 
DIVIDE               : 76
DOLAR                : 
DOSDOBLEPUNTOS       : 41 51 77 85 86 87 115
DYN                  : 
ELSE                 : 90 91 94 95
ENDCHAR              : 41 49 50 62 71 77 78 85 86 87 92 96 102 103 109 110 112 113 114 115 116 117
ENUM                 : 
ERR                  : 
EXCLAM               : 80
EXPECT               : 86
FALSE                : 18 70
FINAL                : 
FLOAT32              : 46
FLOAT64              : 47
FLOATTYPE            : 44 44 60 71
FN                   : 99 110 111
FOR                  : 
FORMAT               : 
FROM                 : 87
HASHMAP              : 51
ID                   : 19 33 33 41 49 50 62 71 78 81 81 84 85 86 87 92 96 97 98 99 102 109 110 111 111 112 113 114 115 116 117
IDCHAR               : 20 34 34 102
IDENTICO             : 68
IDSTRING             : 21 35 35 78 86 87 92 103
IF                   : 94 95 100 101
IGUAL                : 41 49 50 62 71 78 87 92 96 102 112 113 114 115
IMPL                 : 
IN                   : 
INPUT                : 
INT128               : 40
INT16                : 37
INT32                : 38
INT64                : 39
INT8                 : 36
INTERRO              : 
INTTYPE              : 42 42 49 59 62 109 116
IO                   : 85 86
LCOR                 : 
LET                  : 41 112 113 114 115
LINKEDLIST           : 77 115
LLLAVE               : 45 90 91 93 94 95 99 100 101 110 111
LOOP                 : 93
LPAREN               : 41 51 77 85 85 86 86 86 87 94 99 100 103 106 107 108 109 110 111 115 116 117
MAINFN               : 
MATCH                : 
MAYORQUE             : 65
MENORQUE             : 66
MINUS                : 74
MOVE                 : 
MULTIASIGN           : 
MUT                  : 41 85 86 112 113 115
NEW                  : 41 51 77 115
NFLOATTYPE           : 61
NINTTYPE             : 43 43 50 58
OK                   : 
OR                   : 89
PARSE                : 
PLUS                 : 72
POINT                : 85 86 86 109 116 117
POINTERSIZE          : 
POP_BACK             : 117
PORCENTAJE           : 75
PRINTLN              : 103
PRIV                 : 
PUB                  : 
PUSH                 : 109
PUSH_FRONT           : 116
RCOR                 : 
READLINE             : 85 86
REF                  : 
RESTAASIGN           : 
RETURN               : 110
RLLAVE               : 45 90 91 93 94 95 99 100 101 110 111
RPAREN               : 41 51 77 85 85 86 86 86 87 94 99 100 103 106 107 108 109 110 111 115 116 117
SELF                 : 
SIZEOF               : 
STATIC               : 63
STDIN                : 85 86
STR                  : 63 64
STRING               : 29 87 87 92
STRUCT               : 
SUMAASIGN            : 
SUPER                : 
TIMES                : 73
TRUE                 : 17 69
TYPE                 : 
TYPEOF               : 
UINT128              : 56
UINT16               : 53
UINT32               : 54
UINT64               : 55
UINT8                : 52
UNSAFE               : 
UNWRAPOR             : 
USE                  : 
VEC                  : 41
WHERE                : 
WHILE                : 45
error                : 

Nonterminals, with rules where they appear

asignacion           : 5
boolean              : 48 48 79 79 80 83 96
comparacion          : 24 104 105 106 107
conectores           : 23
cuerpo               : 0
cuerpof              : 4 45 90 91 94 95 100 101 110 111
datatype             : 97 98 110 111
elseblock            : 10
elseifblock          : 9 91
entrada              : 14
estructuras          : 113
expresion            : 22
floatsize            : 27 71
funcion              : 2
hashmap              : 32
ifblock              : 8 90 94 95
ifcondicion          : 82 105 107 108
ifparams             : 45 94 95 100 101 110
impresion            : 6
intsize              : 25 49 50
linkedlist           : 31
llpopback            : 13
llpushfront          : 12
loop                 : 7
metodo               : 1 3 4 93 99
params               : 98 99 110 111
signo                : 57
signocompar          : 33 34 35 42 43 44 48
signoconect          : 79 81 105 107
strsize              : 28 78
uintsize             : 26 62
valor                : 112 114
valornumerico        : 16 57 57
vectorpush           : 11
while                : 15

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . metodo
    (2) cuerpo -> . funcion
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . entrada
    (15) metodo -> . while
    (99) funcion -> . FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE
    (110) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (111) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (41) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (49) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (112) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> . LET ID IGUAL valor ENDCHAR
    (115) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (103) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (100) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (94) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (91) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (109) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (85) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (45) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    FN              shift and go to state 15
    LET             shift and go to state 17
    CONST           shift and go to state 18
    PRINTLN         shift and go to state 19
    LOOP            shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 16
    IO              shift and go to state 22
    WHILE           shift and go to state 23

    cuerpo                         shift and go to state 1
    metodo                         shift and go to state 2
    funcion                        shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    entrada                        shift and go to state 13
    while                          shift and go to state 14

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> metodo .

    $end            reduce using rule 1 (cuerpo -> metodo .)


state 3

    (2) cuerpo -> funcion .

    $end            reduce using rule 2 (cuerpo -> funcion .)


state 4

    (5) metodo -> asignacion .

    $end            reduce using rule 5 (metodo -> asignacion .)
    RLLAVE          reduce using rule 5 (metodo -> asignacion .)
    LET             reduce using rule 5 (metodo -> asignacion .)
    CONST           reduce using rule 5 (metodo -> asignacion .)
    PRINTLN         reduce using rule 5 (metodo -> asignacion .)
    LOOP            reduce using rule 5 (metodo -> asignacion .)
    IF              reduce using rule 5 (metodo -> asignacion .)
    ID              reduce using rule 5 (metodo -> asignacion .)
    IO              reduce using rule 5 (metodo -> asignacion .)
    WHILE           reduce using rule 5 (metodo -> asignacion .)
    RETURN          reduce using rule 5 (metodo -> asignacion .)


state 5

    (6) metodo -> impresion .

    $end            reduce using rule 6 (metodo -> impresion .)
    RLLAVE          reduce using rule 6 (metodo -> impresion .)
    LET             reduce using rule 6 (metodo -> impresion .)
    CONST           reduce using rule 6 (metodo -> impresion .)
    PRINTLN         reduce using rule 6 (metodo -> impresion .)
    LOOP            reduce using rule 6 (metodo -> impresion .)
    IF              reduce using rule 6 (metodo -> impresion .)
    ID              reduce using rule 6 (metodo -> impresion .)
    IO              reduce using rule 6 (metodo -> impresion .)
    WHILE           reduce using rule 6 (metodo -> impresion .)
    RETURN          reduce using rule 6 (metodo -> impresion .)


state 6

    (7) metodo -> loop .

    $end            reduce using rule 7 (metodo -> loop .)
    RLLAVE          reduce using rule 7 (metodo -> loop .)
    LET             reduce using rule 7 (metodo -> loop .)
    CONST           reduce using rule 7 (metodo -> loop .)
    PRINTLN         reduce using rule 7 (metodo -> loop .)
    LOOP            reduce using rule 7 (metodo -> loop .)
    IF              reduce using rule 7 (metodo -> loop .)
    ID              reduce using rule 7 (metodo -> loop .)
    IO              reduce using rule 7 (metodo -> loop .)
    WHILE           reduce using rule 7 (metodo -> loop .)
    RETURN          reduce using rule 7 (metodo -> loop .)


state 7

    (8) metodo -> ifblock .
    (94) elseifblock -> ifblock . ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> ifblock . ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> ifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 8 (metodo -> ifblock .)
    RLLAVE          reduce using rule 8 (metodo -> ifblock .)
    LET             reduce using rule 8 (metodo -> ifblock .)
    CONST           reduce using rule 8 (metodo -> ifblock .)
    PRINTLN         reduce using rule 8 (metodo -> ifblock .)
    LOOP            reduce using rule 8 (metodo -> ifblock .)
    IF              reduce using rule 8 (metodo -> ifblock .)
    ID              reduce using rule 8 (metodo -> ifblock .)
    IO              reduce using rule 8 (metodo -> ifblock .)
    WHILE           reduce using rule 8 (metodo -> ifblock .)
    RETURN          reduce using rule 8 (metodo -> ifblock .)
    ELSE            shift and go to state 24


state 8

    (9) metodo -> elseifblock .
    (91) elseblock -> elseifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 9 (metodo -> elseifblock .)
    RLLAVE          reduce using rule 9 (metodo -> elseifblock .)
    LET             reduce using rule 9 (metodo -> elseifblock .)
    CONST           reduce using rule 9 (metodo -> elseifblock .)
    PRINTLN         reduce using rule 9 (metodo -> elseifblock .)
    LOOP            reduce using rule 9 (metodo -> elseifblock .)
    IF              reduce using rule 9 (metodo -> elseifblock .)
    ID              reduce using rule 9 (metodo -> elseifblock .)
    IO              reduce using rule 9 (metodo -> elseifblock .)
    WHILE           reduce using rule 9 (metodo -> elseifblock .)
    RETURN          reduce using rule 9 (metodo -> elseifblock .)
    ELSE            shift and go to state 25


state 9

    (10) metodo -> elseblock .

    $end            reduce using rule 10 (metodo -> elseblock .)
    RLLAVE          reduce using rule 10 (metodo -> elseblock .)
    LET             reduce using rule 10 (metodo -> elseblock .)
    CONST           reduce using rule 10 (metodo -> elseblock .)
    PRINTLN         reduce using rule 10 (metodo -> elseblock .)
    LOOP            reduce using rule 10 (metodo -> elseblock .)
    IF              reduce using rule 10 (metodo -> elseblock .)
    ID              reduce using rule 10 (metodo -> elseblock .)
    IO              reduce using rule 10 (metodo -> elseblock .)
    WHILE           reduce using rule 10 (metodo -> elseblock .)
    RETURN          reduce using rule 10 (metodo -> elseblock .)


state 10

    (11) metodo -> vectorpush .

    $end            reduce using rule 11 (metodo -> vectorpush .)
    RLLAVE          reduce using rule 11 (metodo -> vectorpush .)
    LET             reduce using rule 11 (metodo -> vectorpush .)
    CONST           reduce using rule 11 (metodo -> vectorpush .)
    PRINTLN         reduce using rule 11 (metodo -> vectorpush .)
    LOOP            reduce using rule 11 (metodo -> vectorpush .)
    IF              reduce using rule 11 (metodo -> vectorpush .)
    ID              reduce using rule 11 (metodo -> vectorpush .)
    IO              reduce using rule 11 (metodo -> vectorpush .)
    WHILE           reduce using rule 11 (metodo -> vectorpush .)
    RETURN          reduce using rule 11 (metodo -> vectorpush .)


state 11

    (12) metodo -> llpushfront .

    $end            reduce using rule 12 (metodo -> llpushfront .)
    RLLAVE          reduce using rule 12 (metodo -> llpushfront .)
    LET             reduce using rule 12 (metodo -> llpushfront .)
    CONST           reduce using rule 12 (metodo -> llpushfront .)
    PRINTLN         reduce using rule 12 (metodo -> llpushfront .)
    LOOP            reduce using rule 12 (metodo -> llpushfront .)
    IF              reduce using rule 12 (metodo -> llpushfront .)
    ID              reduce using rule 12 (metodo -> llpushfront .)
    IO              reduce using rule 12 (metodo -> llpushfront .)
    WHILE           reduce using rule 12 (metodo -> llpushfront .)
    RETURN          reduce using rule 12 (metodo -> llpushfront .)


state 12

    (13) metodo -> llpopback .

    $end            reduce using rule 13 (metodo -> llpopback .)
    RLLAVE          reduce using rule 13 (metodo -> llpopback .)
    LET             reduce using rule 13 (metodo -> llpopback .)
    CONST           reduce using rule 13 (metodo -> llpopback .)
    PRINTLN         reduce using rule 13 (metodo -> llpopback .)
    LOOP            reduce using rule 13 (metodo -> llpopback .)
    IF              reduce using rule 13 (metodo -> llpopback .)
    ID              reduce using rule 13 (metodo -> llpopback .)
    IO              reduce using rule 13 (metodo -> llpopback .)
    WHILE           reduce using rule 13 (metodo -> llpopback .)
    RETURN          reduce using rule 13 (metodo -> llpopback .)


state 13

    (14) metodo -> entrada .

    $end            reduce using rule 14 (metodo -> entrada .)
    RLLAVE          reduce using rule 14 (metodo -> entrada .)
    LET             reduce using rule 14 (metodo -> entrada .)
    CONST           reduce using rule 14 (metodo -> entrada .)
    PRINTLN         reduce using rule 14 (metodo -> entrada .)
    LOOP            reduce using rule 14 (metodo -> entrada .)
    IF              reduce using rule 14 (metodo -> entrada .)
    ID              reduce using rule 14 (metodo -> entrada .)
    IO              reduce using rule 14 (metodo -> entrada .)
    WHILE           reduce using rule 14 (metodo -> entrada .)
    RETURN          reduce using rule 14 (metodo -> entrada .)


state 14

    (15) metodo -> while .

    $end            reduce using rule 15 (metodo -> while .)
    RLLAVE          reduce using rule 15 (metodo -> while .)
    LET             reduce using rule 15 (metodo -> while .)
    CONST           reduce using rule 15 (metodo -> while .)
    PRINTLN         reduce using rule 15 (metodo -> while .)
    LOOP            reduce using rule 15 (metodo -> while .)
    IF              reduce using rule 15 (metodo -> while .)
    ID              reduce using rule 15 (metodo -> while .)
    IO              reduce using rule 15 (metodo -> while .)
    WHILE           reduce using rule 15 (metodo -> while .)
    RETURN          reduce using rule 15 (metodo -> while .)


state 15

    (99) funcion -> FN . ID LPAREN params RPAREN LLLAVE metodo RLLAVE
    (110) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (111) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    ID              shift and go to state 26


state 16

    (109) vectorpush -> ID . POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> ID . POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> ID . POINT POP_BACK LPAREN RPAREN ENDCHAR

    POINT           shift and go to state 27


state 17

    (41) asignacion -> LET . MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (112) asignacion -> LET . MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> LET . MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> LET . ID IGUAL valor ENDCHAR
    (115) asignacion -> LET . MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    MUT             shift and go to state 28
    ID              shift and go to state 29


state 18

    (49) asignacion -> CONST . ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> CONST . ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> CONST . ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> CONST . ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> CONST . ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> CONST . ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> CONST . ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> CONST . ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> CONST . ID COLON CHAR IGUAL IDCHAR ENDCHAR

    ID              shift and go to state 30


state 19

    (103) impresion -> PRINTLN . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 31


state 20

    (93) loop -> LOOP . LLLAVE metodo RLLAVE

    LLLAVE          shift and go to state 32


state 21

    (100) ifblock -> IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> IF . ifparams LLLAVE cuerpof RLLAVE
    (82) ifparams -> . ifcondicion
    (83) ifparams -> . boolean
    (84) ifparams -> . ID
    (104) ifcondicion -> . comparacion
    (105) ifcondicion -> . comparacion signoconect ifcondicion
    (106) ifcondicion -> . LPAREN comparacion RPAREN
    (107) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (108) ifcondicion -> . LPAREN ifcondicion RPAREN
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE
    (33) comparacion -> . ID signocompar ID
    (34) comparacion -> . IDCHAR signocompar IDCHAR
    (35) comparacion -> . IDSTRING signocompar IDSTRING
    (42) comparacion -> . INTTYPE signocompar INTTYPE
    (43) comparacion -> . NINTTYPE signocompar NINTTYPE
    (44) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (48) comparacion -> . boolean signocompar boolean

    LPAREN          shift and go to state 33
    ID              shift and go to state 37
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    IDCHAR          shift and go to state 41
    IDSTRING        shift and go to state 42
    INTTYPE         shift and go to state 43
    NINTTYPE        shift and go to state 44
    FLOATTYPE       shift and go to state 45

    ifparams                       shift and go to state 34
    ifcondicion                    shift and go to state 35
    boolean                        shift and go to state 36
    comparacion                    shift and go to state 38

state 22

    (85) entrada -> IO . DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> IO . DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 46


state 23

    (45) while -> WHILE . ifparams LLLAVE cuerpof RLLAVE
    (82) ifparams -> . ifcondicion
    (83) ifparams -> . boolean
    (84) ifparams -> . ID
    (104) ifcondicion -> . comparacion
    (105) ifcondicion -> . comparacion signoconect ifcondicion
    (106) ifcondicion -> . LPAREN comparacion RPAREN
    (107) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (108) ifcondicion -> . LPAREN ifcondicion RPAREN
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE
    (33) comparacion -> . ID signocompar ID
    (34) comparacion -> . IDCHAR signocompar IDCHAR
    (35) comparacion -> . IDSTRING signocompar IDSTRING
    (42) comparacion -> . INTTYPE signocompar INTTYPE
    (43) comparacion -> . NINTTYPE signocompar NINTTYPE
    (44) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (48) comparacion -> . boolean signocompar boolean

    ID              shift and go to state 37
    LPAREN          shift and go to state 48
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    IDCHAR          shift and go to state 41
    IDSTRING        shift and go to state 42
    INTTYPE         shift and go to state 43
    NINTTYPE        shift and go to state 44
    FLOATTYPE       shift and go to state 45

    ifparams                       shift and go to state 47
    ifcondicion                    shift and go to state 35
    boolean                        shift and go to state 36
    comparacion                    shift and go to state 38

state 24

    (94) elseifblock -> ifblock ELSE . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> ifblock ELSE . IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> ifblock ELSE . LLLAVE cuerpof RLLAVE

    IF              shift and go to state 49
    LLLAVE          shift and go to state 50


state 25

    (91) elseblock -> elseifblock ELSE . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 51


state 26

    (99) funcion -> FN ID . LPAREN params RPAREN LLLAVE metodo RLLAVE
    (110) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (111) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    LPAREN          shift and go to state 52


state 27

    (109) vectorpush -> ID POINT . PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> ID POINT . PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> ID POINT . POP_BACK LPAREN RPAREN ENDCHAR

    PUSH            shift and go to state 53
    PUSH_FRONT      shift and go to state 54
    POP_BACK        shift and go to state 55


state 28

    (41) asignacion -> LET MUT . ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (112) asignacion -> LET MUT . ID IGUAL valor ENDCHAR
    (113) asignacion -> LET MUT . ID IGUAL estructuras ENDCHAR
    (115) asignacion -> LET MUT . ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    ID              shift and go to state 56


state 29

    (114) asignacion -> LET ID . IGUAL valor ENDCHAR

    IGUAL           shift and go to state 57


state 30

    (49) asignacion -> CONST ID . COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> CONST ID . COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> CONST ID . COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> CONST ID . COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> CONST ID . COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> CONST ID . COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> CONST ID . COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> CONST ID . COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> CONST ID . COLON CHAR IGUAL IDCHAR ENDCHAR

    COLON           shift and go to state 58


state 31

    (103) impresion -> PRINTLN LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 59


state 32

    (93) loop -> LOOP LLLAVE . metodo RLLAVE
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . entrada
    (15) metodo -> . while
    (41) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (49) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (112) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> . LET ID IGUAL valor ENDCHAR
    (115) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (103) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (100) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (94) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (91) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (109) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (85) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (45) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 17
    CONST           shift and go to state 18
    PRINTLN         shift and go to state 19
    LOOP            shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 16
    IO              shift and go to state 22
    WHILE           shift and go to state 23

    metodo                         shift and go to state 60
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    entrada                        shift and go to state 13
    while                          shift and go to state 14

state 33

    (100) ifblock -> IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (106) ifcondicion -> LPAREN . comparacion RPAREN
    (107) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (108) ifcondicion -> LPAREN . ifcondicion RPAREN
    (82) ifparams -> . ifcondicion
    (83) ifparams -> . boolean
    (84) ifparams -> . ID
    (33) comparacion -> . ID signocompar ID
    (34) comparacion -> . IDCHAR signocompar IDCHAR
    (35) comparacion -> . IDSTRING signocompar IDSTRING
    (42) comparacion -> . INTTYPE signocompar INTTYPE
    (43) comparacion -> . NINTTYPE signocompar NINTTYPE
    (44) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (48) comparacion -> . boolean signocompar boolean
    (104) ifcondicion -> . comparacion
    (105) ifcondicion -> . comparacion signoconect ifcondicion
    (106) ifcondicion -> . LPAREN comparacion RPAREN
    (107) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (108) ifcondicion -> . LPAREN ifcondicion RPAREN
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE

    ID              shift and go to state 37
    IDCHAR          shift and go to state 41
    IDSTRING        shift and go to state 42
    INTTYPE         shift and go to state 43
    NINTTYPE        shift and go to state 44
    FLOATTYPE       shift and go to state 45
    LPAREN          shift and go to state 48
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    ifparams                       shift and go to state 61
    comparacion                    shift and go to state 62
    ifcondicion                    shift and go to state 63
    boolean                        shift and go to state 36

state 34

    (101) ifblock -> IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 64


state 35

    (82) ifparams -> ifcondicion .

    LLLAVE          reduce using rule 82 (ifparams -> ifcondicion .)
    ENDCHAR         reduce using rule 82 (ifparams -> ifcondicion .)


state 36

    (83) ifparams -> boolean .
    (48) comparacion -> boolean . signocompar boolean
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    LLLAVE          reduce using rule 83 (ifparams -> boolean .)
    RPAREN          reduce using rule 83 (ifparams -> boolean .)
    ENDCHAR         reduce using rule 83 (ifparams -> boolean .)
    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 65

state 37

    (84) ifparams -> ID .
    (33) comparacion -> ID . signocompar ID
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    LLLAVE          reduce using rule 84 (ifparams -> ID .)
    RPAREN          reduce using rule 84 (ifparams -> ID .)
    ENDCHAR         reduce using rule 84 (ifparams -> ID .)
    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 70

state 38

    (104) ifcondicion -> comparacion .
    (105) ifcondicion -> comparacion . signoconect ifcondicion
    (88) signoconect -> . DAMPERSAND
    (89) signoconect -> . OR

    LLLAVE          reduce using rule 104 (ifcondicion -> comparacion .)
    RPAREN          reduce using rule 104 (ifcondicion -> comparacion .)
    ENDCHAR         reduce using rule 104 (ifcondicion -> comparacion .)
    DAMPERSAND      shift and go to state 72
    OR              shift and go to state 73

    signoconect                    shift and go to state 71

state 39

    (69) boolean -> TRUE .

    MAYORQUE        reduce using rule 69 (boolean -> TRUE .)
    MENORQUE        reduce using rule 69 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 69 (boolean -> TRUE .)
    IDENTICO        reduce using rule 69 (boolean -> TRUE .)
    LLLAVE          reduce using rule 69 (boolean -> TRUE .)
    RPAREN          reduce using rule 69 (boolean -> TRUE .)
    DAMPERSAND      reduce using rule 69 (boolean -> TRUE .)
    OR              reduce using rule 69 (boolean -> TRUE .)
    ENDCHAR         reduce using rule 69 (boolean -> TRUE .)


state 40

    (70) boolean -> FALSE .

    MAYORQUE        reduce using rule 70 (boolean -> FALSE .)
    MENORQUE        reduce using rule 70 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 70 (boolean -> FALSE .)
    IDENTICO        reduce using rule 70 (boolean -> FALSE .)
    LLLAVE          reduce using rule 70 (boolean -> FALSE .)
    RPAREN          reduce using rule 70 (boolean -> FALSE .)
    DAMPERSAND      reduce using rule 70 (boolean -> FALSE .)
    OR              reduce using rule 70 (boolean -> FALSE .)
    ENDCHAR         reduce using rule 70 (boolean -> FALSE .)


state 41

    (34) comparacion -> IDCHAR . signocompar IDCHAR
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 74

state 42

    (35) comparacion -> IDSTRING . signocompar IDSTRING
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 75

state 43

    (42) comparacion -> INTTYPE . signocompar INTTYPE
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 76

state 44

    (43) comparacion -> NINTTYPE . signocompar NINTTYPE
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 77

state 45

    (44) comparacion -> FLOATTYPE . signocompar FLOATTYPE
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 78

state 46

    (85) entrada -> IO DOSDOBLEPUNTOS . STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> IO DOSDOBLEPUNTOS . STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    STDIN           shift and go to state 79


state 47

    (45) while -> WHILE ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 80


state 48

    (106) ifcondicion -> LPAREN . comparacion RPAREN
    (107) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (108) ifcondicion -> LPAREN . ifcondicion RPAREN
    (33) comparacion -> . ID signocompar ID
    (34) comparacion -> . IDCHAR signocompar IDCHAR
    (35) comparacion -> . IDSTRING signocompar IDSTRING
    (42) comparacion -> . INTTYPE signocompar INTTYPE
    (43) comparacion -> . NINTTYPE signocompar NINTTYPE
    (44) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (48) comparacion -> . boolean signocompar boolean
    (104) ifcondicion -> . comparacion
    (105) ifcondicion -> . comparacion signoconect ifcondicion
    (106) ifcondicion -> . LPAREN comparacion RPAREN
    (107) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (108) ifcondicion -> . LPAREN ifcondicion RPAREN
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE

    ID              shift and go to state 82
    IDCHAR          shift and go to state 41
    IDSTRING        shift and go to state 42
    INTTYPE         shift and go to state 43
    NINTTYPE        shift and go to state 44
    FLOATTYPE       shift and go to state 45
    LPAREN          shift and go to state 48
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    comparacion                    shift and go to state 62
    ifcondicion                    shift and go to state 81
    boolean                        shift and go to state 83

state 49

    (94) elseifblock -> ifblock ELSE IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> ifblock ELSE IF . ifparams LLLAVE cuerpof RLLAVE
    (82) ifparams -> . ifcondicion
    (83) ifparams -> . boolean
    (84) ifparams -> . ID
    (104) ifcondicion -> . comparacion
    (105) ifcondicion -> . comparacion signoconect ifcondicion
    (106) ifcondicion -> . LPAREN comparacion RPAREN
    (107) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (108) ifcondicion -> . LPAREN ifcondicion RPAREN
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE
    (33) comparacion -> . ID signocompar ID
    (34) comparacion -> . IDCHAR signocompar IDCHAR
    (35) comparacion -> . IDSTRING signocompar IDSTRING
    (42) comparacion -> . INTTYPE signocompar INTTYPE
    (43) comparacion -> . NINTTYPE signocompar NINTTYPE
    (44) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (48) comparacion -> . boolean signocompar boolean

    LPAREN          shift and go to state 84
    ID              shift and go to state 37
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    IDCHAR          shift and go to state 41
    IDSTRING        shift and go to state 42
    INTTYPE         shift and go to state 43
    NINTTYPE        shift and go to state 44
    FLOATTYPE       shift and go to state 45

    ifparams                       shift and go to state 85
    ifcondicion                    shift and go to state 35
    boolean                        shift and go to state 36
    comparacion                    shift and go to state 38

state 50

    (90) elseblock -> ifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . entrada
    (15) metodo -> . while
    (41) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (49) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (112) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> . LET ID IGUAL valor ENDCHAR
    (115) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (103) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (100) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (94) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (91) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (109) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (85) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (45) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 17
    CONST           shift and go to state 18
    PRINTLN         shift and go to state 19
    LOOP            shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 16
    IO              shift and go to state 22
    WHILE           shift and go to state 23

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 86
    metodo                         shift and go to state 87
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    entrada                        shift and go to state 13
    while                          shift and go to state 14

state 51

    (91) elseblock -> elseifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . entrada
    (15) metodo -> . while
    (41) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (49) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (112) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> . LET ID IGUAL valor ENDCHAR
    (115) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (103) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (100) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (94) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (91) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (109) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (85) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (45) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 17
    CONST           shift and go to state 18
    PRINTLN         shift and go to state 19
    LOOP            shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 16
    IO              shift and go to state 22
    WHILE           shift and go to state 23

    elseifblock                    shift and go to state 8
    cuerpof                        shift and go to state 88
    metodo                         shift and go to state 87
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    entrada                        shift and go to state 13
    while                          shift and go to state 14

state 52

    (99) funcion -> FN ID LPAREN . params RPAREN LLLAVE metodo RLLAVE
    (110) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (111) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (97) params -> . ID COLON datatype
    (98) params -> . ID COLON datatype COMA params

    ID              shift and go to state 89

    params                         shift and go to state 90

state 53

    (109) vectorpush -> ID POINT PUSH . LPAREN INTTYPE RPAREN ENDCHAR

    LPAREN          shift and go to state 91


state 54

    (116) llpushfront -> ID POINT PUSH_FRONT . LPAREN INTTYPE RPAREN ENDCHAR

    LPAREN          shift and go to state 92


state 55

    (117) llpopback -> ID POINT POP_BACK . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 93


state 56

    (41) asignacion -> LET MUT ID . IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (112) asignacion -> LET MUT ID . IGUAL valor ENDCHAR
    (113) asignacion -> LET MUT ID . IGUAL estructuras ENDCHAR
    (115) asignacion -> LET MUT ID . IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    IGUAL           shift and go to state 94


state 57

    (114) asignacion -> LET ID IGUAL . valor ENDCHAR
    (16) valor -> . valornumerico
    (17) valor -> . TRUE
    (18) valor -> . FALSE
    (19) valor -> . ID
    (20) valor -> . IDCHAR
    (21) valor -> . IDSTRING
    (22) valor -> . expresion
    (23) valor -> . conectores
    (24) valor -> . comparacion
    (58) valornumerico -> . NINTTYPE
    (59) valornumerico -> . INTTYPE
    (60) valornumerico -> . FLOATTYPE
    (61) valornumerico -> . NFLOATTYPE
    (57) expresion -> . valornumerico signo valornumerico
    (79) conectores -> . boolean signoconect boolean
    (80) conectores -> . EXCLAM boolean
    (81) conectores -> . ID signoconect ID
    (33) comparacion -> . ID signocompar ID
    (34) comparacion -> . IDCHAR signocompar IDCHAR
    (35) comparacion -> . IDSTRING signocompar IDSTRING
    (42) comparacion -> . INTTYPE signocompar INTTYPE
    (43) comparacion -> . NINTTYPE signocompar NINTTYPE
    (44) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (48) comparacion -> . boolean signocompar boolean
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE

    TRUE            shift and go to state 98
    FALSE           shift and go to state 99
    ID              shift and go to state 95
    IDCHAR          shift and go to state 100
    IDSTRING        shift and go to state 101
    NINTTYPE        shift and go to state 105
    INTTYPE         shift and go to state 106
    FLOATTYPE       shift and go to state 107
    NFLOATTYPE      shift and go to state 108
    EXCLAM          shift and go to state 110

    valor                          shift and go to state 96
    valornumerico                  shift and go to state 97
    expresion                      shift and go to state 102
    conectores                     shift and go to state 103
    comparacion                    shift and go to state 104
    boolean                        shift and go to state 109

state 58

    (49) asignacion -> CONST ID COLON . intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> CONST ID COLON . intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> CONST ID COLON . uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> CONST ID COLON . floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> CONST ID COLON . strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> CONST ID COLON . STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> CONST ID COLON . STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> CONST ID COLON . BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> CONST ID COLON . CHAR IGUAL IDCHAR ENDCHAR
    (36) intsize -> . INT8
    (37) intsize -> . INT16
    (38) intsize -> . INT32
    (39) intsize -> . INT64
    (40) intsize -> . INT128
    (52) uintsize -> . UINT8
    (53) uintsize -> . UINT16
    (54) uintsize -> . UINT32
    (55) uintsize -> . UINT64
    (56) uintsize -> . UINT128
    (46) floatsize -> . FLOAT32
    (47) floatsize -> . FLOAT64
    (63) strsize -> . AMPERSAND COMILLA STATIC STR
    (64) strsize -> . AMPERSAND STR

    STRING          shift and go to state 115
    BOOL            shift and go to state 116
    CHAR            shift and go to state 117
    INT8            shift and go to state 118
    INT16           shift and go to state 119
    INT32           shift and go to state 120
    INT64           shift and go to state 121
    INT128          shift and go to state 122
    UINT8           shift and go to state 123
    UINT16          shift and go to state 124
    UINT32          shift and go to state 125
    UINT64          shift and go to state 126
    UINT128         shift and go to state 127
    FLOAT32         shift and go to state 128
    FLOAT64         shift and go to state 129
    AMPERSAND       shift and go to state 130

    intsize                        shift and go to state 111
    uintsize                       shift and go to state 112
    floatsize                      shift and go to state 113
    strsize                        shift and go to state 114

state 59

    (103) impresion -> PRINTLN LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 131


state 60

    (93) loop -> LOOP LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 132


state 61

    (100) ifblock -> IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 133


state 62

    (106) ifcondicion -> LPAREN comparacion . RPAREN
    (107) ifcondicion -> LPAREN comparacion . RPAREN signoconect ifcondicion
    (104) ifcondicion -> comparacion .
    (105) ifcondicion -> comparacion . signoconect ifcondicion
    (88) signoconect -> . DAMPERSAND
    (89) signoconect -> . OR

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 134
    DAMPERSAND      shift and go to state 72
    OR              shift and go to state 73

  ! RPAREN          [ reduce using rule 104 (ifcondicion -> comparacion .) ]

    signoconect                    shift and go to state 71

state 63

    (108) ifcondicion -> LPAREN ifcondicion . RPAREN
    (82) ifparams -> ifcondicion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 135

  ! RPAREN          [ reduce using rule 82 (ifparams -> ifcondicion .) ]


state 64

    (101) ifblock -> IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . entrada
    (15) metodo -> . while
    (41) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (49) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (112) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> . LET ID IGUAL valor ENDCHAR
    (115) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (103) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (100) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (94) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (91) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (109) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (85) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (45) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 17
    CONST           shift and go to state 18
    PRINTLN         shift and go to state 19
    LOOP            shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 16
    IO              shift and go to state 22
    WHILE           shift and go to state 23

    cuerpof                        shift and go to state 136
    metodo                         shift and go to state 87
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    entrada                        shift and go to state 13
    while                          shift and go to state 14

state 65

    (48) comparacion -> boolean signocompar . boolean
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE

    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    boolean                        shift and go to state 137

state 66

    (65) signocompar -> MAYORQUE .

    TRUE            reduce using rule 65 (signocompar -> MAYORQUE .)
    FALSE           reduce using rule 65 (signocompar -> MAYORQUE .)
    ID              reduce using rule 65 (signocompar -> MAYORQUE .)
    IDCHAR          reduce using rule 65 (signocompar -> MAYORQUE .)
    IDSTRING        reduce using rule 65 (signocompar -> MAYORQUE .)
    INTTYPE         reduce using rule 65 (signocompar -> MAYORQUE .)
    NINTTYPE        reduce using rule 65 (signocompar -> MAYORQUE .)
    FLOATTYPE       reduce using rule 65 (signocompar -> MAYORQUE .)


state 67

    (66) signocompar -> MENORQUE .

    TRUE            reduce using rule 66 (signocompar -> MENORQUE .)
    FALSE           reduce using rule 66 (signocompar -> MENORQUE .)
    ID              reduce using rule 66 (signocompar -> MENORQUE .)
    IDCHAR          reduce using rule 66 (signocompar -> MENORQUE .)
    IDSTRING        reduce using rule 66 (signocompar -> MENORQUE .)
    INTTYPE         reduce using rule 66 (signocompar -> MENORQUE .)
    NINTTYPE        reduce using rule 66 (signocompar -> MENORQUE .)
    FLOATTYPE       reduce using rule 66 (signocompar -> MENORQUE .)


state 68

    (67) signocompar -> DIFERENTE .

    TRUE            reduce using rule 67 (signocompar -> DIFERENTE .)
    FALSE           reduce using rule 67 (signocompar -> DIFERENTE .)
    ID              reduce using rule 67 (signocompar -> DIFERENTE .)
    IDCHAR          reduce using rule 67 (signocompar -> DIFERENTE .)
    IDSTRING        reduce using rule 67 (signocompar -> DIFERENTE .)
    INTTYPE         reduce using rule 67 (signocompar -> DIFERENTE .)
    NINTTYPE        reduce using rule 67 (signocompar -> DIFERENTE .)
    FLOATTYPE       reduce using rule 67 (signocompar -> DIFERENTE .)


state 69

    (68) signocompar -> IDENTICO .

    TRUE            reduce using rule 68 (signocompar -> IDENTICO .)
    FALSE           reduce using rule 68 (signocompar -> IDENTICO .)
    ID              reduce using rule 68 (signocompar -> IDENTICO .)
    IDCHAR          reduce using rule 68 (signocompar -> IDENTICO .)
    IDSTRING        reduce using rule 68 (signocompar -> IDENTICO .)
    INTTYPE         reduce using rule 68 (signocompar -> IDENTICO .)
    NINTTYPE        reduce using rule 68 (signocompar -> IDENTICO .)
    FLOATTYPE       reduce using rule 68 (signocompar -> IDENTICO .)


state 70

    (33) comparacion -> ID signocompar . ID

    ID              shift and go to state 138


state 71

    (105) ifcondicion -> comparacion signoconect . ifcondicion
    (104) ifcondicion -> . comparacion
    (105) ifcondicion -> . comparacion signoconect ifcondicion
    (106) ifcondicion -> . LPAREN comparacion RPAREN
    (107) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (108) ifcondicion -> . LPAREN ifcondicion RPAREN
    (33) comparacion -> . ID signocompar ID
    (34) comparacion -> . IDCHAR signocompar IDCHAR
    (35) comparacion -> . IDSTRING signocompar IDSTRING
    (42) comparacion -> . INTTYPE signocompar INTTYPE
    (43) comparacion -> . NINTTYPE signocompar NINTTYPE
    (44) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (48) comparacion -> . boolean signocompar boolean
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE

    LPAREN          shift and go to state 48
    ID              shift and go to state 82
    IDCHAR          shift and go to state 41
    IDSTRING        shift and go to state 42
    INTTYPE         shift and go to state 43
    NINTTYPE        shift and go to state 44
    FLOATTYPE       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    comparacion                    shift and go to state 38
    ifcondicion                    shift and go to state 139
    boolean                        shift and go to state 83

state 72

    (88) signoconect -> DAMPERSAND .

    LPAREN          reduce using rule 88 (signoconect -> DAMPERSAND .)
    ID              reduce using rule 88 (signoconect -> DAMPERSAND .)
    IDCHAR          reduce using rule 88 (signoconect -> DAMPERSAND .)
    IDSTRING        reduce using rule 88 (signoconect -> DAMPERSAND .)
    INTTYPE         reduce using rule 88 (signoconect -> DAMPERSAND .)
    NINTTYPE        reduce using rule 88 (signoconect -> DAMPERSAND .)
    FLOATTYPE       reduce using rule 88 (signoconect -> DAMPERSAND .)
    TRUE            reduce using rule 88 (signoconect -> DAMPERSAND .)
    FALSE           reduce using rule 88 (signoconect -> DAMPERSAND .)


state 73

    (89) signoconect -> OR .

    LPAREN          reduce using rule 89 (signoconect -> OR .)
    ID              reduce using rule 89 (signoconect -> OR .)
    IDCHAR          reduce using rule 89 (signoconect -> OR .)
    IDSTRING        reduce using rule 89 (signoconect -> OR .)
    INTTYPE         reduce using rule 89 (signoconect -> OR .)
    NINTTYPE        reduce using rule 89 (signoconect -> OR .)
    FLOATTYPE       reduce using rule 89 (signoconect -> OR .)
    TRUE            reduce using rule 89 (signoconect -> OR .)
    FALSE           reduce using rule 89 (signoconect -> OR .)


state 74

    (34) comparacion -> IDCHAR signocompar . IDCHAR

    IDCHAR          shift and go to state 140


state 75

    (35) comparacion -> IDSTRING signocompar . IDSTRING

    IDSTRING        shift and go to state 141


state 76

    (42) comparacion -> INTTYPE signocompar . INTTYPE

    INTTYPE         shift and go to state 142


state 77

    (43) comparacion -> NINTTYPE signocompar . NINTTYPE

    NINTTYPE        shift and go to state 143


state 78

    (44) comparacion -> FLOATTYPE signocompar . FLOATTYPE

    FLOATTYPE       shift and go to state 144


state 79

    (85) entrada -> IO DOSDOBLEPUNTOS STDIN . LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> IO DOSDOBLEPUNTOS STDIN . LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 145


state 80

    (45) while -> WHILE ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . entrada
    (15) metodo -> . while
    (41) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (49) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (112) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> . LET ID IGUAL valor ENDCHAR
    (115) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (103) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (100) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (94) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (91) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (109) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (85) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (45) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 17
    CONST           shift and go to state 18
    PRINTLN         shift and go to state 19
    LOOP            shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 16
    IO              shift and go to state 22
    WHILE           shift and go to state 23

    cuerpof                        shift and go to state 146
    metodo                         shift and go to state 87
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    entrada                        shift and go to state 13
    while                          shift and go to state 14

state 81

    (108) ifcondicion -> LPAREN ifcondicion . RPAREN

    RPAREN          shift and go to state 135


state 82

    (33) comparacion -> ID . signocompar ID
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 70

state 83

    (48) comparacion -> boolean . signocompar boolean
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 65

state 84

    (94) elseifblock -> ifblock ELSE IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (106) ifcondicion -> LPAREN . comparacion RPAREN
    (107) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (108) ifcondicion -> LPAREN . ifcondicion RPAREN
    (82) ifparams -> . ifcondicion
    (83) ifparams -> . boolean
    (84) ifparams -> . ID
    (33) comparacion -> . ID signocompar ID
    (34) comparacion -> . IDCHAR signocompar IDCHAR
    (35) comparacion -> . IDSTRING signocompar IDSTRING
    (42) comparacion -> . INTTYPE signocompar INTTYPE
    (43) comparacion -> . NINTTYPE signocompar NINTTYPE
    (44) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (48) comparacion -> . boolean signocompar boolean
    (104) ifcondicion -> . comparacion
    (105) ifcondicion -> . comparacion signoconect ifcondicion
    (106) ifcondicion -> . LPAREN comparacion RPAREN
    (107) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (108) ifcondicion -> . LPAREN ifcondicion RPAREN
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE

    ID              shift and go to state 37
    IDCHAR          shift and go to state 41
    IDSTRING        shift and go to state 42
    INTTYPE         shift and go to state 43
    NINTTYPE        shift and go to state 44
    FLOATTYPE       shift and go to state 45
    LPAREN          shift and go to state 48
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    ifparams                       shift and go to state 147
    comparacion                    shift and go to state 62
    ifcondicion                    shift and go to state 63
    boolean                        shift and go to state 36

state 85

    (95) elseifblock -> ifblock ELSE IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 148


state 86

    (90) elseblock -> ifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 149


state 87

    (3) cuerpof -> metodo .
    (4) cuerpof -> metodo . cuerpof
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . entrada
    (15) metodo -> . while
    (41) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (49) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (112) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> . LET ID IGUAL valor ENDCHAR
    (115) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (103) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (100) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (94) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (91) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (109) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (85) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (45) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          reduce using rule 3 (cuerpof -> metodo .)
    RETURN          reduce using rule 3 (cuerpof -> metodo .)
    LET             shift and go to state 17
    CONST           shift and go to state 18
    PRINTLN         shift and go to state 19
    LOOP            shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 16
    IO              shift and go to state 22
    WHILE           shift and go to state 23

  ! ID              [ reduce using rule 3 (cuerpof -> metodo .) ]

    metodo                         shift and go to state 87
    cuerpof                        shift and go to state 150
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    entrada                        shift and go to state 13
    while                          shift and go to state 14

state 88

    (91) elseblock -> elseifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 151


state 89

    (97) params -> ID . COLON datatype
    (98) params -> ID . COLON datatype COMA params

    COLON           shift and go to state 152


state 90

    (99) funcion -> FN ID LPAREN params . RPAREN LLLAVE metodo RLLAVE
    (110) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (111) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    RPAREN          shift and go to state 153


state 91

    (109) vectorpush -> ID POINT PUSH LPAREN . INTTYPE RPAREN ENDCHAR

    INTTYPE         shift and go to state 154


state 92

    (116) llpushfront -> ID POINT PUSH_FRONT LPAREN . INTTYPE RPAREN ENDCHAR

    INTTYPE         shift and go to state 155


state 93

    (117) llpopback -> ID POINT POP_BACK LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 156


state 94

    (41) asignacion -> LET MUT ID IGUAL . VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (112) asignacion -> LET MUT ID IGUAL . valor ENDCHAR
    (113) asignacion -> LET MUT ID IGUAL . estructuras ENDCHAR
    (115) asignacion -> LET MUT ID IGUAL . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (16) valor -> . valornumerico
    (17) valor -> . TRUE
    (18) valor -> . FALSE
    (19) valor -> . ID
    (20) valor -> . IDCHAR
    (21) valor -> . IDSTRING
    (22) valor -> . expresion
    (23) valor -> . conectores
    (24) valor -> . comparacion
    (31) estructuras -> . linkedlist
    (32) estructuras -> . hashmap
    (58) valornumerico -> . NINTTYPE
    (59) valornumerico -> . INTTYPE
    (60) valornumerico -> . FLOATTYPE
    (61) valornumerico -> . NFLOATTYPE
    (57) expresion -> . valornumerico signo valornumerico
    (79) conectores -> . boolean signoconect boolean
    (80) conectores -> . EXCLAM boolean
    (81) conectores -> . ID signoconect ID
    (33) comparacion -> . ID signocompar ID
    (34) comparacion -> . IDCHAR signocompar IDCHAR
    (35) comparacion -> . IDSTRING signocompar IDSTRING
    (42) comparacion -> . INTTYPE signocompar INTTYPE
    (43) comparacion -> . NINTTYPE signocompar NINTTYPE
    (44) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (48) comparacion -> . boolean signocompar boolean
    (77) linkedlist -> . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (51) hashmap -> . HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE

    VEC             shift and go to state 157
    LINKEDLIST      shift and go to state 160
    TRUE            shift and go to state 98
    FALSE           shift and go to state 99
    ID              shift and go to state 95
    IDCHAR          shift and go to state 100
    IDSTRING        shift and go to state 101
    NINTTYPE        shift and go to state 105
    INTTYPE         shift and go to state 106
    FLOATTYPE       shift and go to state 107
    NFLOATTYPE      shift and go to state 108
    EXCLAM          shift and go to state 110
    HASHMAP         shift and go to state 163

    valor                          shift and go to state 158
    estructuras                    shift and go to state 159
    valornumerico                  shift and go to state 97
    expresion                      shift and go to state 102
    conectores                     shift and go to state 103
    comparacion                    shift and go to state 104
    linkedlist                     shift and go to state 161
    hashmap                        shift and go to state 162
    boolean                        shift and go to state 109

state 95

    (19) valor -> ID .
    (81) conectores -> ID . signoconect ID
    (33) comparacion -> ID . signocompar ID
    (88) signoconect -> . DAMPERSAND
    (89) signoconect -> . OR
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 19 (valor -> ID .)
    DAMPERSAND      shift and go to state 72
    OR              shift and go to state 73
    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signoconect                    shift and go to state 164
    signocompar                    shift and go to state 70

state 96

    (114) asignacion -> LET ID IGUAL valor . ENDCHAR

    ENDCHAR         shift and go to state 165


state 97

    (16) valor -> valornumerico .
    (57) expresion -> valornumerico . signo valornumerico
    (72) signo -> . PLUS
    (73) signo -> . TIMES
    (74) signo -> . MINUS
    (75) signo -> . PORCENTAJE
    (76) signo -> . DIVIDE

    ENDCHAR         reduce using rule 16 (valor -> valornumerico .)
    PLUS            shift and go to state 167
    TIMES           shift and go to state 168
    MINUS           shift and go to state 169
    PORCENTAJE      shift and go to state 170
    DIVIDE          shift and go to state 171

    signo                          shift and go to state 166

state 98

    (17) valor -> TRUE .
    (69) boolean -> TRUE .

    ENDCHAR         reduce using rule 17 (valor -> TRUE .)
    DAMPERSAND      reduce using rule 69 (boolean -> TRUE .)
    OR              reduce using rule 69 (boolean -> TRUE .)
    MAYORQUE        reduce using rule 69 (boolean -> TRUE .)
    MENORQUE        reduce using rule 69 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 69 (boolean -> TRUE .)
    IDENTICO        reduce using rule 69 (boolean -> TRUE .)


state 99

    (18) valor -> FALSE .
    (70) boolean -> FALSE .

    ENDCHAR         reduce using rule 18 (valor -> FALSE .)
    DAMPERSAND      reduce using rule 70 (boolean -> FALSE .)
    OR              reduce using rule 70 (boolean -> FALSE .)
    MAYORQUE        reduce using rule 70 (boolean -> FALSE .)
    MENORQUE        reduce using rule 70 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 70 (boolean -> FALSE .)
    IDENTICO        reduce using rule 70 (boolean -> FALSE .)


state 100

    (20) valor -> IDCHAR .
    (34) comparacion -> IDCHAR . signocompar IDCHAR
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 20 (valor -> IDCHAR .)
    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 74

state 101

    (21) valor -> IDSTRING .
    (35) comparacion -> IDSTRING . signocompar IDSTRING
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 21 (valor -> IDSTRING .)
    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 75

state 102

    (22) valor -> expresion .

    ENDCHAR         reduce using rule 22 (valor -> expresion .)


state 103

    (23) valor -> conectores .

    ENDCHAR         reduce using rule 23 (valor -> conectores .)


state 104

    (24) valor -> comparacion .

    ENDCHAR         reduce using rule 24 (valor -> comparacion .)


state 105

    (58) valornumerico -> NINTTYPE .
    (43) comparacion -> NINTTYPE . signocompar NINTTYPE
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    PLUS            reduce using rule 58 (valornumerico -> NINTTYPE .)
    TIMES           reduce using rule 58 (valornumerico -> NINTTYPE .)
    MINUS           reduce using rule 58 (valornumerico -> NINTTYPE .)
    PORCENTAJE      reduce using rule 58 (valornumerico -> NINTTYPE .)
    DIVIDE          reduce using rule 58 (valornumerico -> NINTTYPE .)
    ENDCHAR         reduce using rule 58 (valornumerico -> NINTTYPE .)
    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 77

state 106

    (59) valornumerico -> INTTYPE .
    (42) comparacion -> INTTYPE . signocompar INTTYPE
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    PLUS            reduce using rule 59 (valornumerico -> INTTYPE .)
    TIMES           reduce using rule 59 (valornumerico -> INTTYPE .)
    MINUS           reduce using rule 59 (valornumerico -> INTTYPE .)
    PORCENTAJE      reduce using rule 59 (valornumerico -> INTTYPE .)
    DIVIDE          reduce using rule 59 (valornumerico -> INTTYPE .)
    ENDCHAR         reduce using rule 59 (valornumerico -> INTTYPE .)
    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 76

state 107

    (60) valornumerico -> FLOATTYPE .
    (44) comparacion -> FLOATTYPE . signocompar FLOATTYPE
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    PLUS            reduce using rule 60 (valornumerico -> FLOATTYPE .)
    TIMES           reduce using rule 60 (valornumerico -> FLOATTYPE .)
    MINUS           reduce using rule 60 (valornumerico -> FLOATTYPE .)
    PORCENTAJE      reduce using rule 60 (valornumerico -> FLOATTYPE .)
    DIVIDE          reduce using rule 60 (valornumerico -> FLOATTYPE .)
    ENDCHAR         reduce using rule 60 (valornumerico -> FLOATTYPE .)
    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signocompar                    shift and go to state 78

state 108

    (61) valornumerico -> NFLOATTYPE .

    PLUS            reduce using rule 61 (valornumerico -> NFLOATTYPE .)
    TIMES           reduce using rule 61 (valornumerico -> NFLOATTYPE .)
    MINUS           reduce using rule 61 (valornumerico -> NFLOATTYPE .)
    PORCENTAJE      reduce using rule 61 (valornumerico -> NFLOATTYPE .)
    DIVIDE          reduce using rule 61 (valornumerico -> NFLOATTYPE .)
    ENDCHAR         reduce using rule 61 (valornumerico -> NFLOATTYPE .)


state 109

    (79) conectores -> boolean . signoconect boolean
    (48) comparacion -> boolean . signocompar boolean
    (88) signoconect -> . DAMPERSAND
    (89) signoconect -> . OR
    (65) signocompar -> . MAYORQUE
    (66) signocompar -> . MENORQUE
    (67) signocompar -> . DIFERENTE
    (68) signocompar -> . IDENTICO

    DAMPERSAND      shift and go to state 72
    OR              shift and go to state 73
    MAYORQUE        shift and go to state 66
    MENORQUE        shift and go to state 67
    DIFERENTE       shift and go to state 68
    IDENTICO        shift and go to state 69

    signoconect                    shift and go to state 172
    signocompar                    shift and go to state 65

state 110

    (80) conectores -> EXCLAM . boolean
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE

    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    boolean                        shift and go to state 173

state 111

    (49) asignacion -> CONST ID COLON intsize . IGUAL INTTYPE ENDCHAR
    (50) asignacion -> CONST ID COLON intsize . IGUAL NINTTYPE ENDCHAR

    IGUAL           shift and go to state 174


state 112

    (62) asignacion -> CONST ID COLON uintsize . IGUAL INTTYPE ENDCHAR

    IGUAL           shift and go to state 175


state 113

    (71) asignacion -> CONST ID COLON floatsize . IGUAL FLOATTYPE ENDCHAR

    IGUAL           shift and go to state 176


state 114

    (78) asignacion -> CONST ID COLON strsize . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 177


state 115

    (87) asignacion -> CONST ID COLON STRING . IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> CONST ID COLON STRING . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 178


state 116

    (96) asignacion -> CONST ID COLON BOOL . IGUAL boolean ENDCHAR

    IGUAL           shift and go to state 179


state 117

    (102) asignacion -> CONST ID COLON CHAR . IGUAL IDCHAR ENDCHAR

    IGUAL           shift and go to state 180


state 118

    (36) intsize -> INT8 .

    IGUAL           reduce using rule 36 (intsize -> INT8 .)
    COMA            reduce using rule 36 (intsize -> INT8 .)
    RPAREN          reduce using rule 36 (intsize -> INT8 .)
    LLLAVE          reduce using rule 36 (intsize -> INT8 .)


state 119

    (37) intsize -> INT16 .

    IGUAL           reduce using rule 37 (intsize -> INT16 .)
    COMA            reduce using rule 37 (intsize -> INT16 .)
    RPAREN          reduce using rule 37 (intsize -> INT16 .)
    LLLAVE          reduce using rule 37 (intsize -> INT16 .)


state 120

    (38) intsize -> INT32 .

    IGUAL           reduce using rule 38 (intsize -> INT32 .)
    COMA            reduce using rule 38 (intsize -> INT32 .)
    RPAREN          reduce using rule 38 (intsize -> INT32 .)
    LLLAVE          reduce using rule 38 (intsize -> INT32 .)


state 121

    (39) intsize -> INT64 .

    IGUAL           reduce using rule 39 (intsize -> INT64 .)
    COMA            reduce using rule 39 (intsize -> INT64 .)
    RPAREN          reduce using rule 39 (intsize -> INT64 .)
    LLLAVE          reduce using rule 39 (intsize -> INT64 .)


state 122

    (40) intsize -> INT128 .

    IGUAL           reduce using rule 40 (intsize -> INT128 .)
    COMA            reduce using rule 40 (intsize -> INT128 .)
    RPAREN          reduce using rule 40 (intsize -> INT128 .)
    LLLAVE          reduce using rule 40 (intsize -> INT128 .)


state 123

    (52) uintsize -> UINT8 .

    IGUAL           reduce using rule 52 (uintsize -> UINT8 .)
    COMA            reduce using rule 52 (uintsize -> UINT8 .)
    RPAREN          reduce using rule 52 (uintsize -> UINT8 .)
    LLLAVE          reduce using rule 52 (uintsize -> UINT8 .)


state 124

    (53) uintsize -> UINT16 .

    IGUAL           reduce using rule 53 (uintsize -> UINT16 .)
    COMA            reduce using rule 53 (uintsize -> UINT16 .)
    RPAREN          reduce using rule 53 (uintsize -> UINT16 .)
    LLLAVE          reduce using rule 53 (uintsize -> UINT16 .)


state 125

    (54) uintsize -> UINT32 .

    IGUAL           reduce using rule 54 (uintsize -> UINT32 .)
    COMA            reduce using rule 54 (uintsize -> UINT32 .)
    RPAREN          reduce using rule 54 (uintsize -> UINT32 .)
    LLLAVE          reduce using rule 54 (uintsize -> UINT32 .)


state 126

    (55) uintsize -> UINT64 .

    IGUAL           reduce using rule 55 (uintsize -> UINT64 .)
    COMA            reduce using rule 55 (uintsize -> UINT64 .)
    RPAREN          reduce using rule 55 (uintsize -> UINT64 .)
    LLLAVE          reduce using rule 55 (uintsize -> UINT64 .)


state 127

    (56) uintsize -> UINT128 .

    IGUAL           reduce using rule 56 (uintsize -> UINT128 .)
    COMA            reduce using rule 56 (uintsize -> UINT128 .)
    RPAREN          reduce using rule 56 (uintsize -> UINT128 .)
    LLLAVE          reduce using rule 56 (uintsize -> UINT128 .)


state 128

    (46) floatsize -> FLOAT32 .

    IGUAL           reduce using rule 46 (floatsize -> FLOAT32 .)
    COMA            reduce using rule 46 (floatsize -> FLOAT32 .)
    RPAREN          reduce using rule 46 (floatsize -> FLOAT32 .)
    LLLAVE          reduce using rule 46 (floatsize -> FLOAT32 .)


state 129

    (47) floatsize -> FLOAT64 .

    IGUAL           reduce using rule 47 (floatsize -> FLOAT64 .)
    COMA            reduce using rule 47 (floatsize -> FLOAT64 .)
    RPAREN          reduce using rule 47 (floatsize -> FLOAT64 .)
    LLLAVE          reduce using rule 47 (floatsize -> FLOAT64 .)


state 130

    (63) strsize -> AMPERSAND . COMILLA STATIC STR
    (64) strsize -> AMPERSAND . STR

    COMILLA         shift and go to state 181
    STR             shift and go to state 182


state 131

    (103) impresion -> PRINTLN LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 183


state 132

    (93) loop -> LOOP LLLAVE metodo RLLAVE .

    $end            reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RLLAVE          reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LET             reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    CONST           reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    PRINTLN         reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LOOP            reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IF              reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    ID              reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IO              reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    WHILE           reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RETURN          reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)


state 133

    (100) ifblock -> IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 184


state 134

    (106) ifcondicion -> LPAREN comparacion RPAREN .
    (107) ifcondicion -> LPAREN comparacion RPAREN . signoconect ifcondicion
    (88) signoconect -> . DAMPERSAND
    (89) signoconect -> . OR

    LLLAVE          reduce using rule 106 (ifcondicion -> LPAREN comparacion RPAREN .)
    RPAREN          reduce using rule 106 (ifcondicion -> LPAREN comparacion RPAREN .)
    ENDCHAR         reduce using rule 106 (ifcondicion -> LPAREN comparacion RPAREN .)
    DAMPERSAND      shift and go to state 72
    OR              shift and go to state 73

    signoconect                    shift and go to state 185

state 135

    (108) ifcondicion -> LPAREN ifcondicion RPAREN .

    LLLAVE          reduce using rule 108 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    RPAREN          reduce using rule 108 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    ENDCHAR         reduce using rule 108 (ifcondicion -> LPAREN ifcondicion RPAREN .)


state 136

    (101) ifblock -> IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 186


state 137

    (48) comparacion -> boolean signocompar boolean .

    DAMPERSAND      reduce using rule 48 (comparacion -> boolean signocompar boolean .)
    OR              reduce using rule 48 (comparacion -> boolean signocompar boolean .)
    LLLAVE          reduce using rule 48 (comparacion -> boolean signocompar boolean .)
    RPAREN          reduce using rule 48 (comparacion -> boolean signocompar boolean .)
    ENDCHAR         reduce using rule 48 (comparacion -> boolean signocompar boolean .)


state 138

    (33) comparacion -> ID signocompar ID .

    DAMPERSAND      reduce using rule 33 (comparacion -> ID signocompar ID .)
    OR              reduce using rule 33 (comparacion -> ID signocompar ID .)
    LLLAVE          reduce using rule 33 (comparacion -> ID signocompar ID .)
    RPAREN          reduce using rule 33 (comparacion -> ID signocompar ID .)
    ENDCHAR         reduce using rule 33 (comparacion -> ID signocompar ID .)


state 139

    (105) ifcondicion -> comparacion signoconect ifcondicion .

    LLLAVE          reduce using rule 105 (ifcondicion -> comparacion signoconect ifcondicion .)
    RPAREN          reduce using rule 105 (ifcondicion -> comparacion signoconect ifcondicion .)
    ENDCHAR         reduce using rule 105 (ifcondicion -> comparacion signoconect ifcondicion .)


state 140

    (34) comparacion -> IDCHAR signocompar IDCHAR .

    DAMPERSAND      reduce using rule 34 (comparacion -> IDCHAR signocompar IDCHAR .)
    OR              reduce using rule 34 (comparacion -> IDCHAR signocompar IDCHAR .)
    LLLAVE          reduce using rule 34 (comparacion -> IDCHAR signocompar IDCHAR .)
    RPAREN          reduce using rule 34 (comparacion -> IDCHAR signocompar IDCHAR .)
    ENDCHAR         reduce using rule 34 (comparacion -> IDCHAR signocompar IDCHAR .)


state 141

    (35) comparacion -> IDSTRING signocompar IDSTRING .

    DAMPERSAND      reduce using rule 35 (comparacion -> IDSTRING signocompar IDSTRING .)
    OR              reduce using rule 35 (comparacion -> IDSTRING signocompar IDSTRING .)
    LLLAVE          reduce using rule 35 (comparacion -> IDSTRING signocompar IDSTRING .)
    RPAREN          reduce using rule 35 (comparacion -> IDSTRING signocompar IDSTRING .)
    ENDCHAR         reduce using rule 35 (comparacion -> IDSTRING signocompar IDSTRING .)


state 142

    (42) comparacion -> INTTYPE signocompar INTTYPE .

    DAMPERSAND      reduce using rule 42 (comparacion -> INTTYPE signocompar INTTYPE .)
    OR              reduce using rule 42 (comparacion -> INTTYPE signocompar INTTYPE .)
    LLLAVE          reduce using rule 42 (comparacion -> INTTYPE signocompar INTTYPE .)
    RPAREN          reduce using rule 42 (comparacion -> INTTYPE signocompar INTTYPE .)
    ENDCHAR         reduce using rule 42 (comparacion -> INTTYPE signocompar INTTYPE .)


state 143

    (43) comparacion -> NINTTYPE signocompar NINTTYPE .

    DAMPERSAND      reduce using rule 43 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    OR              reduce using rule 43 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    LLLAVE          reduce using rule 43 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    RPAREN          reduce using rule 43 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    ENDCHAR         reduce using rule 43 (comparacion -> NINTTYPE signocompar NINTTYPE .)


state 144

    (44) comparacion -> FLOATTYPE signocompar FLOATTYPE .

    DAMPERSAND      reduce using rule 44 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    OR              reduce using rule 44 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    LLLAVE          reduce using rule 44 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    RPAREN          reduce using rule 44 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    ENDCHAR         reduce using rule 44 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)


state 145

    (85) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN . RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN . RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    RPAREN          shift and go to state 187


state 146

    (45) while -> WHILE ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 188


state 147

    (94) elseifblock -> ifblock ELSE IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 189


state 148

    (95) elseifblock -> ifblock ELSE IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . entrada
    (15) metodo -> . while
    (41) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (49) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (112) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> . LET ID IGUAL valor ENDCHAR
    (115) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (103) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (100) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (94) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (91) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (109) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (85) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (45) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 17
    CONST           shift and go to state 18
    PRINTLN         shift and go to state 19
    LOOP            shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 16
    IO              shift and go to state 22
    WHILE           shift and go to state 23

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 190
    metodo                         shift and go to state 87
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    entrada                        shift and go to state 13
    while                          shift and go to state 14

state 149

    (90) elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 90 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 90 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 90 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 90 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 90 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 90 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 90 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 90 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 90 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 90 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 90 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)


state 150

    (4) cuerpof -> metodo cuerpof .

    RLLAVE          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    RETURN          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    ID              reduce using rule 4 (cuerpof -> metodo cuerpof .)


state 151

    (91) elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 91 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 91 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 91 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 91 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 91 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 91 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 91 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 91 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 91 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 91 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 91 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)


state 152

    (97) params -> ID COLON . datatype
    (98) params -> ID COLON . datatype COMA params
    (25) datatype -> . intsize
    (26) datatype -> . uintsize
    (27) datatype -> . floatsize
    (28) datatype -> . strsize
    (29) datatype -> . STRING
    (30) datatype -> . BOOL
    (36) intsize -> . INT8
    (37) intsize -> . INT16
    (38) intsize -> . INT32
    (39) intsize -> . INT64
    (40) intsize -> . INT128
    (52) uintsize -> . UINT8
    (53) uintsize -> . UINT16
    (54) uintsize -> . UINT32
    (55) uintsize -> . UINT64
    (56) uintsize -> . UINT128
    (46) floatsize -> . FLOAT32
    (47) floatsize -> . FLOAT64
    (63) strsize -> . AMPERSAND COMILLA STATIC STR
    (64) strsize -> . AMPERSAND STR

    STRING          shift and go to state 196
    BOOL            shift and go to state 197
    INT8            shift and go to state 118
    INT16           shift and go to state 119
    INT32           shift and go to state 120
    INT64           shift and go to state 121
    INT128          shift and go to state 122
    UINT8           shift and go to state 123
    UINT16          shift and go to state 124
    UINT32          shift and go to state 125
    UINT64          shift and go to state 126
    UINT128         shift and go to state 127
    FLOAT32         shift and go to state 128
    FLOAT64         shift and go to state 129
    AMPERSAND       shift and go to state 130

    datatype                       shift and go to state 191
    intsize                        shift and go to state 192
    uintsize                       shift and go to state 193
    floatsize                      shift and go to state 194
    strsize                        shift and go to state 195

state 153

    (99) funcion -> FN ID LPAREN params RPAREN . LLLAVE metodo RLLAVE
    (110) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (111) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    LLLAVE          shift and go to state 198
    ARROWOPT        shift and go to state 199


state 154

    (109) vectorpush -> ID POINT PUSH LPAREN INTTYPE . RPAREN ENDCHAR

    RPAREN          shift and go to state 200


state 155

    (116) llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE . RPAREN ENDCHAR

    RPAREN          shift and go to state 201


state 156

    (117) llpopback -> ID POINT POP_BACK LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 202


state 157

    (41) asignacion -> LET MUT ID IGUAL VEC . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 203


state 158

    (112) asignacion -> LET MUT ID IGUAL valor . ENDCHAR

    ENDCHAR         shift and go to state 204


state 159

    (113) asignacion -> LET MUT ID IGUAL estructuras . ENDCHAR

    ENDCHAR         shift and go to state 205


state 160

    (115) asignacion -> LET MUT ID IGUAL LINKEDLIST . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (77) linkedlist -> LINKEDLIST . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 206


state 161

    (31) estructuras -> linkedlist .

    ENDCHAR         reduce using rule 31 (estructuras -> linkedlist .)


state 162

    (32) estructuras -> hashmap .

    ENDCHAR         reduce using rule 32 (estructuras -> hashmap .)


state 163

    (51) hashmap -> HASHMAP . DOSDOBLEPUNTOS NEW LPAREN RPAREN

    DOSDOBLEPUNTOS  shift and go to state 207


state 164

    (81) conectores -> ID signoconect . ID

    ID              shift and go to state 208


state 165

    (114) asignacion -> LET ID IGUAL valor ENDCHAR .

    $end            reduce using rule 114 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    RLLAVE          reduce using rule 114 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    LET             reduce using rule 114 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    CONST           reduce using rule 114 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    PRINTLN         reduce using rule 114 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    LOOP            reduce using rule 114 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    IF              reduce using rule 114 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    ID              reduce using rule 114 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    IO              reduce using rule 114 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    WHILE           reduce using rule 114 (asignacion -> LET ID IGUAL valor ENDCHAR .)
    RETURN          reduce using rule 114 (asignacion -> LET ID IGUAL valor ENDCHAR .)


state 166

    (57) expresion -> valornumerico signo . valornumerico
    (58) valornumerico -> . NINTTYPE
    (59) valornumerico -> . INTTYPE
    (60) valornumerico -> . FLOATTYPE
    (61) valornumerico -> . NFLOATTYPE

    NINTTYPE        shift and go to state 210
    INTTYPE         shift and go to state 211
    FLOATTYPE       shift and go to state 212
    NFLOATTYPE      shift and go to state 108

    valornumerico                  shift and go to state 209

state 167

    (72) signo -> PLUS .

    NINTTYPE        reduce using rule 72 (signo -> PLUS .)
    INTTYPE         reduce using rule 72 (signo -> PLUS .)
    FLOATTYPE       reduce using rule 72 (signo -> PLUS .)
    NFLOATTYPE      reduce using rule 72 (signo -> PLUS .)


state 168

    (73) signo -> TIMES .

    NINTTYPE        reduce using rule 73 (signo -> TIMES .)
    INTTYPE         reduce using rule 73 (signo -> TIMES .)
    FLOATTYPE       reduce using rule 73 (signo -> TIMES .)
    NFLOATTYPE      reduce using rule 73 (signo -> TIMES .)


state 169

    (74) signo -> MINUS .

    NINTTYPE        reduce using rule 74 (signo -> MINUS .)
    INTTYPE         reduce using rule 74 (signo -> MINUS .)
    FLOATTYPE       reduce using rule 74 (signo -> MINUS .)
    NFLOATTYPE      reduce using rule 74 (signo -> MINUS .)


state 170

    (75) signo -> PORCENTAJE .

    NINTTYPE        reduce using rule 75 (signo -> PORCENTAJE .)
    INTTYPE         reduce using rule 75 (signo -> PORCENTAJE .)
    FLOATTYPE       reduce using rule 75 (signo -> PORCENTAJE .)
    NFLOATTYPE      reduce using rule 75 (signo -> PORCENTAJE .)


state 171

    (76) signo -> DIVIDE .

    NINTTYPE        reduce using rule 76 (signo -> DIVIDE .)
    INTTYPE         reduce using rule 76 (signo -> DIVIDE .)
    FLOATTYPE       reduce using rule 76 (signo -> DIVIDE .)
    NFLOATTYPE      reduce using rule 76 (signo -> DIVIDE .)


state 172

    (79) conectores -> boolean signoconect . boolean
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE

    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    boolean                        shift and go to state 213

state 173

    (80) conectores -> EXCLAM boolean .

    ENDCHAR         reduce using rule 80 (conectores -> EXCLAM boolean .)


state 174

    (49) asignacion -> CONST ID COLON intsize IGUAL . INTTYPE ENDCHAR
    (50) asignacion -> CONST ID COLON intsize IGUAL . NINTTYPE ENDCHAR

    INTTYPE         shift and go to state 214
    NINTTYPE        shift and go to state 215


state 175

    (62) asignacion -> CONST ID COLON uintsize IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 216


state 176

    (71) asignacion -> CONST ID COLON floatsize IGUAL . FLOATTYPE ENDCHAR

    FLOATTYPE       shift and go to state 217


state 177

    (78) asignacion -> CONST ID COLON strsize IGUAL . IDSTRING ENDCHAR

    IDSTRING        shift and go to state 218


state 178

    (87) asignacion -> CONST ID COLON STRING IGUAL . STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> CONST ID COLON STRING IGUAL . IDSTRING ENDCHAR

    STRING          shift and go to state 219
    IDSTRING        shift and go to state 220


state 179

    (96) asignacion -> CONST ID COLON BOOL IGUAL . boolean ENDCHAR
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE

    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    boolean                        shift and go to state 221

state 180

    (102) asignacion -> CONST ID COLON CHAR IGUAL . IDCHAR ENDCHAR

    IDCHAR          shift and go to state 222


state 181

    (63) strsize -> AMPERSAND COMILLA . STATIC STR

    STATIC          shift and go to state 223


state 182

    (64) strsize -> AMPERSAND STR .

    IGUAL           reduce using rule 64 (strsize -> AMPERSAND STR .)
    COMA            reduce using rule 64 (strsize -> AMPERSAND STR .)
    RPAREN          reduce using rule 64 (strsize -> AMPERSAND STR .)
    LLLAVE          reduce using rule 64 (strsize -> AMPERSAND STR .)


state 183

    (103) impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 103 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 103 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 103 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 103 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 103 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 103 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 103 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 103 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 103 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 103 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 103 (impresion -> PRINTLN LPAREN IDSTRING RPAREN ENDCHAR .)


state 184

    (100) ifblock -> IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . entrada
    (15) metodo -> . while
    (41) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (49) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (112) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> . LET ID IGUAL valor ENDCHAR
    (115) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (103) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (100) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (94) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (91) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (109) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (85) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (45) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 17
    CONST           shift and go to state 18
    PRINTLN         shift and go to state 19
    LOOP            shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 16
    IO              shift and go to state 22
    WHILE           shift and go to state 23

    cuerpof                        shift and go to state 224
    metodo                         shift and go to state 87
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    entrada                        shift and go to state 13
    while                          shift and go to state 14

state 185

    (107) ifcondicion -> LPAREN comparacion RPAREN signoconect . ifcondicion
    (104) ifcondicion -> . comparacion
    (105) ifcondicion -> . comparacion signoconect ifcondicion
    (106) ifcondicion -> . LPAREN comparacion RPAREN
    (107) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (108) ifcondicion -> . LPAREN ifcondicion RPAREN
    (33) comparacion -> . ID signocompar ID
    (34) comparacion -> . IDCHAR signocompar IDCHAR
    (35) comparacion -> . IDSTRING signocompar IDSTRING
    (42) comparacion -> . INTTYPE signocompar INTTYPE
    (43) comparacion -> . NINTTYPE signocompar NINTTYPE
    (44) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (48) comparacion -> . boolean signocompar boolean
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE

    LPAREN          shift and go to state 48
    ID              shift and go to state 82
    IDCHAR          shift and go to state 41
    IDSTRING        shift and go to state 42
    INTTYPE         shift and go to state 43
    NINTTYPE        shift and go to state 44
    FLOATTYPE       shift and go to state 45
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    comparacion                    shift and go to state 38
    ifcondicion                    shift and go to state 225
    boolean                        shift and go to state 83

state 186

    (101) ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 101 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 101 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 101 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 101 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 101 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 101 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 101 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 101 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 101 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 101 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 101 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 101 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)


state 187

    (85) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN . POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN . POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    POINT           shift and go to state 226


state 188

    (45) while -> WHILE ifparams LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 45 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 45 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 45 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 45 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 45 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 45 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 45 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 45 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 45 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 45 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 45 (while -> WHILE ifparams LLLAVE cuerpof RLLAVE .)


state 189

    (94) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 227


state 190

    (95) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 228


state 191

    (97) params -> ID COLON datatype .
    (98) params -> ID COLON datatype . COMA params

    RPAREN          reduce using rule 97 (params -> ID COLON datatype .)
    COMA            shift and go to state 229


state 192

    (25) datatype -> intsize .

    COMA            reduce using rule 25 (datatype -> intsize .)
    RPAREN          reduce using rule 25 (datatype -> intsize .)
    LLLAVE          reduce using rule 25 (datatype -> intsize .)


state 193

    (26) datatype -> uintsize .

    COMA            reduce using rule 26 (datatype -> uintsize .)
    RPAREN          reduce using rule 26 (datatype -> uintsize .)
    LLLAVE          reduce using rule 26 (datatype -> uintsize .)


state 194

    (27) datatype -> floatsize .

    COMA            reduce using rule 27 (datatype -> floatsize .)
    RPAREN          reduce using rule 27 (datatype -> floatsize .)
    LLLAVE          reduce using rule 27 (datatype -> floatsize .)


state 195

    (28) datatype -> strsize .

    COMA            reduce using rule 28 (datatype -> strsize .)
    RPAREN          reduce using rule 28 (datatype -> strsize .)
    LLLAVE          reduce using rule 28 (datatype -> strsize .)


state 196

    (29) datatype -> STRING .

    COMA            reduce using rule 29 (datatype -> STRING .)
    RPAREN          reduce using rule 29 (datatype -> STRING .)
    LLLAVE          reduce using rule 29 (datatype -> STRING .)


state 197

    (30) datatype -> BOOL .

    COMA            reduce using rule 30 (datatype -> BOOL .)
    RPAREN          reduce using rule 30 (datatype -> BOOL .)
    LLLAVE          reduce using rule 30 (datatype -> BOOL .)


state 198

    (99) funcion -> FN ID LPAREN params RPAREN LLLAVE . metodo RLLAVE
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . entrada
    (15) metodo -> . while
    (41) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (49) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (112) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> . LET ID IGUAL valor ENDCHAR
    (115) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (103) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (100) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (94) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (91) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (109) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (85) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (45) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 17
    CONST           shift and go to state 18
    PRINTLN         shift and go to state 19
    LOOP            shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 16
    IO              shift and go to state 22
    WHILE           shift and go to state 23

    metodo                         shift and go to state 230
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    entrada                        shift and go to state 13
    while                          shift and go to state 14

state 199

    (110) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof ID RLLAVE
    (25) datatype -> . intsize
    (26) datatype -> . uintsize
    (27) datatype -> . floatsize
    (28) datatype -> . strsize
    (29) datatype -> . STRING
    (30) datatype -> . BOOL
    (36) intsize -> . INT8
    (37) intsize -> . INT16
    (38) intsize -> . INT32
    (39) intsize -> . INT64
    (40) intsize -> . INT128
    (52) uintsize -> . UINT8
    (53) uintsize -> . UINT16
    (54) uintsize -> . UINT32
    (55) uintsize -> . UINT64
    (56) uintsize -> . UINT128
    (46) floatsize -> . FLOAT32
    (47) floatsize -> . FLOAT64
    (63) strsize -> . AMPERSAND COMILLA STATIC STR
    (64) strsize -> . AMPERSAND STR

    STRING          shift and go to state 196
    BOOL            shift and go to state 197
    INT8            shift and go to state 118
    INT16           shift and go to state 119
    INT32           shift and go to state 120
    INT64           shift and go to state 121
    INT128          shift and go to state 122
    UINT8           shift and go to state 123
    UINT16          shift and go to state 124
    UINT32          shift and go to state 125
    UINT64          shift and go to state 126
    UINT128         shift and go to state 127
    FLOAT32         shift and go to state 128
    FLOAT64         shift and go to state 129
    AMPERSAND       shift and go to state 130

    datatype                       shift and go to state 231
    intsize                        shift and go to state 192
    uintsize                       shift and go to state 193
    floatsize                      shift and go to state 194
    strsize                        shift and go to state 195

state 200

    (109) vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 232


state 201

    (116) llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 233


state 202

    (117) llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 117 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 117 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 117 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 117 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 117 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 117 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 117 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 117 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    IO              reduce using rule 117 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    WHILE           reduce using rule 117 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 117 (llpopback -> ID POINT POP_BACK LPAREN RPAREN ENDCHAR .)


state 203

    (41) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR

    NEW             shift and go to state 234


state 204

    (112) asignacion -> LET MUT ID IGUAL valor ENDCHAR .

    $end            reduce using rule 112 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    RLLAVE          reduce using rule 112 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    LET             reduce using rule 112 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    CONST           reduce using rule 112 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    PRINTLN         reduce using rule 112 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    LOOP            reduce using rule 112 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    IF              reduce using rule 112 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    ID              reduce using rule 112 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    IO              reduce using rule 112 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    WHILE           reduce using rule 112 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)
    RETURN          reduce using rule 112 (asignacion -> LET MUT ID IGUAL valor ENDCHAR .)


state 205

    (113) asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .

    $end            reduce using rule 113 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RLLAVE          reduce using rule 113 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LET             reduce using rule 113 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    CONST           reduce using rule 113 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    PRINTLN         reduce using rule 113 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LOOP            reduce using rule 113 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IF              reduce using rule 113 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    ID              reduce using rule 113 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IO              reduce using rule 113 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    WHILE           reduce using rule 113 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RETURN          reduce using rule 113 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)


state 206

    (115) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR
    (77) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR

    NEW             shift and go to state 235


state 207

    (51) hashmap -> HASHMAP DOSDOBLEPUNTOS . NEW LPAREN RPAREN

    NEW             shift and go to state 236


state 208

    (81) conectores -> ID signoconect ID .

    ENDCHAR         reduce using rule 81 (conectores -> ID signoconect ID .)


state 209

    (57) expresion -> valornumerico signo valornumerico .

    ENDCHAR         reduce using rule 57 (expresion -> valornumerico signo valornumerico .)


state 210

    (58) valornumerico -> NINTTYPE .

    ENDCHAR         reduce using rule 58 (valornumerico -> NINTTYPE .)


state 211

    (59) valornumerico -> INTTYPE .

    ENDCHAR         reduce using rule 59 (valornumerico -> INTTYPE .)


state 212

    (60) valornumerico -> FLOATTYPE .

    ENDCHAR         reduce using rule 60 (valornumerico -> FLOATTYPE .)


state 213

    (79) conectores -> boolean signoconect boolean .

    ENDCHAR         reduce using rule 79 (conectores -> boolean signoconect boolean .)


state 214

    (49) asignacion -> CONST ID COLON intsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 237


state 215

    (50) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 238


state 216

    (62) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 239


state 217

    (71) asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE . ENDCHAR

    ENDCHAR         shift and go to state 240


state 218

    (78) asignacion -> CONST ID COLON strsize IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 241


state 219

    (87) asignacion -> CONST ID COLON STRING IGUAL STRING . DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 242


state 220

    (92) asignacion -> CONST ID COLON STRING IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 243


state 221

    (96) asignacion -> CONST ID COLON BOOL IGUAL boolean . ENDCHAR

    ENDCHAR         shift and go to state 244


state 222

    (102) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR . ENDCHAR

    ENDCHAR         shift and go to state 245


state 223

    (63) strsize -> AMPERSAND COMILLA STATIC . STR

    STR             shift and go to state 246


state 224

    (100) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 247


state 225

    (107) ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .

    LLLAVE          reduce using rule 107 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    RPAREN          reduce using rule 107 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    ENDCHAR         reduce using rule 107 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)


state 226

    (85) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT . READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT . READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    READLINE        shift and go to state 248


state 227

    (94) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . entrada
    (15) metodo -> . while
    (41) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (49) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (112) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> . LET ID IGUAL valor ENDCHAR
    (115) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (103) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (100) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (94) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (91) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (109) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (85) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (45) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 17
    CONST           shift and go to state 18
    PRINTLN         shift and go to state 19
    LOOP            shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 16
    IO              shift and go to state 22
    WHILE           shift and go to state 23

    ifblock                        shift and go to state 7
    cuerpof                        shift and go to state 249
    metodo                         shift and go to state 87
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    entrada                        shift and go to state 13
    while                          shift and go to state 14

state 228

    (95) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 95 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 95 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 95 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 95 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 95 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 95 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 95 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 95 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 95 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 95 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 95 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 95 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)


state 229

    (98) params -> ID COLON datatype COMA . params
    (97) params -> . ID COLON datatype
    (98) params -> . ID COLON datatype COMA params

    ID              shift and go to state 89

    params                         shift and go to state 250

state 230

    (99) funcion -> FN ID LPAREN params RPAREN LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 251


state 231

    (110) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof ID RLLAVE

    LLLAVE          shift and go to state 252


state 232

    (109) vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .

    $end            reduce using rule 109 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 109 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    LET             reduce using rule 109 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    CONST           reduce using rule 109 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 109 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    LOOP            reduce using rule 109 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    IF              reduce using rule 109 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    ID              reduce using rule 109 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    IO              reduce using rule 109 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    WHILE           reduce using rule 109 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)
    RETURN          reduce using rule 109 (vectorpush -> ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR .)


state 233

    (116) llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .

    $end            reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    LET             reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    CONST           reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    LOOP            reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    IF              reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    ID              reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    IO              reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    WHILE           reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)
    RETURN          reduce using rule 116 (llpushfront -> ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR .)


state 234

    (41) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 253


state 235

    (115) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR
    (77) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 254


state 236

    (51) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW . LPAREN RPAREN

    LPAREN          shift and go to state 255


state 237

    (49) asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 49 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 49 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 49 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 49 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 49 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 49 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 49 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 49 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 49 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 49 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 49 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)


state 238

    (50) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .

    $end            reduce using rule 50 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 50 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LET             reduce using rule 50 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    CONST           reduce using rule 50 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 50 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LOOP            reduce using rule 50 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IF              reduce using rule 50 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    ID              reduce using rule 50 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IO              reduce using rule 50 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    WHILE           reduce using rule 50 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RETURN          reduce using rule 50 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)


state 239

    (62) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 62 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 62 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 62 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 62 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 62 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 62 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 62 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 62 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IO              reduce using rule 62 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    WHILE           reduce using rule 62 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 62 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)


state 240

    (71) asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .

    $end            reduce using rule 71 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    RLLAVE          reduce using rule 71 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    LET             reduce using rule 71 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    CONST           reduce using rule 71 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    PRINTLN         reduce using rule 71 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    LOOP            reduce using rule 71 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IF              reduce using rule 71 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    ID              reduce using rule 71 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IO              reduce using rule 71 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    WHILE           reduce using rule 71 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    RETURN          reduce using rule 71 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)


state 241

    (78) asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 78 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 78 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 78 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 78 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 78 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 78 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 78 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 78 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IO              reduce using rule 78 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    WHILE           reduce using rule 78 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 78 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)


state 242

    (87) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS . FROM LPAREN IDSTRING RPAREN ENDCHAR

    FROM            shift and go to state 256


state 243

    (92) asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 92 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 92 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 92 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 92 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 92 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 92 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 92 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 92 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IO              reduce using rule 92 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    WHILE           reduce using rule 92 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 92 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)


state 244

    (96) asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .

    $end            reduce using rule 96 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RLLAVE          reduce using rule 96 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LET             reduce using rule 96 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    CONST           reduce using rule 96 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    PRINTLN         reduce using rule 96 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LOOP            reduce using rule 96 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IF              reduce using rule 96 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    ID              reduce using rule 96 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IO              reduce using rule 96 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    WHILE           reduce using rule 96 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RETURN          reduce using rule 96 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)


state 245

    (102) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .

    $end            reduce using rule 102 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RLLAVE          reduce using rule 102 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LET             reduce using rule 102 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    CONST           reduce using rule 102 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    PRINTLN         reduce using rule 102 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LOOP            reduce using rule 102 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IF              reduce using rule 102 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    ID              reduce using rule 102 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IO              reduce using rule 102 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    WHILE           reduce using rule 102 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RETURN          reduce using rule 102 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)


state 246

    (63) strsize -> AMPERSAND COMILLA STATIC STR .

    IGUAL           reduce using rule 63 (strsize -> AMPERSAND COMILLA STATIC STR .)
    COMA            reduce using rule 63 (strsize -> AMPERSAND COMILLA STATIC STR .)
    RPAREN          reduce using rule 63 (strsize -> AMPERSAND COMILLA STATIC STR .)
    LLLAVE          reduce using rule 63 (strsize -> AMPERSAND COMILLA STATIC STR .)


state 247

    (100) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 100 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 100 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 100 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 100 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 100 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 100 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 100 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 100 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 100 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 100 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 100 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 100 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 248

    (85) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE . LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE . LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 257


state 249

    (94) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 258


state 250

    (98) params -> ID COLON datatype COMA params .

    RPAREN          reduce using rule 98 (params -> ID COLON datatype COMA params .)


state 251

    (99) funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE .

    $end            reduce using rule 99 (funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE .)


state 252

    (110) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof RETURN ifparams ENDCHAR RLLAVE
    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof ID RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (5) metodo -> . asignacion
    (6) metodo -> . impresion
    (7) metodo -> . loop
    (8) metodo -> . ifblock
    (9) metodo -> . elseifblock
    (10) metodo -> . elseblock
    (11) metodo -> . vectorpush
    (12) metodo -> . llpushfront
    (13) metodo -> . llpopback
    (14) metodo -> . entrada
    (15) metodo -> . while
    (41) asignacion -> . LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (49) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (50) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (62) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (71) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (78) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (87) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (92) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (96) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (102) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (112) asignacion -> . LET MUT ID IGUAL valor ENDCHAR
    (113) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (114) asignacion -> . LET ID IGUAL valor ENDCHAR
    (115) asignacion -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (103) impresion -> . PRINTLN LPAREN IDSTRING RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (100) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (101) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (94) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (95) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (90) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (91) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (109) vectorpush -> . ID POINT PUSH LPAREN INTTYPE RPAREN ENDCHAR
    (116) llpushfront -> . ID POINT PUSH_FRONT LPAREN INTTYPE RPAREN ENDCHAR
    (117) llpopback -> . ID POINT POP_BACK LPAREN RPAREN ENDCHAR
    (85) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> . IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
    (45) while -> . WHILE ifparams LLLAVE cuerpof RLLAVE

    LET             shift and go to state 17
    CONST           shift and go to state 18
    PRINTLN         shift and go to state 19
    LOOP            shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 16
    IO              shift and go to state 22
    WHILE           shift and go to state 23

    cuerpof                        shift and go to state 259
    metodo                         shift and go to state 87
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    loop                           shift and go to state 6
    ifblock                        shift and go to state 7
    elseifblock                    shift and go to state 8
    elseblock                      shift and go to state 9
    vectorpush                     shift and go to state 10
    llpushfront                    shift and go to state 11
    llpopback                      shift and go to state 12
    entrada                        shift and go to state 13
    while                          shift and go to state 14

state 253

    (41) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 260


state 254

    (115) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR
    (77) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 261


state 255

    (51) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN . RPAREN

    RPAREN          shift and go to state 262


state 256

    (87) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 263


state 257

    (85) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN . AMPERSAND MUT ID RPAREN ENDCHAR
    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN . AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    AMPERSAND       shift and go to state 264


state 258

    (94) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 94 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 94 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 94 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 94 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 94 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 94 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 94 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 94 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 94 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IO              reduce using rule 94 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    WHILE           reduce using rule 94 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 94 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 259

    (110) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . RETURN ifparams ENDCHAR RLLAVE
    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . ID RLLAVE

    RETURN          shift and go to state 266
    ID              shift and go to state 265


state 260

    (41) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 267


state 261

    (115) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR
    (77) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 268


state 262

    (51) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .

    ENDCHAR         reduce using rule 51 (hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .)


state 263

    (87) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 269


state 264

    (85) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND . MUT ID RPAREN ENDCHAR
    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND . MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    MUT             shift and go to state 270


state 265

    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID . RLLAVE

    RLLAVE          shift and go to state 271


state 266

    (110) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN . ifparams ENDCHAR RLLAVE
    (82) ifparams -> . ifcondicion
    (83) ifparams -> . boolean
    (84) ifparams -> . ID
    (104) ifcondicion -> . comparacion
    (105) ifcondicion -> . comparacion signoconect ifcondicion
    (106) ifcondicion -> . LPAREN comparacion RPAREN
    (107) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (108) ifcondicion -> . LPAREN ifcondicion RPAREN
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE
    (33) comparacion -> . ID signocompar ID
    (34) comparacion -> . IDCHAR signocompar IDCHAR
    (35) comparacion -> . IDSTRING signocompar IDSTRING
    (42) comparacion -> . INTTYPE signocompar INTTYPE
    (43) comparacion -> . NINTTYPE signocompar NINTTYPE
    (44) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (48) comparacion -> . boolean signocompar boolean

    ID              shift and go to state 37
    LPAREN          shift and go to state 48
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    IDCHAR          shift and go to state 41
    IDSTRING        shift and go to state 42
    INTTYPE         shift and go to state 43
    NINTTYPE        shift and go to state 44
    FLOATTYPE       shift and go to state 45

    ifparams                       shift and go to state 272
    ifcondicion                    shift and go to state 35
    boolean                        shift and go to state 36
    comparacion                    shift and go to state 38

state 267

    (41) asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 41 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 41 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 41 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 41 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 41 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 41 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 41 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 41 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IO              reduce using rule 41 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    WHILE           reduce using rule 41 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 41 (asignacion -> LET MUT ID IGUAL VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)


state 268

    (115) asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .
    (77) linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 115 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 115 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 115 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 115 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 115 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 115 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 115 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 115 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IO              reduce using rule 115 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    WHILE           reduce using rule 115 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 115 (asignacion -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ENDCHAR         reduce using rule 77 (linkedlist -> LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)


state 269

    (87) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 273


state 270

    (85) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT . ID RPAREN ENDCHAR
    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT . ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    ID              shift and go to state 274


state 271

    (111) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .

    $end            reduce using rule 111 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .)


state 272

    (110) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams . ENDCHAR RLLAVE

    ENDCHAR         shift and go to state 275


state 273

    (87) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 276


state 274

    (85) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID . RPAREN ENDCHAR
    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID . RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    RPAREN          shift and go to state 277


state 275

    (110) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR . RLLAVE

    RLLAVE          shift and go to state 278


state 276

    (87) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 87 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 87 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 87 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 87 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 87 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 87 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 87 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 87 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 87 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 87 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 87 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)


state 277

    (85) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN . ENDCHAR
    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN . POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    ENDCHAR         shift and go to state 280
    POINT           shift and go to state 279


state 278

    (110) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .

    $end            reduce using rule 110 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .)


state 279

    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT . EXPECT LPAREN IDSTRING RPAREN ENDCHAR

    EXPECT          shift and go to state 281


state 280

    (85) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .

    $end            reduce using rule 85 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 85 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    LET             reduce using rule 85 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    CONST           reduce using rule 85 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 85 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    LOOP            reduce using rule 85 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    IF              reduce using rule 85 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    ID              reduce using rule 85 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    IO              reduce using rule 85 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    WHILE           reduce using rule 85 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)
    RETURN          reduce using rule 85 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR .)


state 281

    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 282


state 282

    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 283


state 283

    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 284


state 284

    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 285


state 285

    (86) entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 86 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 86 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 86 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 86 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 86 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 86 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 86 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 86 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    IO              reduce using rule 86 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    WHILE           reduce using rule 86 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 86 (entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 62 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 63 resolved as shift
WARNING: shift/reduce conflict for ID in state 87 resolved as shift
