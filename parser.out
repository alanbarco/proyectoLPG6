Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASYNC
    AWAIT
    BREAK
    CONTINUE
    DIVASIGN
    DOLAR
    DYN
    ENUM
    ERR
    FINAL
    FOR
    FORMAT
    IMPL
    IN
    INPUT
    INTERRO
    LCOR
    MAINFN
    MATCH
    MOVE
    MULTIASIGN
    OK
    PARSE
    POINTERSIZE
    PRIV
    PUB
    RCOR
    REF
    RESTAASIGN
    SELF
    SIZEOF
    STRUCT
    SUMAASIGN
    SUPER
    TYPE
    TYPEOF
    UNSAFE
    UNWRAPOR
    USE
    WHERE

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> metodo
Rule 2     cuerpo -> funcion
Rule 3     cuerpof -> metodo
Rule 4     cuerpof -> metodo cuerpof
Rule 5     asignacion -> LET MUT ID IGUAL valorPam ENDCHAR
Rule 6     asignacion -> LET MUT ID IGUAL estructuras ENDCHAR
Rule 7     metodo -> asignacion
Rule 8     metodo -> impresion
Rule 9     metodo -> comparacion
Rule 10    metodo -> linkedlist
Rule 11    metodo -> loop
Rule 12    metodo -> conectores
Rule 13    metodo -> ifblock
Rule 14    metodo -> elseifblock
Rule 15    metodo -> elseblock
Rule 16    asignacion -> LET ID IGUAL valorPam ENDCHAR
Rule 17    asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
Rule 18    asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
Rule 19    valorPam -> valornumerico
Rule 20    valorPam -> TRUE
Rule 21    valorPam -> FALSE
Rule 22    valorPam -> ID
Rule 23    valorPam -> IDCHAR
Rule 24    valorPam -> IDSTRING
Rule 25    valorPam -> expresion
Rule 26    valorPam -> conectores
Rule 27    valorPam -> comparacion
Rule 28    asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
Rule 29    comparacion -> ID signocompar ID
Rule 30    comparacion -> IDCHAR signocompar IDCHAR
Rule 31    comparacion -> IDSTRING signocompar IDSTRING
Rule 32    asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
Rule 33    asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
Rule 34    comparacion -> INTTYPE signocompar INTTYPE
Rule 35    comparacion -> NINTTYPE signocompar NINTTYPE
Rule 36    comparacion -> FLOATTYPE signocompar FLOATTYPE
Rule 37    asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
Rule 38    estructuras -> linkedlist
Rule 39    estructuras -> hashmap
Rule 40    estructuras -> vec
Rule 41    comparacion -> boolean signocompar boolean
Rule 42    asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
Rule 43    valor -> INTTYPE
Rule 44    valor -> FLOATTYPE
Rule 45    valor -> NINTTYPE
Rule 46    valor -> ID
Rule 47    valor -> TRUE
Rule 48    valor -> FALSE
Rule 49    valor -> IDCHAR
Rule 50    valor -> IDSTRING
Rule 51    asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR
Rule 52    while -> WHILE ifparams LLLAVE cuerpof RLLAVE
Rule 53    asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
Rule 54    datatype -> intsize
Rule 55    datatype -> uintsize
Rule 56    datatype -> floatsize
Rule 57    datatype -> strsize
Rule 58    datatype -> STRING
Rule 59    hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
Rule 60    signocompar -> MAYORQUE
Rule 61    signocompar -> MENORQUE
Rule 62    signocompar -> DIFERENTE
Rule 63    signocompar -> IDENTICO
Rule 64    vec -> VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN
Rule 65    intsize -> INT8
Rule 66    intsize -> INT16
Rule 67    intsize -> INT32
Rule 68    intsize -> INT64
Rule 69    intsize -> INT128
Rule 70    expresion -> valornumerico signo valornumerico
Rule 71    linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
Rule 72    conectores -> boolean signoconect boolean
Rule 73    conectores -> EXCLAM boolean
Rule 74    conectores -> ID signoconect ID
Rule 75    valornumerico -> NINTTYPE
Rule 76    valornumerico -> INTTYPE
Rule 77    valornumerico -> FLOATTYPE
Rule 78    valornumerico -> NFLOATTYPE
Rule 79    floatsize -> FLOAT32
Rule 80    floatsize -> FLOAT64
Rule 81    signoconect -> DAMPERSAND
Rule 82    signoconect -> OR
Rule 83    signo -> PLUS
Rule 84    signo -> TIMES
Rule 85    signo -> MINUS
Rule 86    signo -> PORCENTAJE
Rule 87    signo -> DIVIDE
Rule 88    uintsize -> UINT8
Rule 89    uintsize -> UINT16
Rule 90    uintsize -> UINT32
Rule 91    uintsize -> UINT64
Rule 92    uintsize -> UINT128
Rule 93    loop -> LOOP LLLAVE metodo RLLAVE
Rule 94    params -> ID COLON datatype
Rule 95    params -> ID COLON datatype COMA params
Rule 96    strsize -> AMPERSAND COMILLA STATIC STR
Rule 97    strsize -> AMPERSAND STR
Rule 98    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN ENDCHAR
Rule 99    entrada -> IO DOSDOBLEPUNTOS STDIN LPAREN RPAREN POINT READLINE LPAREN AMPERSAND MUT ID RPAREN POINT EXPECT LPAREN IDSTRING RPAREN ENDCHAR
Rule 100   funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE
Rule 101   boolean -> TRUE
Rule 102   boolean -> FALSE
Rule 103   impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR
Rule 104   ifparams -> ifcondicion
Rule 105   ifparams -> boolean
Rule 106   ifparams -> ID
Rule 107   elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE
Rule 108   elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE
Rule 109   elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 110   elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
Rule 111   ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
Rule 112   ifblock -> IF ifparams LLLAVE cuerpof RLLAVE
Rule 113   ifcondicion -> comparacion
Rule 114   ifcondicion -> comparacion signoconect ifcondicion
Rule 115   ifcondicion -> LPAREN comparacion RPAREN
Rule 116   ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion
Rule 117   ifcondicion -> LPAREN ifcondicion RPAREN
Rule 118   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
Rule 119   funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

Terminals, with rules where they appear

AMPERSAND            : 96 97 98 99
ARROWOPT             : 118 119
ASYNC                : 
AWAIT                : 
BOOL                 : 51
BREAK                : 
CHAR                 : 53
COLON                : 17 18 28 32 33 37 42 51 53 94 95
COMA                 : 95
COMILLA              : 96
CONST                : 17 18 28 32 33 37 42 51 53
CONTINUE             : 
DAMPERSAND           : 81
DIFERENTE            : 62
DIVASIGN             : 
DIVIDE               : 87
DOLAR                : 
DOSDOBLEPUNTOS       : 37 59 64 71 98 99
DYN                  : 
ELSE                 : 107 108 109 110
ENDCHAR              : 5 6 16 17 18 28 32 33 37 42 51 53 71 98 99 103 118
ENUM                 : 
ERR                  : 
EXCLAM               : 73
EXPECT               : 99
FALSE                : 21 48 102
FINAL                : 
FLOAT32              : 79
FLOAT64              : 80
FLOATTYPE            : 32 36 36 44 77
FN                   : 100 118 119
FOR                  : 
FORMAT               : 
FROM                 : 37
HASHMAP              : 59
ID                   : 5 6 16 17 18 22 28 29 29 32 33 37 42 46 51 53 71 74 74 94 95 98 99 100 106 118 119 119
IDCHAR               : 23 30 30 49 53
IDENTICO             : 63
IDSTRING             : 24 31 31 33 37 42 50 99
IF                   : 109 110 111 112
IGUAL                : 5 6 16 17 18 28 32 33 37 42 51 53 71
IMPL                 : 
IN                   : 
INPUT                : 
INT128               : 69
INT16                : 66
INT32                : 67
INT64                : 68
INT8                 : 65
INTERRO              : 
INTTYPE              : 17 28 34 34 43 76
IO                   : 98 99
LCOR                 : 
LET                  : 5 6 16 71
LINKEDLIST           : 71
LLLAVE               : 52 93 100 107 108 109 110 111 112 118 119
LOOP                 : 93
LPAREN               : 37 59 64 71 98 98 99 99 99 100 103 109 111 115 116 117 118 119
MAINFN               : 
MATCH                : 
MAYORQUE             : 60
MENORQUE             : 61
MINUS                : 85
MOVE                 : 
MULTIASIGN           : 
MUT                  : 5 6 71 98 99
NEW                  : 59 64 71
NFLOATTYPE           : 78
NINTTYPE             : 18 35 35 45 75
OK                   : 
OR                   : 82
PARSE                : 
PLUS                 : 83
POINT                : 98 99 99
POINTERSIZE          : 
PORCENTAJE           : 86
PRINTLN              : 103
PRIV                 : 
PUB                  : 
RCOR                 : 
READLINE             : 98 99
REF                  : 
RESTAASIGN           : 
RETURN               : 118
RLLAVE               : 52 93 100 107 108 109 110 111 112 118 119
RPAREN               : 37 59 64 71 98 98 99 99 99 100 103 109 111 115 116 117 118 119
SELF                 : 
SIZEOF               : 
STATIC               : 96
STDIN                : 98 99
STR                  : 96 97
STRING               : 37 37 42 58
STRUCT               : 
SUMAASIGN            : 
SUPER                : 
TIMES                : 84
TRUE                 : 20 47 101
TYPE                 : 
TYPEOF               : 
UINT128              : 92
UINT16               : 89
UINT32               : 90
UINT64               : 91
UINT8                : 88
UNSAFE               : 
UNWRAPOR             : 
USE                  : 
VEC                  : 64
WHERE                : 
WHILE                : 52
error                : 

Nonterminals, with rules where they appear

asignacion           : 7
boolean              : 41 41 51 72 72 73 105
comparacion          : 9 27 113 114 115 116
conectores           : 12 26
cuerpo               : 0
cuerpof              : 4 52 107 108 109 110 111 112 118 119
datatype             : 94 95 118 119
elseblock            : 15
elseifblock          : 14 108
entrada              : 
estructuras          : 6
expresion            : 25
floatsize            : 32 56
funcion              : 2
hashmap              : 39
ifblock              : 13 107 109 110
ifcondicion          : 104 114 116 117
ifparams             : 52 109 110 111 112 118
impresion            : 8
intsize              : 17 18 54
linkedlist           : 10 38
loop                 : 11
metodo               : 1 3 4 93 100
params               : 95 100 118 119
signo                : 70
signocompar          : 29 30 31 34 35 36 41
signoconect          : 72 74 114 116
strsize              : 33 57
uintsize             : 28 55
valor                : 103
valorPam             : 5 16
valornumerico        : 19 70 70
vec                  : 40
while                : 

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . metodo
    (2) cuerpo -> . funcion
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . comparacion
    (10) metodo -> . linkedlist
    (11) metodo -> . loop
    (12) metodo -> . conectores
    (13) metodo -> . ifblock
    (14) metodo -> . elseifblock
    (15) metodo -> . elseblock
    (100) funcion -> . FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE
    (118) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (119) funcion -> . FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (5) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (16) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (103) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (108) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    FN              shift and go to state 13
    LET             shift and go to state 15
    CONST           shift and go to state 16
    PRINTLN         shift and go to state 23
    ID              shift and go to state 14
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LOOP            shift and go to state 24
    EXCLAM          shift and go to state 25
    IF              shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    cuerpo                         shift and go to state 1
    metodo                         shift and go to state 2
    funcion                        shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    boolean                        shift and go to state 21

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> metodo .

    $end            reduce using rule 1 (cuerpo -> metodo .)


state 3

    (2) cuerpo -> funcion .

    $end            reduce using rule 2 (cuerpo -> funcion .)


state 4

    (7) metodo -> asignacion .

    $end            reduce using rule 7 (metodo -> asignacion .)
    RLLAVE          reduce using rule 7 (metodo -> asignacion .)
    LET             reduce using rule 7 (metodo -> asignacion .)
    CONST           reduce using rule 7 (metodo -> asignacion .)
    PRINTLN         reduce using rule 7 (metodo -> asignacion .)
    ID              reduce using rule 7 (metodo -> asignacion .)
    IDCHAR          reduce using rule 7 (metodo -> asignacion .)
    IDSTRING        reduce using rule 7 (metodo -> asignacion .)
    INTTYPE         reduce using rule 7 (metodo -> asignacion .)
    NINTTYPE        reduce using rule 7 (metodo -> asignacion .)
    FLOATTYPE       reduce using rule 7 (metodo -> asignacion .)
    LOOP            reduce using rule 7 (metodo -> asignacion .)
    EXCLAM          reduce using rule 7 (metodo -> asignacion .)
    IF              reduce using rule 7 (metodo -> asignacion .)
    TRUE            reduce using rule 7 (metodo -> asignacion .)
    FALSE           reduce using rule 7 (metodo -> asignacion .)
    RETURN          reduce using rule 7 (metodo -> asignacion .)


state 5

    (8) metodo -> impresion .

    $end            reduce using rule 8 (metodo -> impresion .)
    RLLAVE          reduce using rule 8 (metodo -> impresion .)
    LET             reduce using rule 8 (metodo -> impresion .)
    CONST           reduce using rule 8 (metodo -> impresion .)
    PRINTLN         reduce using rule 8 (metodo -> impresion .)
    ID              reduce using rule 8 (metodo -> impresion .)
    IDCHAR          reduce using rule 8 (metodo -> impresion .)
    IDSTRING        reduce using rule 8 (metodo -> impresion .)
    INTTYPE         reduce using rule 8 (metodo -> impresion .)
    NINTTYPE        reduce using rule 8 (metodo -> impresion .)
    FLOATTYPE       reduce using rule 8 (metodo -> impresion .)
    LOOP            reduce using rule 8 (metodo -> impresion .)
    EXCLAM          reduce using rule 8 (metodo -> impresion .)
    IF              reduce using rule 8 (metodo -> impresion .)
    TRUE            reduce using rule 8 (metodo -> impresion .)
    FALSE           reduce using rule 8 (metodo -> impresion .)
    RETURN          reduce using rule 8 (metodo -> impresion .)


state 6

    (9) metodo -> comparacion .

    $end            reduce using rule 9 (metodo -> comparacion .)
    RLLAVE          reduce using rule 9 (metodo -> comparacion .)
    LET             reduce using rule 9 (metodo -> comparacion .)
    CONST           reduce using rule 9 (metodo -> comparacion .)
    PRINTLN         reduce using rule 9 (metodo -> comparacion .)
    ID              reduce using rule 9 (metodo -> comparacion .)
    IDCHAR          reduce using rule 9 (metodo -> comparacion .)
    IDSTRING        reduce using rule 9 (metodo -> comparacion .)
    INTTYPE         reduce using rule 9 (metodo -> comparacion .)
    NINTTYPE        reduce using rule 9 (metodo -> comparacion .)
    FLOATTYPE       reduce using rule 9 (metodo -> comparacion .)
    LOOP            reduce using rule 9 (metodo -> comparacion .)
    EXCLAM          reduce using rule 9 (metodo -> comparacion .)
    IF              reduce using rule 9 (metodo -> comparacion .)
    TRUE            reduce using rule 9 (metodo -> comparacion .)
    FALSE           reduce using rule 9 (metodo -> comparacion .)
    RETURN          reduce using rule 9 (metodo -> comparacion .)


state 7

    (10) metodo -> linkedlist .

    $end            reduce using rule 10 (metodo -> linkedlist .)
    RLLAVE          reduce using rule 10 (metodo -> linkedlist .)
    LET             reduce using rule 10 (metodo -> linkedlist .)
    CONST           reduce using rule 10 (metodo -> linkedlist .)
    PRINTLN         reduce using rule 10 (metodo -> linkedlist .)
    ID              reduce using rule 10 (metodo -> linkedlist .)
    IDCHAR          reduce using rule 10 (metodo -> linkedlist .)
    IDSTRING        reduce using rule 10 (metodo -> linkedlist .)
    INTTYPE         reduce using rule 10 (metodo -> linkedlist .)
    NINTTYPE        reduce using rule 10 (metodo -> linkedlist .)
    FLOATTYPE       reduce using rule 10 (metodo -> linkedlist .)
    LOOP            reduce using rule 10 (metodo -> linkedlist .)
    EXCLAM          reduce using rule 10 (metodo -> linkedlist .)
    IF              reduce using rule 10 (metodo -> linkedlist .)
    TRUE            reduce using rule 10 (metodo -> linkedlist .)
    FALSE           reduce using rule 10 (metodo -> linkedlist .)
    RETURN          reduce using rule 10 (metodo -> linkedlist .)


state 8

    (11) metodo -> loop .

    $end            reduce using rule 11 (metodo -> loop .)
    RLLAVE          reduce using rule 11 (metodo -> loop .)
    LET             reduce using rule 11 (metodo -> loop .)
    CONST           reduce using rule 11 (metodo -> loop .)
    PRINTLN         reduce using rule 11 (metodo -> loop .)
    ID              reduce using rule 11 (metodo -> loop .)
    IDCHAR          reduce using rule 11 (metodo -> loop .)
    IDSTRING        reduce using rule 11 (metodo -> loop .)
    INTTYPE         reduce using rule 11 (metodo -> loop .)
    NINTTYPE        reduce using rule 11 (metodo -> loop .)
    FLOATTYPE       reduce using rule 11 (metodo -> loop .)
    LOOP            reduce using rule 11 (metodo -> loop .)
    EXCLAM          reduce using rule 11 (metodo -> loop .)
    IF              reduce using rule 11 (metodo -> loop .)
    TRUE            reduce using rule 11 (metodo -> loop .)
    FALSE           reduce using rule 11 (metodo -> loop .)
    RETURN          reduce using rule 11 (metodo -> loop .)


state 9

    (12) metodo -> conectores .

    $end            reduce using rule 12 (metodo -> conectores .)
    RLLAVE          reduce using rule 12 (metodo -> conectores .)
    LET             reduce using rule 12 (metodo -> conectores .)
    CONST           reduce using rule 12 (metodo -> conectores .)
    PRINTLN         reduce using rule 12 (metodo -> conectores .)
    ID              reduce using rule 12 (metodo -> conectores .)
    IDCHAR          reduce using rule 12 (metodo -> conectores .)
    IDSTRING        reduce using rule 12 (metodo -> conectores .)
    INTTYPE         reduce using rule 12 (metodo -> conectores .)
    NINTTYPE        reduce using rule 12 (metodo -> conectores .)
    FLOATTYPE       reduce using rule 12 (metodo -> conectores .)
    LOOP            reduce using rule 12 (metodo -> conectores .)
    EXCLAM          reduce using rule 12 (metodo -> conectores .)
    IF              reduce using rule 12 (metodo -> conectores .)
    TRUE            reduce using rule 12 (metodo -> conectores .)
    FALSE           reduce using rule 12 (metodo -> conectores .)
    RETURN          reduce using rule 12 (metodo -> conectores .)


state 10

    (13) metodo -> ifblock .
    (109) elseifblock -> ifblock . ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> ifblock . ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> ifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 13 (metodo -> ifblock .)
    RLLAVE          reduce using rule 13 (metodo -> ifblock .)
    LET             reduce using rule 13 (metodo -> ifblock .)
    CONST           reduce using rule 13 (metodo -> ifblock .)
    PRINTLN         reduce using rule 13 (metodo -> ifblock .)
    ID              reduce using rule 13 (metodo -> ifblock .)
    IDCHAR          reduce using rule 13 (metodo -> ifblock .)
    IDSTRING        reduce using rule 13 (metodo -> ifblock .)
    INTTYPE         reduce using rule 13 (metodo -> ifblock .)
    NINTTYPE        reduce using rule 13 (metodo -> ifblock .)
    FLOATTYPE       reduce using rule 13 (metodo -> ifblock .)
    LOOP            reduce using rule 13 (metodo -> ifblock .)
    EXCLAM          reduce using rule 13 (metodo -> ifblock .)
    IF              reduce using rule 13 (metodo -> ifblock .)
    TRUE            reduce using rule 13 (metodo -> ifblock .)
    FALSE           reduce using rule 13 (metodo -> ifblock .)
    RETURN          reduce using rule 13 (metodo -> ifblock .)
    ELSE            shift and go to state 29


state 11

    (14) metodo -> elseifblock .
    (108) elseblock -> elseifblock . ELSE LLLAVE cuerpof RLLAVE

    $end            reduce using rule 14 (metodo -> elseifblock .)
    RLLAVE          reduce using rule 14 (metodo -> elseifblock .)
    LET             reduce using rule 14 (metodo -> elseifblock .)
    CONST           reduce using rule 14 (metodo -> elseifblock .)
    PRINTLN         reduce using rule 14 (metodo -> elseifblock .)
    ID              reduce using rule 14 (metodo -> elseifblock .)
    IDCHAR          reduce using rule 14 (metodo -> elseifblock .)
    IDSTRING        reduce using rule 14 (metodo -> elseifblock .)
    INTTYPE         reduce using rule 14 (metodo -> elseifblock .)
    NINTTYPE        reduce using rule 14 (metodo -> elseifblock .)
    FLOATTYPE       reduce using rule 14 (metodo -> elseifblock .)
    LOOP            reduce using rule 14 (metodo -> elseifblock .)
    EXCLAM          reduce using rule 14 (metodo -> elseifblock .)
    IF              reduce using rule 14 (metodo -> elseifblock .)
    TRUE            reduce using rule 14 (metodo -> elseifblock .)
    FALSE           reduce using rule 14 (metodo -> elseifblock .)
    RETURN          reduce using rule 14 (metodo -> elseifblock .)
    ELSE            shift and go to state 30


state 12

    (15) metodo -> elseblock .

    $end            reduce using rule 15 (metodo -> elseblock .)
    RLLAVE          reduce using rule 15 (metodo -> elseblock .)
    LET             reduce using rule 15 (metodo -> elseblock .)
    CONST           reduce using rule 15 (metodo -> elseblock .)
    PRINTLN         reduce using rule 15 (metodo -> elseblock .)
    ID              reduce using rule 15 (metodo -> elseblock .)
    IDCHAR          reduce using rule 15 (metodo -> elseblock .)
    IDSTRING        reduce using rule 15 (metodo -> elseblock .)
    INTTYPE         reduce using rule 15 (metodo -> elseblock .)
    NINTTYPE        reduce using rule 15 (metodo -> elseblock .)
    FLOATTYPE       reduce using rule 15 (metodo -> elseblock .)
    LOOP            reduce using rule 15 (metodo -> elseblock .)
    EXCLAM          reduce using rule 15 (metodo -> elseblock .)
    IF              reduce using rule 15 (metodo -> elseblock .)
    TRUE            reduce using rule 15 (metodo -> elseblock .)
    FALSE           reduce using rule 15 (metodo -> elseblock .)
    RETURN          reduce using rule 15 (metodo -> elseblock .)


state 13

    (100) funcion -> FN . ID LPAREN params RPAREN LLLAVE metodo RLLAVE
    (118) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (119) funcion -> FN . ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    ID              shift and go to state 31


state 14

    (29) comparacion -> ID . signocompar ID
    (74) conectores -> ID . signoconect ID
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO
    (81) signoconect -> . DAMPERSAND
    (82) signoconect -> . OR

    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37
    DAMPERSAND      shift and go to state 38
    OR              shift and go to state 39

    signocompar                    shift and go to state 32
    signoconect                    shift and go to state 33

state 15

    (5) asignacion -> LET . MUT ID IGUAL valorPam ENDCHAR
    (6) asignacion -> LET . MUT ID IGUAL estructuras ENDCHAR
    (16) asignacion -> LET . ID IGUAL valorPam ENDCHAR
    (71) linkedlist -> LET . MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    MUT             shift and go to state 40
    ID              shift and go to state 41


state 16

    (17) asignacion -> CONST . ID COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> CONST . ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> CONST . ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> CONST . ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> CONST . ID COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> CONST . ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> CONST . ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> CONST . ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> CONST . ID COLON CHAR IGUAL IDCHAR ENDCHAR

    ID              shift and go to state 42


state 17

    (34) comparacion -> INTTYPE . signocompar INTTYPE
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 43

state 18

    (35) comparacion -> NINTTYPE . signocompar NINTTYPE
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 44

state 19

    (36) comparacion -> FLOATTYPE . signocompar FLOATTYPE
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 45

state 20

    (31) comparacion -> IDSTRING . signocompar IDSTRING
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 46

state 21

    (41) comparacion -> boolean . signocompar boolean
    (72) conectores -> boolean . signoconect boolean
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO
    (81) signoconect -> . DAMPERSAND
    (82) signoconect -> . OR

    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37
    DAMPERSAND      shift and go to state 38
    OR              shift and go to state 39

    signocompar                    shift and go to state 47
    signoconect                    shift and go to state 48

state 22

    (30) comparacion -> IDCHAR . signocompar IDCHAR
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 49

state 23

    (103) impresion -> PRINTLN . LPAREN valor RPAREN ENDCHAR

    LPAREN          shift and go to state 50


state 24

    (93) loop -> LOOP . LLLAVE metodo RLLAVE

    LLLAVE          shift and go to state 51


state 25

    (73) conectores -> EXCLAM . boolean
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    boolean                        shift and go to state 52

state 26

    (111) ifblock -> IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> IF . ifparams LLLAVE cuerpof RLLAVE
    (104) ifparams -> . ifcondicion
    (105) ifparams -> . boolean
    (106) ifparams -> . ID
    (113) ifcondicion -> . comparacion
    (114) ifcondicion -> . comparacion signoconect ifcondicion
    (115) ifcondicion -> . LPAREN comparacion RPAREN
    (116) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (117) ifcondicion -> . LPAREN ifcondicion RPAREN
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean

    LPAREN          shift and go to state 53
    ID              shift and go to state 57
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19

    ifparams                       shift and go to state 54
    ifcondicion                    shift and go to state 55
    boolean                        shift and go to state 56
    comparacion                    shift and go to state 58

state 27

    (101) boolean -> TRUE .

    MAYORQUE        reduce using rule 101 (boolean -> TRUE .)
    MENORQUE        reduce using rule 101 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 101 (boolean -> TRUE .)
    IDENTICO        reduce using rule 101 (boolean -> TRUE .)
    DAMPERSAND      reduce using rule 101 (boolean -> TRUE .)
    OR              reduce using rule 101 (boolean -> TRUE .)
    $end            reduce using rule 101 (boolean -> TRUE .)
    RLLAVE          reduce using rule 101 (boolean -> TRUE .)
    LET             reduce using rule 101 (boolean -> TRUE .)
    CONST           reduce using rule 101 (boolean -> TRUE .)
    PRINTLN         reduce using rule 101 (boolean -> TRUE .)
    ID              reduce using rule 101 (boolean -> TRUE .)
    IDCHAR          reduce using rule 101 (boolean -> TRUE .)
    IDSTRING        reduce using rule 101 (boolean -> TRUE .)
    INTTYPE         reduce using rule 101 (boolean -> TRUE .)
    NINTTYPE        reduce using rule 101 (boolean -> TRUE .)
    FLOATTYPE       reduce using rule 101 (boolean -> TRUE .)
    LOOP            reduce using rule 101 (boolean -> TRUE .)
    EXCLAM          reduce using rule 101 (boolean -> TRUE .)
    IF              reduce using rule 101 (boolean -> TRUE .)
    TRUE            reduce using rule 101 (boolean -> TRUE .)
    FALSE           reduce using rule 101 (boolean -> TRUE .)
    ENDCHAR         reduce using rule 101 (boolean -> TRUE .)
    RETURN          reduce using rule 101 (boolean -> TRUE .)
    LLLAVE          reduce using rule 101 (boolean -> TRUE .)
    RPAREN          reduce using rule 101 (boolean -> TRUE .)


state 28

    (102) boolean -> FALSE .

    MAYORQUE        reduce using rule 102 (boolean -> FALSE .)
    MENORQUE        reduce using rule 102 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 102 (boolean -> FALSE .)
    IDENTICO        reduce using rule 102 (boolean -> FALSE .)
    DAMPERSAND      reduce using rule 102 (boolean -> FALSE .)
    OR              reduce using rule 102 (boolean -> FALSE .)
    $end            reduce using rule 102 (boolean -> FALSE .)
    RLLAVE          reduce using rule 102 (boolean -> FALSE .)
    LET             reduce using rule 102 (boolean -> FALSE .)
    CONST           reduce using rule 102 (boolean -> FALSE .)
    PRINTLN         reduce using rule 102 (boolean -> FALSE .)
    ID              reduce using rule 102 (boolean -> FALSE .)
    IDCHAR          reduce using rule 102 (boolean -> FALSE .)
    IDSTRING        reduce using rule 102 (boolean -> FALSE .)
    INTTYPE         reduce using rule 102 (boolean -> FALSE .)
    NINTTYPE        reduce using rule 102 (boolean -> FALSE .)
    FLOATTYPE       reduce using rule 102 (boolean -> FALSE .)
    LOOP            reduce using rule 102 (boolean -> FALSE .)
    EXCLAM          reduce using rule 102 (boolean -> FALSE .)
    IF              reduce using rule 102 (boolean -> FALSE .)
    TRUE            reduce using rule 102 (boolean -> FALSE .)
    FALSE           reduce using rule 102 (boolean -> FALSE .)
    ENDCHAR         reduce using rule 102 (boolean -> FALSE .)
    RETURN          reduce using rule 102 (boolean -> FALSE .)
    LLLAVE          reduce using rule 102 (boolean -> FALSE .)
    RPAREN          reduce using rule 102 (boolean -> FALSE .)


state 29

    (109) elseifblock -> ifblock ELSE . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> ifblock ELSE . IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> ifblock ELSE . LLLAVE cuerpof RLLAVE

    IF              shift and go to state 59
    LLLAVE          shift and go to state 60


state 30

    (108) elseblock -> elseifblock ELSE . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 61


state 31

    (100) funcion -> FN ID . LPAREN params RPAREN LLLAVE metodo RLLAVE
    (118) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (119) funcion -> FN ID . LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    LPAREN          shift and go to state 62


state 32

    (29) comparacion -> ID signocompar . ID

    ID              shift and go to state 63


state 33

    (74) conectores -> ID signoconect . ID

    ID              shift and go to state 64


state 34

    (60) signocompar -> MAYORQUE .

    ID              reduce using rule 60 (signocompar -> MAYORQUE .)
    INTTYPE         reduce using rule 60 (signocompar -> MAYORQUE .)
    NINTTYPE        reduce using rule 60 (signocompar -> MAYORQUE .)
    FLOATTYPE       reduce using rule 60 (signocompar -> MAYORQUE .)
    IDSTRING        reduce using rule 60 (signocompar -> MAYORQUE .)
    TRUE            reduce using rule 60 (signocompar -> MAYORQUE .)
    FALSE           reduce using rule 60 (signocompar -> MAYORQUE .)
    IDCHAR          reduce using rule 60 (signocompar -> MAYORQUE .)


state 35

    (61) signocompar -> MENORQUE .

    ID              reduce using rule 61 (signocompar -> MENORQUE .)
    INTTYPE         reduce using rule 61 (signocompar -> MENORQUE .)
    NINTTYPE        reduce using rule 61 (signocompar -> MENORQUE .)
    FLOATTYPE       reduce using rule 61 (signocompar -> MENORQUE .)
    IDSTRING        reduce using rule 61 (signocompar -> MENORQUE .)
    TRUE            reduce using rule 61 (signocompar -> MENORQUE .)
    FALSE           reduce using rule 61 (signocompar -> MENORQUE .)
    IDCHAR          reduce using rule 61 (signocompar -> MENORQUE .)


state 36

    (62) signocompar -> DIFERENTE .

    ID              reduce using rule 62 (signocompar -> DIFERENTE .)
    INTTYPE         reduce using rule 62 (signocompar -> DIFERENTE .)
    NINTTYPE        reduce using rule 62 (signocompar -> DIFERENTE .)
    FLOATTYPE       reduce using rule 62 (signocompar -> DIFERENTE .)
    IDSTRING        reduce using rule 62 (signocompar -> DIFERENTE .)
    TRUE            reduce using rule 62 (signocompar -> DIFERENTE .)
    FALSE           reduce using rule 62 (signocompar -> DIFERENTE .)
    IDCHAR          reduce using rule 62 (signocompar -> DIFERENTE .)


state 37

    (63) signocompar -> IDENTICO .

    ID              reduce using rule 63 (signocompar -> IDENTICO .)
    INTTYPE         reduce using rule 63 (signocompar -> IDENTICO .)
    NINTTYPE        reduce using rule 63 (signocompar -> IDENTICO .)
    FLOATTYPE       reduce using rule 63 (signocompar -> IDENTICO .)
    IDSTRING        reduce using rule 63 (signocompar -> IDENTICO .)
    TRUE            reduce using rule 63 (signocompar -> IDENTICO .)
    FALSE           reduce using rule 63 (signocompar -> IDENTICO .)
    IDCHAR          reduce using rule 63 (signocompar -> IDENTICO .)


state 38

    (81) signoconect -> DAMPERSAND .

    ID              reduce using rule 81 (signoconect -> DAMPERSAND .)
    TRUE            reduce using rule 81 (signoconect -> DAMPERSAND .)
    FALSE           reduce using rule 81 (signoconect -> DAMPERSAND .)
    LPAREN          reduce using rule 81 (signoconect -> DAMPERSAND .)
    IDCHAR          reduce using rule 81 (signoconect -> DAMPERSAND .)
    IDSTRING        reduce using rule 81 (signoconect -> DAMPERSAND .)
    INTTYPE         reduce using rule 81 (signoconect -> DAMPERSAND .)
    NINTTYPE        reduce using rule 81 (signoconect -> DAMPERSAND .)
    FLOATTYPE       reduce using rule 81 (signoconect -> DAMPERSAND .)


state 39

    (82) signoconect -> OR .

    ID              reduce using rule 82 (signoconect -> OR .)
    TRUE            reduce using rule 82 (signoconect -> OR .)
    FALSE           reduce using rule 82 (signoconect -> OR .)
    LPAREN          reduce using rule 82 (signoconect -> OR .)
    IDCHAR          reduce using rule 82 (signoconect -> OR .)
    IDSTRING        reduce using rule 82 (signoconect -> OR .)
    INTTYPE         reduce using rule 82 (signoconect -> OR .)
    NINTTYPE        reduce using rule 82 (signoconect -> OR .)
    FLOATTYPE       reduce using rule 82 (signoconect -> OR .)


state 40

    (5) asignacion -> LET MUT . ID IGUAL valorPam ENDCHAR
    (6) asignacion -> LET MUT . ID IGUAL estructuras ENDCHAR
    (71) linkedlist -> LET MUT . ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    ID              shift and go to state 65


state 41

    (16) asignacion -> LET ID . IGUAL valorPam ENDCHAR

    IGUAL           shift and go to state 66


state 42

    (17) asignacion -> CONST ID . COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> CONST ID . COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> CONST ID . COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> CONST ID . COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> CONST ID . COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> CONST ID . COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> CONST ID . COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> CONST ID . COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> CONST ID . COLON CHAR IGUAL IDCHAR ENDCHAR

    COLON           shift and go to state 67


state 43

    (34) comparacion -> INTTYPE signocompar . INTTYPE

    INTTYPE         shift and go to state 68


state 44

    (35) comparacion -> NINTTYPE signocompar . NINTTYPE

    NINTTYPE        shift and go to state 69


state 45

    (36) comparacion -> FLOATTYPE signocompar . FLOATTYPE

    FLOATTYPE       shift and go to state 70


state 46

    (31) comparacion -> IDSTRING signocompar . IDSTRING

    IDSTRING        shift and go to state 71


state 47

    (41) comparacion -> boolean signocompar . boolean
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    boolean                        shift and go to state 72

state 48

    (72) conectores -> boolean signoconect . boolean
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    boolean                        shift and go to state 73

state 49

    (30) comparacion -> IDCHAR signocompar . IDCHAR

    IDCHAR          shift and go to state 74


state 50

    (103) impresion -> PRINTLN LPAREN . valor RPAREN ENDCHAR
    (43) valor -> . INTTYPE
    (44) valor -> . FLOATTYPE
    (45) valor -> . NINTTYPE
    (46) valor -> . ID
    (47) valor -> . TRUE
    (48) valor -> . FALSE
    (49) valor -> . IDCHAR
    (50) valor -> . IDSTRING

    INTTYPE         shift and go to state 76
    FLOATTYPE       shift and go to state 77
    NINTTYPE        shift and go to state 78
    ID              shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    IDCHAR          shift and go to state 82
    IDSTRING        shift and go to state 83

    valor                          shift and go to state 75

state 51

    (93) loop -> LOOP LLLAVE . metodo RLLAVE
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . comparacion
    (10) metodo -> . linkedlist
    (11) metodo -> . loop
    (12) metodo -> . conectores
    (13) metodo -> . ifblock
    (14) metodo -> . elseifblock
    (15) metodo -> . elseblock
    (5) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (16) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (103) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (108) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    LET             shift and go to state 15
    CONST           shift and go to state 16
    PRINTLN         shift and go to state 23
    ID              shift and go to state 14
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LOOP            shift and go to state 24
    EXCLAM          shift and go to state 25
    IF              shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    metodo                         shift and go to state 84
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    boolean                        shift and go to state 21

state 52

    (73) conectores -> EXCLAM boolean .

    $end            reduce using rule 73 (conectores -> EXCLAM boolean .)
    RLLAVE          reduce using rule 73 (conectores -> EXCLAM boolean .)
    LET             reduce using rule 73 (conectores -> EXCLAM boolean .)
    CONST           reduce using rule 73 (conectores -> EXCLAM boolean .)
    PRINTLN         reduce using rule 73 (conectores -> EXCLAM boolean .)
    ID              reduce using rule 73 (conectores -> EXCLAM boolean .)
    IDCHAR          reduce using rule 73 (conectores -> EXCLAM boolean .)
    IDSTRING        reduce using rule 73 (conectores -> EXCLAM boolean .)
    INTTYPE         reduce using rule 73 (conectores -> EXCLAM boolean .)
    NINTTYPE        reduce using rule 73 (conectores -> EXCLAM boolean .)
    FLOATTYPE       reduce using rule 73 (conectores -> EXCLAM boolean .)
    LOOP            reduce using rule 73 (conectores -> EXCLAM boolean .)
    EXCLAM          reduce using rule 73 (conectores -> EXCLAM boolean .)
    IF              reduce using rule 73 (conectores -> EXCLAM boolean .)
    TRUE            reduce using rule 73 (conectores -> EXCLAM boolean .)
    FALSE           reduce using rule 73 (conectores -> EXCLAM boolean .)
    ENDCHAR         reduce using rule 73 (conectores -> EXCLAM boolean .)
    RETURN          reduce using rule 73 (conectores -> EXCLAM boolean .)


state 53

    (111) ifblock -> IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifcondicion -> LPAREN . comparacion RPAREN
    (116) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (117) ifcondicion -> LPAREN . ifcondicion RPAREN
    (104) ifparams -> . ifcondicion
    (105) ifparams -> . boolean
    (106) ifparams -> . ID
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (113) ifcondicion -> . comparacion
    (114) ifcondicion -> . comparacion signoconect ifcondicion
    (115) ifcondicion -> . LPAREN comparacion RPAREN
    (116) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (117) ifcondicion -> . LPAREN ifcondicion RPAREN
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    ID              shift and go to state 57
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LPAREN          shift and go to state 85
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    ifparams                       shift and go to state 86
    comparacion                    shift and go to state 87
    ifcondicion                    shift and go to state 88
    boolean                        shift and go to state 56

state 54

    (112) ifblock -> IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 89


state 55

    (104) ifparams -> ifcondicion .

    LLLAVE          reduce using rule 104 (ifparams -> ifcondicion .)
    ENDCHAR         reduce using rule 104 (ifparams -> ifcondicion .)


state 56

    (105) ifparams -> boolean .
    (41) comparacion -> boolean . signocompar boolean
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    LLLAVE          reduce using rule 105 (ifparams -> boolean .)
    RPAREN          reduce using rule 105 (ifparams -> boolean .)
    ENDCHAR         reduce using rule 105 (ifparams -> boolean .)
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 47

state 57

    (106) ifparams -> ID .
    (29) comparacion -> ID . signocompar ID
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    LLLAVE          reduce using rule 106 (ifparams -> ID .)
    RPAREN          reduce using rule 106 (ifparams -> ID .)
    ENDCHAR         reduce using rule 106 (ifparams -> ID .)
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 32

state 58

    (113) ifcondicion -> comparacion .
    (114) ifcondicion -> comparacion . signoconect ifcondicion
    (81) signoconect -> . DAMPERSAND
    (82) signoconect -> . OR

    LLLAVE          reduce using rule 113 (ifcondicion -> comparacion .)
    RPAREN          reduce using rule 113 (ifcondicion -> comparacion .)
    ENDCHAR         reduce using rule 113 (ifcondicion -> comparacion .)
    DAMPERSAND      shift and go to state 38
    OR              shift and go to state 39

    signoconect                    shift and go to state 90

state 59

    (109) elseifblock -> ifblock ELSE IF . LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> ifblock ELSE IF . ifparams LLLAVE cuerpof RLLAVE
    (104) ifparams -> . ifcondicion
    (105) ifparams -> . boolean
    (106) ifparams -> . ID
    (113) ifcondicion -> . comparacion
    (114) ifcondicion -> . comparacion signoconect ifcondicion
    (115) ifcondicion -> . LPAREN comparacion RPAREN
    (116) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (117) ifcondicion -> . LPAREN ifcondicion RPAREN
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean

    LPAREN          shift and go to state 91
    ID              shift and go to state 57
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19

    ifparams                       shift and go to state 92
    ifcondicion                    shift and go to state 55
    boolean                        shift and go to state 56
    comparacion                    shift and go to state 58

state 60

    (107) elseblock -> ifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . comparacion
    (10) metodo -> . linkedlist
    (11) metodo -> . loop
    (12) metodo -> . conectores
    (13) metodo -> . ifblock
    (14) metodo -> . elseifblock
    (15) metodo -> . elseblock
    (5) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (16) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (103) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (108) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    LET             shift and go to state 15
    CONST           shift and go to state 16
    PRINTLN         shift and go to state 23
    ID              shift and go to state 14
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LOOP            shift and go to state 24
    EXCLAM          shift and go to state 25
    IF              shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    ifblock                        shift and go to state 10
    cuerpof                        shift and go to state 93
    metodo                         shift and go to state 94
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    boolean                        shift and go to state 21

state 61

    (108) elseblock -> elseifblock ELSE LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . comparacion
    (10) metodo -> . linkedlist
    (11) metodo -> . loop
    (12) metodo -> . conectores
    (13) metodo -> . ifblock
    (14) metodo -> . elseifblock
    (15) metodo -> . elseblock
    (5) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (16) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (103) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (108) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    LET             shift and go to state 15
    CONST           shift and go to state 16
    PRINTLN         shift and go to state 23
    ID              shift and go to state 14
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LOOP            shift and go to state 24
    EXCLAM          shift and go to state 25
    IF              shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    elseifblock                    shift and go to state 11
    cuerpof                        shift and go to state 95
    metodo                         shift and go to state 94
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseblock                      shift and go to state 12
    boolean                        shift and go to state 21

state 62

    (100) funcion -> FN ID LPAREN . params RPAREN LLLAVE metodo RLLAVE
    (118) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (119) funcion -> FN ID LPAREN . params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE
    (94) params -> . ID COLON datatype
    (95) params -> . ID COLON datatype COMA params

    ID              shift and go to state 96

    params                         shift and go to state 97

state 63

    (29) comparacion -> ID signocompar ID .

    $end            reduce using rule 29 (comparacion -> ID signocompar ID .)
    DAMPERSAND      reduce using rule 29 (comparacion -> ID signocompar ID .)
    OR              reduce using rule 29 (comparacion -> ID signocompar ID .)
    LLLAVE          reduce using rule 29 (comparacion -> ID signocompar ID .)
    RLLAVE          reduce using rule 29 (comparacion -> ID signocompar ID .)
    RPAREN          reduce using rule 29 (comparacion -> ID signocompar ID .)
    LET             reduce using rule 29 (comparacion -> ID signocompar ID .)
    CONST           reduce using rule 29 (comparacion -> ID signocompar ID .)
    PRINTLN         reduce using rule 29 (comparacion -> ID signocompar ID .)
    ID              reduce using rule 29 (comparacion -> ID signocompar ID .)
    IDCHAR          reduce using rule 29 (comparacion -> ID signocompar ID .)
    IDSTRING        reduce using rule 29 (comparacion -> ID signocompar ID .)
    INTTYPE         reduce using rule 29 (comparacion -> ID signocompar ID .)
    NINTTYPE        reduce using rule 29 (comparacion -> ID signocompar ID .)
    FLOATTYPE       reduce using rule 29 (comparacion -> ID signocompar ID .)
    LOOP            reduce using rule 29 (comparacion -> ID signocompar ID .)
    EXCLAM          reduce using rule 29 (comparacion -> ID signocompar ID .)
    IF              reduce using rule 29 (comparacion -> ID signocompar ID .)
    TRUE            reduce using rule 29 (comparacion -> ID signocompar ID .)
    FALSE           reduce using rule 29 (comparacion -> ID signocompar ID .)
    ENDCHAR         reduce using rule 29 (comparacion -> ID signocompar ID .)
    RETURN          reduce using rule 29 (comparacion -> ID signocompar ID .)


state 64

    (74) conectores -> ID signoconect ID .

    $end            reduce using rule 74 (conectores -> ID signoconect ID .)
    RLLAVE          reduce using rule 74 (conectores -> ID signoconect ID .)
    LET             reduce using rule 74 (conectores -> ID signoconect ID .)
    CONST           reduce using rule 74 (conectores -> ID signoconect ID .)
    PRINTLN         reduce using rule 74 (conectores -> ID signoconect ID .)
    ID              reduce using rule 74 (conectores -> ID signoconect ID .)
    IDCHAR          reduce using rule 74 (conectores -> ID signoconect ID .)
    IDSTRING        reduce using rule 74 (conectores -> ID signoconect ID .)
    INTTYPE         reduce using rule 74 (conectores -> ID signoconect ID .)
    NINTTYPE        reduce using rule 74 (conectores -> ID signoconect ID .)
    FLOATTYPE       reduce using rule 74 (conectores -> ID signoconect ID .)
    LOOP            reduce using rule 74 (conectores -> ID signoconect ID .)
    EXCLAM          reduce using rule 74 (conectores -> ID signoconect ID .)
    IF              reduce using rule 74 (conectores -> ID signoconect ID .)
    TRUE            reduce using rule 74 (conectores -> ID signoconect ID .)
    FALSE           reduce using rule 74 (conectores -> ID signoconect ID .)
    ENDCHAR         reduce using rule 74 (conectores -> ID signoconect ID .)
    RETURN          reduce using rule 74 (conectores -> ID signoconect ID .)


state 65

    (5) asignacion -> LET MUT ID . IGUAL valorPam ENDCHAR
    (6) asignacion -> LET MUT ID . IGUAL estructuras ENDCHAR
    (71) linkedlist -> LET MUT ID . IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    IGUAL           shift and go to state 98


state 66

    (16) asignacion -> LET ID IGUAL . valorPam ENDCHAR
    (19) valorPam -> . valornumerico
    (20) valorPam -> . TRUE
    (21) valorPam -> . FALSE
    (22) valorPam -> . ID
    (23) valorPam -> . IDCHAR
    (24) valorPam -> . IDSTRING
    (25) valorPam -> . expresion
    (26) valorPam -> . conectores
    (27) valorPam -> . comparacion
    (75) valornumerico -> . NINTTYPE
    (76) valornumerico -> . INTTYPE
    (77) valornumerico -> . FLOATTYPE
    (78) valornumerico -> . NFLOATTYPE
    (70) expresion -> . valornumerico signo valornumerico
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    TRUE            shift and go to state 102
    FALSE           shift and go to state 103
    ID              shift and go to state 99
    IDCHAR          shift and go to state 104
    IDSTRING        shift and go to state 105
    NINTTYPE        shift and go to state 109
    INTTYPE         shift and go to state 110
    FLOATTYPE       shift and go to state 111
    NFLOATTYPE      shift and go to state 112
    EXCLAM          shift and go to state 25

    valorPam                       shift and go to state 100
    valornumerico                  shift and go to state 101
    expresion                      shift and go to state 106
    conectores                     shift and go to state 107
    comparacion                    shift and go to state 108
    boolean                        shift and go to state 113

state 67

    (17) asignacion -> CONST ID COLON . intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> CONST ID COLON . intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> CONST ID COLON . uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> CONST ID COLON . floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> CONST ID COLON . strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> CONST ID COLON . STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> CONST ID COLON . STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> CONST ID COLON . BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> CONST ID COLON . CHAR IGUAL IDCHAR ENDCHAR
    (65) intsize -> . INT8
    (66) intsize -> . INT16
    (67) intsize -> . INT32
    (68) intsize -> . INT64
    (69) intsize -> . INT128
    (88) uintsize -> . UINT8
    (89) uintsize -> . UINT16
    (90) uintsize -> . UINT32
    (91) uintsize -> . UINT64
    (92) uintsize -> . UINT128
    (79) floatsize -> . FLOAT32
    (80) floatsize -> . FLOAT64
    (96) strsize -> . AMPERSAND COMILLA STATIC STR
    (97) strsize -> . AMPERSAND STR

    STRING          shift and go to state 118
    BOOL            shift and go to state 119
    CHAR            shift and go to state 120
    INT8            shift and go to state 121
    INT16           shift and go to state 122
    INT32           shift and go to state 123
    INT64           shift and go to state 124
    INT128          shift and go to state 125
    UINT8           shift and go to state 126
    UINT16          shift and go to state 127
    UINT32          shift and go to state 128
    UINT64          shift and go to state 129
    UINT128         shift and go to state 130
    FLOAT32         shift and go to state 131
    FLOAT64         shift and go to state 132
    AMPERSAND       shift and go to state 133

    intsize                        shift and go to state 114
    uintsize                       shift and go to state 115
    floatsize                      shift and go to state 116
    strsize                        shift and go to state 117

state 68

    (34) comparacion -> INTTYPE signocompar INTTYPE .

    $end            reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    DAMPERSAND      reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    OR              reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    LLLAVE          reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    RLLAVE          reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    RPAREN          reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    LET             reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    CONST           reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    PRINTLN         reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    ID              reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    IDCHAR          reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    IDSTRING        reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    INTTYPE         reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    NINTTYPE        reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    FLOATTYPE       reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    LOOP            reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    EXCLAM          reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    IF              reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    TRUE            reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    FALSE           reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    ENDCHAR         reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)
    RETURN          reduce using rule 34 (comparacion -> INTTYPE signocompar INTTYPE .)


state 69

    (35) comparacion -> NINTTYPE signocompar NINTTYPE .

    $end            reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    DAMPERSAND      reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    OR              reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    LLLAVE          reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    RLLAVE          reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    RPAREN          reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    LET             reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    CONST           reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    PRINTLN         reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    ID              reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    IDCHAR          reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    IDSTRING        reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    INTTYPE         reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    NINTTYPE        reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    FLOATTYPE       reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    LOOP            reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    EXCLAM          reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    IF              reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    TRUE            reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    FALSE           reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    ENDCHAR         reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)
    RETURN          reduce using rule 35 (comparacion -> NINTTYPE signocompar NINTTYPE .)


state 70

    (36) comparacion -> FLOATTYPE signocompar FLOATTYPE .

    $end            reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    DAMPERSAND      reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    OR              reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    LLLAVE          reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    RLLAVE          reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    RPAREN          reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    LET             reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    CONST           reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    PRINTLN         reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    ID              reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    IDCHAR          reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    IDSTRING        reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    INTTYPE         reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    NINTTYPE        reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    FLOATTYPE       reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    LOOP            reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    EXCLAM          reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    IF              reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    TRUE            reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    FALSE           reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    ENDCHAR         reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)
    RETURN          reduce using rule 36 (comparacion -> FLOATTYPE signocompar FLOATTYPE .)


state 71

    (31) comparacion -> IDSTRING signocompar IDSTRING .

    $end            reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    DAMPERSAND      reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    OR              reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    LLLAVE          reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    RLLAVE          reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    RPAREN          reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    LET             reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    CONST           reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    PRINTLN         reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    ID              reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    IDCHAR          reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    IDSTRING        reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    INTTYPE         reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    NINTTYPE        reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    FLOATTYPE       reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    LOOP            reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    EXCLAM          reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    IF              reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    TRUE            reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    FALSE           reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    ENDCHAR         reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)
    RETURN          reduce using rule 31 (comparacion -> IDSTRING signocompar IDSTRING .)


state 72

    (41) comparacion -> boolean signocompar boolean .

    $end            reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    DAMPERSAND      reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    OR              reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    LLLAVE          reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    RLLAVE          reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    RPAREN          reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    LET             reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    CONST           reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    PRINTLN         reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    ID              reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    IDCHAR          reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    IDSTRING        reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    INTTYPE         reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    NINTTYPE        reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    FLOATTYPE       reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    LOOP            reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    EXCLAM          reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    IF              reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    TRUE            reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    FALSE           reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    ENDCHAR         reduce using rule 41 (comparacion -> boolean signocompar boolean .)
    RETURN          reduce using rule 41 (comparacion -> boolean signocompar boolean .)


state 73

    (72) conectores -> boolean signoconect boolean .

    $end            reduce using rule 72 (conectores -> boolean signoconect boolean .)
    RLLAVE          reduce using rule 72 (conectores -> boolean signoconect boolean .)
    LET             reduce using rule 72 (conectores -> boolean signoconect boolean .)
    CONST           reduce using rule 72 (conectores -> boolean signoconect boolean .)
    PRINTLN         reduce using rule 72 (conectores -> boolean signoconect boolean .)
    ID              reduce using rule 72 (conectores -> boolean signoconect boolean .)
    IDCHAR          reduce using rule 72 (conectores -> boolean signoconect boolean .)
    IDSTRING        reduce using rule 72 (conectores -> boolean signoconect boolean .)
    INTTYPE         reduce using rule 72 (conectores -> boolean signoconect boolean .)
    NINTTYPE        reduce using rule 72 (conectores -> boolean signoconect boolean .)
    FLOATTYPE       reduce using rule 72 (conectores -> boolean signoconect boolean .)
    LOOP            reduce using rule 72 (conectores -> boolean signoconect boolean .)
    EXCLAM          reduce using rule 72 (conectores -> boolean signoconect boolean .)
    IF              reduce using rule 72 (conectores -> boolean signoconect boolean .)
    TRUE            reduce using rule 72 (conectores -> boolean signoconect boolean .)
    FALSE           reduce using rule 72 (conectores -> boolean signoconect boolean .)
    ENDCHAR         reduce using rule 72 (conectores -> boolean signoconect boolean .)
    RETURN          reduce using rule 72 (conectores -> boolean signoconect boolean .)


state 74

    (30) comparacion -> IDCHAR signocompar IDCHAR .

    $end            reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    DAMPERSAND      reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    OR              reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    LLLAVE          reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    RLLAVE          reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    RPAREN          reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    LET             reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    CONST           reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    PRINTLN         reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    ID              reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    IDCHAR          reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    IDSTRING        reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    INTTYPE         reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    NINTTYPE        reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    FLOATTYPE       reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    LOOP            reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    EXCLAM          reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    IF              reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    TRUE            reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    FALSE           reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    ENDCHAR         reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)
    RETURN          reduce using rule 30 (comparacion -> IDCHAR signocompar IDCHAR .)


state 75

    (103) impresion -> PRINTLN LPAREN valor . RPAREN ENDCHAR

    RPAREN          shift and go to state 134


state 76

    (43) valor -> INTTYPE .

    RPAREN          reduce using rule 43 (valor -> INTTYPE .)


state 77

    (44) valor -> FLOATTYPE .

    RPAREN          reduce using rule 44 (valor -> FLOATTYPE .)


state 78

    (45) valor -> NINTTYPE .

    RPAREN          reduce using rule 45 (valor -> NINTTYPE .)


state 79

    (46) valor -> ID .

    RPAREN          reduce using rule 46 (valor -> ID .)


state 80

    (47) valor -> TRUE .

    RPAREN          reduce using rule 47 (valor -> TRUE .)


state 81

    (48) valor -> FALSE .

    RPAREN          reduce using rule 48 (valor -> FALSE .)


state 82

    (49) valor -> IDCHAR .

    RPAREN          reduce using rule 49 (valor -> IDCHAR .)


state 83

    (50) valor -> IDSTRING .

    RPAREN          reduce using rule 50 (valor -> IDSTRING .)


state 84

    (93) loop -> LOOP LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 135


state 85

    (115) ifcondicion -> LPAREN . comparacion RPAREN
    (116) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (117) ifcondicion -> LPAREN . ifcondicion RPAREN
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (113) ifcondicion -> . comparacion
    (114) ifcondicion -> . comparacion signoconect ifcondicion
    (115) ifcondicion -> . LPAREN comparacion RPAREN
    (116) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (117) ifcondicion -> . LPAREN ifcondicion RPAREN
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    ID              shift and go to state 137
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LPAREN          shift and go to state 85
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    comparacion                    shift and go to state 87
    ifcondicion                    shift and go to state 136
    boolean                        shift and go to state 138

state 86

    (111) ifblock -> IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 139


state 87

    (115) ifcondicion -> LPAREN comparacion . RPAREN
    (116) ifcondicion -> LPAREN comparacion . RPAREN signoconect ifcondicion
    (113) ifcondicion -> comparacion .
    (114) ifcondicion -> comparacion . signoconect ifcondicion
    (81) signoconect -> . DAMPERSAND
    (82) signoconect -> . OR

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 140
    DAMPERSAND      shift and go to state 38
    OR              shift and go to state 39

  ! RPAREN          [ reduce using rule 113 (ifcondicion -> comparacion .) ]

    signoconect                    shift and go to state 90

state 88

    (117) ifcondicion -> LPAREN ifcondicion . RPAREN
    (104) ifparams -> ifcondicion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 141

  ! RPAREN          [ reduce using rule 104 (ifparams -> ifcondicion .) ]


state 89

    (112) ifblock -> IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . comparacion
    (10) metodo -> . linkedlist
    (11) metodo -> . loop
    (12) metodo -> . conectores
    (13) metodo -> . ifblock
    (14) metodo -> . elseifblock
    (15) metodo -> . elseblock
    (5) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (16) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (103) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (108) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    LET             shift and go to state 15
    CONST           shift and go to state 16
    PRINTLN         shift and go to state 23
    ID              shift and go to state 14
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LOOP            shift and go to state 24
    EXCLAM          shift and go to state 25
    IF              shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    cuerpof                        shift and go to state 142
    metodo                         shift and go to state 94
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    boolean                        shift and go to state 21

state 90

    (114) ifcondicion -> comparacion signoconect . ifcondicion
    (113) ifcondicion -> . comparacion
    (114) ifcondicion -> . comparacion signoconect ifcondicion
    (115) ifcondicion -> . LPAREN comparacion RPAREN
    (116) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (117) ifcondicion -> . LPAREN ifcondicion RPAREN
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    LPAREN          shift and go to state 85
    ID              shift and go to state 137
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    comparacion                    shift and go to state 58
    ifcondicion                    shift and go to state 143
    boolean                        shift and go to state 138

state 91

    (109) elseifblock -> ifblock ELSE IF LPAREN . ifparams RPAREN LLLAVE cuerpof RLLAVE
    (115) ifcondicion -> LPAREN . comparacion RPAREN
    (116) ifcondicion -> LPAREN . comparacion RPAREN signoconect ifcondicion
    (117) ifcondicion -> LPAREN . ifcondicion RPAREN
    (104) ifparams -> . ifcondicion
    (105) ifparams -> . boolean
    (106) ifparams -> . ID
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (113) ifcondicion -> . comparacion
    (114) ifcondicion -> . comparacion signoconect ifcondicion
    (115) ifcondicion -> . LPAREN comparacion RPAREN
    (116) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (117) ifcondicion -> . LPAREN ifcondicion RPAREN
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    ID              shift and go to state 57
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LPAREN          shift and go to state 85
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    ifparams                       shift and go to state 144
    comparacion                    shift and go to state 87
    ifcondicion                    shift and go to state 88
    boolean                        shift and go to state 56

state 92

    (110) elseifblock -> ifblock ELSE IF ifparams . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 145


state 93

    (107) elseblock -> ifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 146


state 94

    (3) cuerpof -> metodo .
    (4) cuerpof -> metodo . cuerpof
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . comparacion
    (10) metodo -> . linkedlist
    (11) metodo -> . loop
    (12) metodo -> . conectores
    (13) metodo -> . ifblock
    (14) metodo -> . elseifblock
    (15) metodo -> . elseblock
    (5) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (16) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (103) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (108) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          reduce using rule 3 (cuerpof -> metodo .)
    RETURN          reduce using rule 3 (cuerpof -> metodo .)
    LET             shift and go to state 15
    CONST           shift and go to state 16
    PRINTLN         shift and go to state 23
    ID              shift and go to state 14
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LOOP            shift and go to state 24
    EXCLAM          shift and go to state 25
    IF              shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

  ! ID              [ reduce using rule 3 (cuerpof -> metodo .) ]

    metodo                         shift and go to state 94
    cuerpof                        shift and go to state 147
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    boolean                        shift and go to state 21

state 95

    (108) elseblock -> elseifblock ELSE LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 148


state 96

    (94) params -> ID . COLON datatype
    (95) params -> ID . COLON datatype COMA params

    COLON           shift and go to state 149


state 97

    (100) funcion -> FN ID LPAREN params . RPAREN LLLAVE metodo RLLAVE
    (118) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (119) funcion -> FN ID LPAREN params . RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    RPAREN          shift and go to state 150


state 98

    (5) asignacion -> LET MUT ID IGUAL . valorPam ENDCHAR
    (6) asignacion -> LET MUT ID IGUAL . estructuras ENDCHAR
    (71) linkedlist -> LET MUT ID IGUAL . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (19) valorPam -> . valornumerico
    (20) valorPam -> . TRUE
    (21) valorPam -> . FALSE
    (22) valorPam -> . ID
    (23) valorPam -> . IDCHAR
    (24) valorPam -> . IDSTRING
    (25) valorPam -> . expresion
    (26) valorPam -> . conectores
    (27) valorPam -> . comparacion
    (38) estructuras -> . linkedlist
    (39) estructuras -> . hashmap
    (40) estructuras -> . vec
    (75) valornumerico -> . NINTTYPE
    (76) valornumerico -> . INTTYPE
    (77) valornumerico -> . FLOATTYPE
    (78) valornumerico -> . NFLOATTYPE
    (70) expresion -> . valornumerico signo valornumerico
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (59) hashmap -> . HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN
    (64) vec -> . VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    LINKEDLIST      shift and go to state 154
    TRUE            shift and go to state 102
    FALSE           shift and go to state 103
    ID              shift and go to state 99
    IDCHAR          shift and go to state 104
    IDSTRING        shift and go to state 105
    NINTTYPE        shift and go to state 109
    INTTYPE         shift and go to state 110
    FLOATTYPE       shift and go to state 111
    NFLOATTYPE      shift and go to state 112
    EXCLAM          shift and go to state 25
    LET             shift and go to state 151
    HASHMAP         shift and go to state 158
    VEC             shift and go to state 159

    valorPam                       shift and go to state 152
    estructuras                    shift and go to state 153
    valornumerico                  shift and go to state 101
    expresion                      shift and go to state 106
    conectores                     shift and go to state 107
    comparacion                    shift and go to state 108
    linkedlist                     shift and go to state 155
    hashmap                        shift and go to state 156
    vec                            shift and go to state 157
    boolean                        shift and go to state 113

state 99

    (22) valorPam -> ID .
    (74) conectores -> ID . signoconect ID
    (29) comparacion -> ID . signocompar ID
    (81) signoconect -> . DAMPERSAND
    (82) signoconect -> . OR
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 22 (valorPam -> ID .)
    DAMPERSAND      shift and go to state 38
    OR              shift and go to state 39
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signoconect                    shift and go to state 33
    signocompar                    shift and go to state 32

state 100

    (16) asignacion -> LET ID IGUAL valorPam . ENDCHAR

    ENDCHAR         shift and go to state 160


state 101

    (19) valorPam -> valornumerico .
    (70) expresion -> valornumerico . signo valornumerico
    (83) signo -> . PLUS
    (84) signo -> . TIMES
    (85) signo -> . MINUS
    (86) signo -> . PORCENTAJE
    (87) signo -> . DIVIDE

    ENDCHAR         reduce using rule 19 (valorPam -> valornumerico .)
    PLUS            shift and go to state 162
    TIMES           shift and go to state 163
    MINUS           shift and go to state 164
    PORCENTAJE      shift and go to state 165
    DIVIDE          shift and go to state 166

    signo                          shift and go to state 161

state 102

    (20) valorPam -> TRUE .
    (101) boolean -> TRUE .

    ENDCHAR         reduce using rule 20 (valorPam -> TRUE .)
    DAMPERSAND      reduce using rule 101 (boolean -> TRUE .)
    OR              reduce using rule 101 (boolean -> TRUE .)
    MAYORQUE        reduce using rule 101 (boolean -> TRUE .)
    MENORQUE        reduce using rule 101 (boolean -> TRUE .)
    DIFERENTE       reduce using rule 101 (boolean -> TRUE .)
    IDENTICO        reduce using rule 101 (boolean -> TRUE .)


state 103

    (21) valorPam -> FALSE .
    (102) boolean -> FALSE .

    ENDCHAR         reduce using rule 21 (valorPam -> FALSE .)
    DAMPERSAND      reduce using rule 102 (boolean -> FALSE .)
    OR              reduce using rule 102 (boolean -> FALSE .)
    MAYORQUE        reduce using rule 102 (boolean -> FALSE .)
    MENORQUE        reduce using rule 102 (boolean -> FALSE .)
    DIFERENTE       reduce using rule 102 (boolean -> FALSE .)
    IDENTICO        reduce using rule 102 (boolean -> FALSE .)


state 104

    (23) valorPam -> IDCHAR .
    (30) comparacion -> IDCHAR . signocompar IDCHAR
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 23 (valorPam -> IDCHAR .)
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 49

state 105

    (24) valorPam -> IDSTRING .
    (31) comparacion -> IDSTRING . signocompar IDSTRING
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    ENDCHAR         reduce using rule 24 (valorPam -> IDSTRING .)
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 46

state 106

    (25) valorPam -> expresion .

    ENDCHAR         reduce using rule 25 (valorPam -> expresion .)


state 107

    (26) valorPam -> conectores .

    ENDCHAR         reduce using rule 26 (valorPam -> conectores .)


state 108

    (27) valorPam -> comparacion .

    ENDCHAR         reduce using rule 27 (valorPam -> comparacion .)


state 109

    (75) valornumerico -> NINTTYPE .
    (35) comparacion -> NINTTYPE . signocompar NINTTYPE
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    PLUS            reduce using rule 75 (valornumerico -> NINTTYPE .)
    TIMES           reduce using rule 75 (valornumerico -> NINTTYPE .)
    MINUS           reduce using rule 75 (valornumerico -> NINTTYPE .)
    PORCENTAJE      reduce using rule 75 (valornumerico -> NINTTYPE .)
    DIVIDE          reduce using rule 75 (valornumerico -> NINTTYPE .)
    ENDCHAR         reduce using rule 75 (valornumerico -> NINTTYPE .)
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 44

state 110

    (76) valornumerico -> INTTYPE .
    (34) comparacion -> INTTYPE . signocompar INTTYPE
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    PLUS            reduce using rule 76 (valornumerico -> INTTYPE .)
    TIMES           reduce using rule 76 (valornumerico -> INTTYPE .)
    MINUS           reduce using rule 76 (valornumerico -> INTTYPE .)
    PORCENTAJE      reduce using rule 76 (valornumerico -> INTTYPE .)
    DIVIDE          reduce using rule 76 (valornumerico -> INTTYPE .)
    ENDCHAR         reduce using rule 76 (valornumerico -> INTTYPE .)
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 43

state 111

    (77) valornumerico -> FLOATTYPE .
    (36) comparacion -> FLOATTYPE . signocompar FLOATTYPE
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    PLUS            reduce using rule 77 (valornumerico -> FLOATTYPE .)
    TIMES           reduce using rule 77 (valornumerico -> FLOATTYPE .)
    MINUS           reduce using rule 77 (valornumerico -> FLOATTYPE .)
    PORCENTAJE      reduce using rule 77 (valornumerico -> FLOATTYPE .)
    DIVIDE          reduce using rule 77 (valornumerico -> FLOATTYPE .)
    ENDCHAR         reduce using rule 77 (valornumerico -> FLOATTYPE .)
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 45

state 112

    (78) valornumerico -> NFLOATTYPE .

    PLUS            reduce using rule 78 (valornumerico -> NFLOATTYPE .)
    TIMES           reduce using rule 78 (valornumerico -> NFLOATTYPE .)
    MINUS           reduce using rule 78 (valornumerico -> NFLOATTYPE .)
    PORCENTAJE      reduce using rule 78 (valornumerico -> NFLOATTYPE .)
    DIVIDE          reduce using rule 78 (valornumerico -> NFLOATTYPE .)
    ENDCHAR         reduce using rule 78 (valornumerico -> NFLOATTYPE .)


state 113

    (72) conectores -> boolean . signoconect boolean
    (41) comparacion -> boolean . signocompar boolean
    (81) signoconect -> . DAMPERSAND
    (82) signoconect -> . OR
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    DAMPERSAND      shift and go to state 38
    OR              shift and go to state 39
    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signoconect                    shift and go to state 48
    signocompar                    shift and go to state 47

state 114

    (17) asignacion -> CONST ID COLON intsize . IGUAL INTTYPE ENDCHAR
    (18) asignacion -> CONST ID COLON intsize . IGUAL NINTTYPE ENDCHAR

    IGUAL           shift and go to state 167


state 115

    (28) asignacion -> CONST ID COLON uintsize . IGUAL INTTYPE ENDCHAR

    IGUAL           shift and go to state 168


state 116

    (32) asignacion -> CONST ID COLON floatsize . IGUAL FLOATTYPE ENDCHAR

    IGUAL           shift and go to state 169


state 117

    (33) asignacion -> CONST ID COLON strsize . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 170


state 118

    (37) asignacion -> CONST ID COLON STRING . IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> CONST ID COLON STRING . IGUAL IDSTRING ENDCHAR

    IGUAL           shift and go to state 171


state 119

    (51) asignacion -> CONST ID COLON BOOL . IGUAL boolean ENDCHAR

    IGUAL           shift and go to state 172


state 120

    (53) asignacion -> CONST ID COLON CHAR . IGUAL IDCHAR ENDCHAR

    IGUAL           shift and go to state 173


state 121

    (65) intsize -> INT8 .

    IGUAL           reduce using rule 65 (intsize -> INT8 .)
    COMA            reduce using rule 65 (intsize -> INT8 .)
    RPAREN          reduce using rule 65 (intsize -> INT8 .)
    LLLAVE          reduce using rule 65 (intsize -> INT8 .)


state 122

    (66) intsize -> INT16 .

    IGUAL           reduce using rule 66 (intsize -> INT16 .)
    COMA            reduce using rule 66 (intsize -> INT16 .)
    RPAREN          reduce using rule 66 (intsize -> INT16 .)
    LLLAVE          reduce using rule 66 (intsize -> INT16 .)


state 123

    (67) intsize -> INT32 .

    IGUAL           reduce using rule 67 (intsize -> INT32 .)
    COMA            reduce using rule 67 (intsize -> INT32 .)
    RPAREN          reduce using rule 67 (intsize -> INT32 .)
    LLLAVE          reduce using rule 67 (intsize -> INT32 .)


state 124

    (68) intsize -> INT64 .

    IGUAL           reduce using rule 68 (intsize -> INT64 .)
    COMA            reduce using rule 68 (intsize -> INT64 .)
    RPAREN          reduce using rule 68 (intsize -> INT64 .)
    LLLAVE          reduce using rule 68 (intsize -> INT64 .)


state 125

    (69) intsize -> INT128 .

    IGUAL           reduce using rule 69 (intsize -> INT128 .)
    COMA            reduce using rule 69 (intsize -> INT128 .)
    RPAREN          reduce using rule 69 (intsize -> INT128 .)
    LLLAVE          reduce using rule 69 (intsize -> INT128 .)


state 126

    (88) uintsize -> UINT8 .

    IGUAL           reduce using rule 88 (uintsize -> UINT8 .)
    COMA            reduce using rule 88 (uintsize -> UINT8 .)
    RPAREN          reduce using rule 88 (uintsize -> UINT8 .)
    LLLAVE          reduce using rule 88 (uintsize -> UINT8 .)


state 127

    (89) uintsize -> UINT16 .

    IGUAL           reduce using rule 89 (uintsize -> UINT16 .)
    COMA            reduce using rule 89 (uintsize -> UINT16 .)
    RPAREN          reduce using rule 89 (uintsize -> UINT16 .)
    LLLAVE          reduce using rule 89 (uintsize -> UINT16 .)


state 128

    (90) uintsize -> UINT32 .

    IGUAL           reduce using rule 90 (uintsize -> UINT32 .)
    COMA            reduce using rule 90 (uintsize -> UINT32 .)
    RPAREN          reduce using rule 90 (uintsize -> UINT32 .)
    LLLAVE          reduce using rule 90 (uintsize -> UINT32 .)


state 129

    (91) uintsize -> UINT64 .

    IGUAL           reduce using rule 91 (uintsize -> UINT64 .)
    COMA            reduce using rule 91 (uintsize -> UINT64 .)
    RPAREN          reduce using rule 91 (uintsize -> UINT64 .)
    LLLAVE          reduce using rule 91 (uintsize -> UINT64 .)


state 130

    (92) uintsize -> UINT128 .

    IGUAL           reduce using rule 92 (uintsize -> UINT128 .)
    COMA            reduce using rule 92 (uintsize -> UINT128 .)
    RPAREN          reduce using rule 92 (uintsize -> UINT128 .)
    LLLAVE          reduce using rule 92 (uintsize -> UINT128 .)


state 131

    (79) floatsize -> FLOAT32 .

    IGUAL           reduce using rule 79 (floatsize -> FLOAT32 .)
    COMA            reduce using rule 79 (floatsize -> FLOAT32 .)
    RPAREN          reduce using rule 79 (floatsize -> FLOAT32 .)
    LLLAVE          reduce using rule 79 (floatsize -> FLOAT32 .)


state 132

    (80) floatsize -> FLOAT64 .

    IGUAL           reduce using rule 80 (floatsize -> FLOAT64 .)
    COMA            reduce using rule 80 (floatsize -> FLOAT64 .)
    RPAREN          reduce using rule 80 (floatsize -> FLOAT64 .)
    LLLAVE          reduce using rule 80 (floatsize -> FLOAT64 .)


state 133

    (96) strsize -> AMPERSAND . COMILLA STATIC STR
    (97) strsize -> AMPERSAND . STR

    COMILLA         shift and go to state 174
    STR             shift and go to state 175


state 134

    (103) impresion -> PRINTLN LPAREN valor RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 176


state 135

    (93) loop -> LOOP LLLAVE metodo RLLAVE .

    $end            reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RLLAVE          reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LET             reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    CONST           reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    PRINTLN         reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    ID              reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IDCHAR          reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IDSTRING        reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    INTTYPE         reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    NINTTYPE        reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    FLOATTYPE       reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    LOOP            reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    EXCLAM          reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    IF              reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    TRUE            reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    FALSE           reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)
    RETURN          reduce using rule 93 (loop -> LOOP LLLAVE metodo RLLAVE .)


state 136

    (117) ifcondicion -> LPAREN ifcondicion . RPAREN

    RPAREN          shift and go to state 141


state 137

    (29) comparacion -> ID . signocompar ID
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 32

state 138

    (41) comparacion -> boolean . signocompar boolean
    (60) signocompar -> . MAYORQUE
    (61) signocompar -> . MENORQUE
    (62) signocompar -> . DIFERENTE
    (63) signocompar -> . IDENTICO

    MAYORQUE        shift and go to state 34
    MENORQUE        shift and go to state 35
    DIFERENTE       shift and go to state 36
    IDENTICO        shift and go to state 37

    signocompar                    shift and go to state 47

state 139

    (111) ifblock -> IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 177


state 140

    (115) ifcondicion -> LPAREN comparacion RPAREN .
    (116) ifcondicion -> LPAREN comparacion RPAREN . signoconect ifcondicion
    (81) signoconect -> . DAMPERSAND
    (82) signoconect -> . OR

    LLLAVE          reduce using rule 115 (ifcondicion -> LPAREN comparacion RPAREN .)
    RPAREN          reduce using rule 115 (ifcondicion -> LPAREN comparacion RPAREN .)
    ENDCHAR         reduce using rule 115 (ifcondicion -> LPAREN comparacion RPAREN .)
    DAMPERSAND      shift and go to state 38
    OR              shift and go to state 39

    signoconect                    shift and go to state 178

state 141

    (117) ifcondicion -> LPAREN ifcondicion RPAREN .

    LLLAVE          reduce using rule 117 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    RPAREN          reduce using rule 117 (ifcondicion -> LPAREN ifcondicion RPAREN .)
    ENDCHAR         reduce using rule 117 (ifcondicion -> LPAREN ifcondicion RPAREN .)


state 142

    (112) ifblock -> IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 179


state 143

    (114) ifcondicion -> comparacion signoconect ifcondicion .

    LLLAVE          reduce using rule 114 (ifcondicion -> comparacion signoconect ifcondicion .)
    RPAREN          reduce using rule 114 (ifcondicion -> comparacion signoconect ifcondicion .)
    ENDCHAR         reduce using rule 114 (ifcondicion -> comparacion signoconect ifcondicion .)


state 144

    (109) elseifblock -> ifblock ELSE IF LPAREN ifparams . RPAREN LLLAVE cuerpof RLLAVE

    RPAREN          shift and go to state 180


state 145

    (110) elseifblock -> ifblock ELSE IF ifparams LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . comparacion
    (10) metodo -> . linkedlist
    (11) metodo -> . loop
    (12) metodo -> . conectores
    (13) metodo -> . ifblock
    (14) metodo -> . elseifblock
    (15) metodo -> . elseblock
    (5) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (16) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (103) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (108) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    LET             shift and go to state 15
    CONST           shift and go to state 16
    PRINTLN         shift and go to state 23
    ID              shift and go to state 14
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LOOP            shift and go to state 24
    EXCLAM          shift and go to state 25
    IF              shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    ifblock                        shift and go to state 10
    cuerpof                        shift and go to state 181
    metodo                         shift and go to state 94
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    boolean                        shift and go to state 21

state 146

    (107) elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IDCHAR          reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IDSTRING        reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    INTTYPE         reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    NINTTYPE        reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    FLOATTYPE       reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    EXCLAM          reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    TRUE            reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    FALSE           reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 107 (elseblock -> ifblock ELSE LLLAVE cuerpof RLLAVE .)


state 147

    (4) cuerpof -> metodo cuerpof .

    RLLAVE          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    RETURN          reduce using rule 4 (cuerpof -> metodo cuerpof .)
    ID              reduce using rule 4 (cuerpof -> metodo cuerpof .)


state 148

    (108) elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .

    $end            reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IDCHAR          reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IDSTRING        reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    INTTYPE         reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    NINTTYPE        reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    FLOATTYPE       reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    EXCLAM          reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    TRUE            reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    FALSE           reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 108 (elseblock -> elseifblock ELSE LLLAVE cuerpof RLLAVE .)


state 149

    (94) params -> ID COLON . datatype
    (95) params -> ID COLON . datatype COMA params
    (54) datatype -> . intsize
    (55) datatype -> . uintsize
    (56) datatype -> . floatsize
    (57) datatype -> . strsize
    (58) datatype -> . STRING
    (65) intsize -> . INT8
    (66) intsize -> . INT16
    (67) intsize -> . INT32
    (68) intsize -> . INT64
    (69) intsize -> . INT128
    (88) uintsize -> . UINT8
    (89) uintsize -> . UINT16
    (90) uintsize -> . UINT32
    (91) uintsize -> . UINT64
    (92) uintsize -> . UINT128
    (79) floatsize -> . FLOAT32
    (80) floatsize -> . FLOAT64
    (96) strsize -> . AMPERSAND COMILLA STATIC STR
    (97) strsize -> . AMPERSAND STR

    STRING          shift and go to state 187
    INT8            shift and go to state 121
    INT16           shift and go to state 122
    INT32           shift and go to state 123
    INT64           shift and go to state 124
    INT128          shift and go to state 125
    UINT8           shift and go to state 126
    UINT16          shift and go to state 127
    UINT32          shift and go to state 128
    UINT64          shift and go to state 129
    UINT128         shift and go to state 130
    FLOAT32         shift and go to state 131
    FLOAT64         shift and go to state 132
    AMPERSAND       shift and go to state 133

    datatype                       shift and go to state 182
    intsize                        shift and go to state 183
    uintsize                       shift and go to state 184
    floatsize                      shift and go to state 185
    strsize                        shift and go to state 186

state 150

    (100) funcion -> FN ID LPAREN params RPAREN . LLLAVE metodo RLLAVE
    (118) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (119) funcion -> FN ID LPAREN params RPAREN . ARROWOPT datatype LLLAVE cuerpof ID RLLAVE

    LLLAVE          shift and go to state 188
    ARROWOPT        shift and go to state 189


state 151

    (71) linkedlist -> LET . MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    MUT             shift and go to state 190


state 152

    (5) asignacion -> LET MUT ID IGUAL valorPam . ENDCHAR

    ENDCHAR         shift and go to state 191


state 153

    (6) asignacion -> LET MUT ID IGUAL estructuras . ENDCHAR

    ENDCHAR         shift and go to state 192


state 154

    (71) linkedlist -> LET MUT ID IGUAL LINKEDLIST . DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 193


state 155

    (38) estructuras -> linkedlist .

    ENDCHAR         reduce using rule 38 (estructuras -> linkedlist .)


state 156

    (39) estructuras -> hashmap .

    ENDCHAR         reduce using rule 39 (estructuras -> hashmap .)


state 157

    (40) estructuras -> vec .

    ENDCHAR         reduce using rule 40 (estructuras -> vec .)


state 158

    (59) hashmap -> HASHMAP . DOSDOBLEPUNTOS NEW LPAREN RPAREN

    DOSDOBLEPUNTOS  shift and go to state 194


state 159

    (64) vec -> VEC . DOSDOBLEPUNTOS NEW LPAREN RPAREN

    DOSDOBLEPUNTOS  shift and go to state 195


state 160

    (16) asignacion -> LET ID IGUAL valorPam ENDCHAR .

    $end            reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    RLLAVE          reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    LET             reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    CONST           reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    PRINTLN         reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    ID              reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    IDCHAR          reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    IDSTRING        reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    INTTYPE         reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    NINTTYPE        reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    FLOATTYPE       reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    LOOP            reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    EXCLAM          reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    IF              reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    TRUE            reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    FALSE           reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)
    RETURN          reduce using rule 16 (asignacion -> LET ID IGUAL valorPam ENDCHAR .)


state 161

    (70) expresion -> valornumerico signo . valornumerico
    (75) valornumerico -> . NINTTYPE
    (76) valornumerico -> . INTTYPE
    (77) valornumerico -> . FLOATTYPE
    (78) valornumerico -> . NFLOATTYPE

    NINTTYPE        shift and go to state 197
    INTTYPE         shift and go to state 198
    FLOATTYPE       shift and go to state 199
    NFLOATTYPE      shift and go to state 112

    valornumerico                  shift and go to state 196

state 162

    (83) signo -> PLUS .

    NINTTYPE        reduce using rule 83 (signo -> PLUS .)
    INTTYPE         reduce using rule 83 (signo -> PLUS .)
    FLOATTYPE       reduce using rule 83 (signo -> PLUS .)
    NFLOATTYPE      reduce using rule 83 (signo -> PLUS .)


state 163

    (84) signo -> TIMES .

    NINTTYPE        reduce using rule 84 (signo -> TIMES .)
    INTTYPE         reduce using rule 84 (signo -> TIMES .)
    FLOATTYPE       reduce using rule 84 (signo -> TIMES .)
    NFLOATTYPE      reduce using rule 84 (signo -> TIMES .)


state 164

    (85) signo -> MINUS .

    NINTTYPE        reduce using rule 85 (signo -> MINUS .)
    INTTYPE         reduce using rule 85 (signo -> MINUS .)
    FLOATTYPE       reduce using rule 85 (signo -> MINUS .)
    NFLOATTYPE      reduce using rule 85 (signo -> MINUS .)


state 165

    (86) signo -> PORCENTAJE .

    NINTTYPE        reduce using rule 86 (signo -> PORCENTAJE .)
    INTTYPE         reduce using rule 86 (signo -> PORCENTAJE .)
    FLOATTYPE       reduce using rule 86 (signo -> PORCENTAJE .)
    NFLOATTYPE      reduce using rule 86 (signo -> PORCENTAJE .)


state 166

    (87) signo -> DIVIDE .

    NINTTYPE        reduce using rule 87 (signo -> DIVIDE .)
    INTTYPE         reduce using rule 87 (signo -> DIVIDE .)
    FLOATTYPE       reduce using rule 87 (signo -> DIVIDE .)
    NFLOATTYPE      reduce using rule 87 (signo -> DIVIDE .)


state 167

    (17) asignacion -> CONST ID COLON intsize IGUAL . INTTYPE ENDCHAR
    (18) asignacion -> CONST ID COLON intsize IGUAL . NINTTYPE ENDCHAR

    INTTYPE         shift and go to state 200
    NINTTYPE        shift and go to state 201


state 168

    (28) asignacion -> CONST ID COLON uintsize IGUAL . INTTYPE ENDCHAR

    INTTYPE         shift and go to state 202


state 169

    (32) asignacion -> CONST ID COLON floatsize IGUAL . FLOATTYPE ENDCHAR

    FLOATTYPE       shift and go to state 203


state 170

    (33) asignacion -> CONST ID COLON strsize IGUAL . IDSTRING ENDCHAR

    IDSTRING        shift and go to state 204


state 171

    (37) asignacion -> CONST ID COLON STRING IGUAL . STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> CONST ID COLON STRING IGUAL . IDSTRING ENDCHAR

    STRING          shift and go to state 205
    IDSTRING        shift and go to state 206


state 172

    (51) asignacion -> CONST ID COLON BOOL IGUAL . boolean ENDCHAR
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    boolean                        shift and go to state 207

state 173

    (53) asignacion -> CONST ID COLON CHAR IGUAL . IDCHAR ENDCHAR

    IDCHAR          shift and go to state 208


state 174

    (96) strsize -> AMPERSAND COMILLA . STATIC STR

    STATIC          shift and go to state 209


state 175

    (97) strsize -> AMPERSAND STR .

    IGUAL           reduce using rule 97 (strsize -> AMPERSAND STR .)
    COMA            reduce using rule 97 (strsize -> AMPERSAND STR .)
    RPAREN          reduce using rule 97 (strsize -> AMPERSAND STR .)
    LLLAVE          reduce using rule 97 (strsize -> AMPERSAND STR .)


state 176

    (103) impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .

    $end            reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    LET             reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    CONST           reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    ID              reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    IDCHAR          reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    IDSTRING        reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    INTTYPE         reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    NINTTYPE        reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    FLOATTYPE       reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    LOOP            reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    EXCLAM          reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    IF              reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    TRUE            reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    FALSE           reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)
    RETURN          reduce using rule 103 (impresion -> PRINTLN LPAREN valor RPAREN ENDCHAR .)


state 177

    (111) ifblock -> IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . comparacion
    (10) metodo -> . linkedlist
    (11) metodo -> . loop
    (12) metodo -> . conectores
    (13) metodo -> . ifblock
    (14) metodo -> . elseifblock
    (15) metodo -> . elseblock
    (5) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (16) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (103) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (108) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    LET             shift and go to state 15
    CONST           shift and go to state 16
    PRINTLN         shift and go to state 23
    ID              shift and go to state 14
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LOOP            shift and go to state 24
    EXCLAM          shift and go to state 25
    IF              shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    cuerpof                        shift and go to state 210
    metodo                         shift and go to state 94
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    boolean                        shift and go to state 21

state 178

    (116) ifcondicion -> LPAREN comparacion RPAREN signoconect . ifcondicion
    (113) ifcondicion -> . comparacion
    (114) ifcondicion -> . comparacion signoconect ifcondicion
    (115) ifcondicion -> . LPAREN comparacion RPAREN
    (116) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (117) ifcondicion -> . LPAREN ifcondicion RPAREN
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    LPAREN          shift and go to state 85
    ID              shift and go to state 137
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    comparacion                    shift and go to state 58
    ifcondicion                    shift and go to state 211
    boolean                        shift and go to state 138

state 179

    (112) ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IDCHAR          reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IDSTRING        reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    INTTYPE         reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    NINTTYPE        reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    FLOATTYPE       reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    EXCLAM          reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    TRUE            reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    FALSE           reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 112 (ifblock -> IF ifparams LLLAVE cuerpof RLLAVE .)


state 180

    (109) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN . LLLAVE cuerpof RLLAVE

    LLLAVE          shift and go to state 212


state 181

    (110) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 213


state 182

    (94) params -> ID COLON datatype .
    (95) params -> ID COLON datatype . COMA params

    RPAREN          reduce using rule 94 (params -> ID COLON datatype .)
    COMA            shift and go to state 214


state 183

    (54) datatype -> intsize .

    COMA            reduce using rule 54 (datatype -> intsize .)
    RPAREN          reduce using rule 54 (datatype -> intsize .)
    LLLAVE          reduce using rule 54 (datatype -> intsize .)


state 184

    (55) datatype -> uintsize .

    COMA            reduce using rule 55 (datatype -> uintsize .)
    RPAREN          reduce using rule 55 (datatype -> uintsize .)
    LLLAVE          reduce using rule 55 (datatype -> uintsize .)


state 185

    (56) datatype -> floatsize .

    COMA            reduce using rule 56 (datatype -> floatsize .)
    RPAREN          reduce using rule 56 (datatype -> floatsize .)
    LLLAVE          reduce using rule 56 (datatype -> floatsize .)


state 186

    (57) datatype -> strsize .

    COMA            reduce using rule 57 (datatype -> strsize .)
    RPAREN          reduce using rule 57 (datatype -> strsize .)
    LLLAVE          reduce using rule 57 (datatype -> strsize .)


state 187

    (58) datatype -> STRING .

    COMA            reduce using rule 58 (datatype -> STRING .)
    RPAREN          reduce using rule 58 (datatype -> STRING .)
    LLLAVE          reduce using rule 58 (datatype -> STRING .)


state 188

    (100) funcion -> FN ID LPAREN params RPAREN LLLAVE . metodo RLLAVE
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . comparacion
    (10) metodo -> . linkedlist
    (11) metodo -> . loop
    (12) metodo -> . conectores
    (13) metodo -> . ifblock
    (14) metodo -> . elseifblock
    (15) metodo -> . elseblock
    (5) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (16) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (103) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (108) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    LET             shift and go to state 15
    CONST           shift and go to state 16
    PRINTLN         shift and go to state 23
    ID              shift and go to state 14
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LOOP            shift and go to state 24
    EXCLAM          shift and go to state 25
    IF              shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    metodo                         shift and go to state 215
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    boolean                        shift and go to state 21

state 189

    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT . datatype LLLAVE cuerpof ID RLLAVE
    (54) datatype -> . intsize
    (55) datatype -> . uintsize
    (56) datatype -> . floatsize
    (57) datatype -> . strsize
    (58) datatype -> . STRING
    (65) intsize -> . INT8
    (66) intsize -> . INT16
    (67) intsize -> . INT32
    (68) intsize -> . INT64
    (69) intsize -> . INT128
    (88) uintsize -> . UINT8
    (89) uintsize -> . UINT16
    (90) uintsize -> . UINT32
    (91) uintsize -> . UINT64
    (92) uintsize -> . UINT128
    (79) floatsize -> . FLOAT32
    (80) floatsize -> . FLOAT64
    (96) strsize -> . AMPERSAND COMILLA STATIC STR
    (97) strsize -> . AMPERSAND STR

    STRING          shift and go to state 187
    INT8            shift and go to state 121
    INT16           shift and go to state 122
    INT32           shift and go to state 123
    INT64           shift and go to state 124
    INT128          shift and go to state 125
    UINT8           shift and go to state 126
    UINT16          shift and go to state 127
    UINT32          shift and go to state 128
    UINT64          shift and go to state 129
    UINT128         shift and go to state 130
    FLOAT32         shift and go to state 131
    FLOAT64         shift and go to state 132
    AMPERSAND       shift and go to state 133

    datatype                       shift and go to state 216
    intsize                        shift and go to state 183
    uintsize                       shift and go to state 184
    floatsize                      shift and go to state 185
    strsize                        shift and go to state 186

state 190

    (71) linkedlist -> LET MUT . ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    ID              shift and go to state 217


state 191

    (5) asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .

    $end            reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    RLLAVE          reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    LET             reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    CONST           reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    PRINTLN         reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    ID              reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    IDCHAR          reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    IDSTRING        reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    INTTYPE         reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    NINTTYPE        reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    FLOATTYPE       reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    LOOP            reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    EXCLAM          reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    IF              reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    TRUE            reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    FALSE           reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)
    RETURN          reduce using rule 5 (asignacion -> LET MUT ID IGUAL valorPam ENDCHAR .)


state 192

    (6) asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .

    $end            reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RLLAVE          reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LET             reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    CONST           reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    PRINTLN         reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    ID              reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IDCHAR          reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IDSTRING        reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    INTTYPE         reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    NINTTYPE        reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    FLOATTYPE       reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    LOOP            reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    EXCLAM          reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    IF              reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    TRUE            reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    FALSE           reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)
    RETURN          reduce using rule 6 (asignacion -> LET MUT ID IGUAL estructuras ENDCHAR .)


state 193

    (71) linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS . NEW LPAREN RPAREN ENDCHAR

    NEW             shift and go to state 218


state 194

    (59) hashmap -> HASHMAP DOSDOBLEPUNTOS . NEW LPAREN RPAREN

    NEW             shift and go to state 219


state 195

    (64) vec -> VEC DOSDOBLEPUNTOS . NEW LPAREN RPAREN

    NEW             shift and go to state 220


state 196

    (70) expresion -> valornumerico signo valornumerico .

    ENDCHAR         reduce using rule 70 (expresion -> valornumerico signo valornumerico .)


state 197

    (75) valornumerico -> NINTTYPE .

    ENDCHAR         reduce using rule 75 (valornumerico -> NINTTYPE .)


state 198

    (76) valornumerico -> INTTYPE .

    ENDCHAR         reduce using rule 76 (valornumerico -> INTTYPE .)


state 199

    (77) valornumerico -> FLOATTYPE .

    ENDCHAR         reduce using rule 77 (valornumerico -> FLOATTYPE .)


state 200

    (17) asignacion -> CONST ID COLON intsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 221


state 201

    (18) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 222


state 202

    (28) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE . ENDCHAR

    ENDCHAR         shift and go to state 223


state 203

    (32) asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE . ENDCHAR

    ENDCHAR         shift and go to state 224


state 204

    (33) asignacion -> CONST ID COLON strsize IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 225


state 205

    (37) asignacion -> CONST ID COLON STRING IGUAL STRING . DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR

    DOSDOBLEPUNTOS  shift and go to state 226


state 206

    (42) asignacion -> CONST ID COLON STRING IGUAL IDSTRING . ENDCHAR

    ENDCHAR         shift and go to state 227


state 207

    (51) asignacion -> CONST ID COLON BOOL IGUAL boolean . ENDCHAR

    ENDCHAR         shift and go to state 228


state 208

    (53) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR . ENDCHAR

    ENDCHAR         shift and go to state 229


state 209

    (96) strsize -> AMPERSAND COMILLA STATIC . STR

    STR             shift and go to state 230


state 210

    (111) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 231


state 211

    (116) ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .

    LLLAVE          reduce using rule 116 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    RPAREN          reduce using rule 116 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)
    ENDCHAR         reduce using rule 116 (ifcondicion -> LPAREN comparacion RPAREN signoconect ifcondicion .)


state 212

    (109) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE . cuerpof RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . comparacion
    (10) metodo -> . linkedlist
    (11) metodo -> . loop
    (12) metodo -> . conectores
    (13) metodo -> . ifblock
    (14) metodo -> . elseifblock
    (15) metodo -> . elseblock
    (5) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (16) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (103) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (108) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    LET             shift and go to state 15
    CONST           shift and go to state 16
    PRINTLN         shift and go to state 23
    ID              shift and go to state 14
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LOOP            shift and go to state 24
    EXCLAM          shift and go to state 25
    IF              shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    ifblock                        shift and go to state 10
    cuerpof                        shift and go to state 232
    metodo                         shift and go to state 94
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    boolean                        shift and go to state 21

state 213

    (110) elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IDCHAR          reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IDSTRING        reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    INTTYPE         reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    NINTTYPE        reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    FLOATTYPE       reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    EXCLAM          reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    TRUE            reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    FALSE           reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 110 (elseifblock -> ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE .)


state 214

    (95) params -> ID COLON datatype COMA . params
    (94) params -> . ID COLON datatype
    (95) params -> . ID COLON datatype COMA params

    ID              shift and go to state 96

    params                         shift and go to state 233

state 215

    (100) funcion -> FN ID LPAREN params RPAREN LLLAVE metodo . RLLAVE

    RLLAVE          shift and go to state 234


state 216

    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE
    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype . LLLAVE cuerpof ID RLLAVE

    LLLAVE          shift and go to state 235


state 217

    (71) linkedlist -> LET MUT ID . IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    IGUAL           shift and go to state 236


state 218

    (71) linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW . LPAREN RPAREN ENDCHAR

    LPAREN          shift and go to state 237


state 219

    (59) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW . LPAREN RPAREN

    LPAREN          shift and go to state 238


state 220

    (64) vec -> VEC DOSDOBLEPUNTOS NEW . LPAREN RPAREN

    LPAREN          shift and go to state 239


state 221

    (17) asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IDCHAR          reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IDSTRING        reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    INTTYPE         reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    NINTTYPE        reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    FLOATTYPE       reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    EXCLAM          reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    TRUE            reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    FALSE           reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 17 (asignacion -> CONST ID COLON intsize IGUAL INTTYPE ENDCHAR .)


state 222

    (18) asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .

    $end            reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LET             reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    CONST           reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    ID              reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IDCHAR          reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IDSTRING        reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    INTTYPE         reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    NINTTYPE        reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    FLOATTYPE       reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    LOOP            reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    EXCLAM          reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    IF              reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    TRUE            reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    FALSE           reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)
    RETURN          reduce using rule 18 (asignacion -> CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR .)


state 223

    (28) asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .

    $end            reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RLLAVE          reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LET             reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    CONST           reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    PRINTLN         reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    ID              reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IDCHAR          reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IDSTRING        reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    INTTYPE         reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    NINTTYPE        reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    FLOATTYPE       reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    LOOP            reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    EXCLAM          reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    IF              reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    TRUE            reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    FALSE           reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)
    RETURN          reduce using rule 28 (asignacion -> CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR .)


state 224

    (32) asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .

    $end            reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    RLLAVE          reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    LET             reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    CONST           reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    PRINTLN         reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    ID              reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IDCHAR          reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IDSTRING        reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    INTTYPE         reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    NINTTYPE        reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    FLOATTYPE       reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    LOOP            reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    EXCLAM          reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    IF              reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    TRUE            reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    FALSE           reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)
    RETURN          reduce using rule 32 (asignacion -> CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR .)


state 225

    (33) asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IDCHAR          reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IDSTRING        reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    INTTYPE         reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    NINTTYPE        reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    FLOATTYPE       reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    EXCLAM          reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    TRUE            reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    FALSE           reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 33 (asignacion -> CONST ID COLON strsize IGUAL IDSTRING ENDCHAR .)


state 226

    (37) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS . FROM LPAREN IDSTRING RPAREN ENDCHAR

    FROM            shift and go to state 240


state 227

    (42) asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .

    $end            reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RLLAVE          reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LET             reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    CONST           reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    PRINTLN         reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    ID              reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IDCHAR          reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IDSTRING        reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    INTTYPE         reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    NINTTYPE        reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    FLOATTYPE       reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    LOOP            reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    EXCLAM          reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    IF              reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    TRUE            reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    FALSE           reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)
    RETURN          reduce using rule 42 (asignacion -> CONST ID COLON STRING IGUAL IDSTRING ENDCHAR .)


state 228

    (51) asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .

    $end            reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RLLAVE          reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LET             reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    CONST           reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    PRINTLN         reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    ID              reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IDCHAR          reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IDSTRING        reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    INTTYPE         reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    NINTTYPE        reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    FLOATTYPE       reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    LOOP            reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    EXCLAM          reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    IF              reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    TRUE            reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    FALSE           reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)
    RETURN          reduce using rule 51 (asignacion -> CONST ID COLON BOOL IGUAL boolean ENDCHAR .)


state 229

    (53) asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .

    $end            reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RLLAVE          reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LET             reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    CONST           reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    PRINTLN         reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    ID              reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IDCHAR          reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IDSTRING        reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    INTTYPE         reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    NINTTYPE        reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    FLOATTYPE       reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    LOOP            reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    EXCLAM          reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    IF              reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    TRUE            reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    FALSE           reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)
    RETURN          reduce using rule 53 (asignacion -> CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR .)


state 230

    (96) strsize -> AMPERSAND COMILLA STATIC STR .

    IGUAL           reduce using rule 96 (strsize -> AMPERSAND COMILLA STATIC STR .)
    COMA            reduce using rule 96 (strsize -> AMPERSAND COMILLA STATIC STR .)
    RPAREN          reduce using rule 96 (strsize -> AMPERSAND COMILLA STATIC STR .)
    LLLAVE          reduce using rule 96 (strsize -> AMPERSAND COMILLA STATIC STR .)


state 231

    (111) ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IDCHAR          reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IDSTRING        reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    INTTYPE         reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    NINTTYPE        reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    FLOATTYPE       reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    EXCLAM          reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    TRUE            reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    FALSE           reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 111 (ifblock -> IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 232

    (109) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof . RLLAVE

    RLLAVE          shift and go to state 241


state 233

    (95) params -> ID COLON datatype COMA params .

    RPAREN          reduce using rule 95 (params -> ID COLON datatype COMA params .)


state 234

    (100) funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE .

    $end            reduce using rule 100 (funcion -> FN ID LPAREN params RPAREN LLLAVE metodo RLLAVE .)


state 235

    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof RETURN ifparams ENDCHAR RLLAVE
    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE . cuerpof ID RLLAVE
    (3) cuerpof -> . metodo
    (4) cuerpof -> . metodo cuerpof
    (7) metodo -> . asignacion
    (8) metodo -> . impresion
    (9) metodo -> . comparacion
    (10) metodo -> . linkedlist
    (11) metodo -> . loop
    (12) metodo -> . conectores
    (13) metodo -> . ifblock
    (14) metodo -> . elseifblock
    (15) metodo -> . elseblock
    (5) asignacion -> . LET MUT ID IGUAL valorPam ENDCHAR
    (6) asignacion -> . LET MUT ID IGUAL estructuras ENDCHAR
    (16) asignacion -> . LET ID IGUAL valorPam ENDCHAR
    (17) asignacion -> . CONST ID COLON intsize IGUAL INTTYPE ENDCHAR
    (18) asignacion -> . CONST ID COLON intsize IGUAL NINTTYPE ENDCHAR
    (28) asignacion -> . CONST ID COLON uintsize IGUAL INTTYPE ENDCHAR
    (32) asignacion -> . CONST ID COLON floatsize IGUAL FLOATTYPE ENDCHAR
    (33) asignacion -> . CONST ID COLON strsize IGUAL IDSTRING ENDCHAR
    (37) asignacion -> . CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR
    (42) asignacion -> . CONST ID COLON STRING IGUAL IDSTRING ENDCHAR
    (51) asignacion -> . CONST ID COLON BOOL IGUAL boolean ENDCHAR
    (53) asignacion -> . CONST ID COLON CHAR IGUAL IDCHAR ENDCHAR
    (103) impresion -> . PRINTLN LPAREN valor RPAREN ENDCHAR
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean
    (71) linkedlist -> . LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR
    (93) loop -> . LOOP LLLAVE metodo RLLAVE
    (72) conectores -> . boolean signoconect boolean
    (73) conectores -> . EXCLAM boolean
    (74) conectores -> . ID signoconect ID
    (111) ifblock -> . IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (112) ifblock -> . IF ifparams LLLAVE cuerpof RLLAVE
    (109) elseifblock -> . ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE
    (110) elseifblock -> . ifblock ELSE IF ifparams LLLAVE cuerpof RLLAVE
    (107) elseblock -> . ifblock ELSE LLLAVE cuerpof RLLAVE
    (108) elseblock -> . elseifblock ELSE LLLAVE cuerpof RLLAVE
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE

    LET             shift and go to state 15
    CONST           shift and go to state 16
    PRINTLN         shift and go to state 23
    ID              shift and go to state 14
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19
    LOOP            shift and go to state 24
    EXCLAM          shift and go to state 25
    IF              shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    cuerpof                        shift and go to state 242
    metodo                         shift and go to state 94
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    comparacion                    shift and go to state 6
    linkedlist                     shift and go to state 7
    loop                           shift and go to state 8
    conectores                     shift and go to state 9
    ifblock                        shift and go to state 10
    elseifblock                    shift and go to state 11
    elseblock                      shift and go to state 12
    boolean                        shift and go to state 21

state 236

    (71) linkedlist -> LET MUT ID IGUAL . LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR

    LINKEDLIST      shift and go to state 154


state 237

    (71) linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN . RPAREN ENDCHAR

    RPAREN          shift and go to state 243


state 238

    (59) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN . RPAREN

    RPAREN          shift and go to state 244


state 239

    (64) vec -> VEC DOSDOBLEPUNTOS NEW LPAREN . RPAREN

    RPAREN          shift and go to state 245


state 240

    (37) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM . LPAREN IDSTRING RPAREN ENDCHAR

    LPAREN          shift and go to state 246


state 241

    (109) elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .

    ELSE            reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    $end            reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RLLAVE          reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LET             reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    CONST           reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    PRINTLN         reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    ID              reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IDCHAR          reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IDSTRING        reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    INTTYPE         reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    NINTTYPE        reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    FLOATTYPE       reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    LOOP            reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    EXCLAM          reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    IF              reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    TRUE            reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    FALSE           reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)
    RETURN          reduce using rule 109 (elseifblock -> ifblock ELSE IF LPAREN ifparams RPAREN LLLAVE cuerpof RLLAVE .)


state 242

    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . RETURN ifparams ENDCHAR RLLAVE
    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof . ID RLLAVE

    RETURN          shift and go to state 248
    ID              shift and go to state 247


state 243

    (71) linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 249


state 244

    (59) hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .

    ENDCHAR         reduce using rule 59 (hashmap -> HASHMAP DOSDOBLEPUNTOS NEW LPAREN RPAREN .)


state 245

    (64) vec -> VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN .

    ENDCHAR         reduce using rule 64 (vec -> VEC DOSDOBLEPUNTOS NEW LPAREN RPAREN .)


state 246

    (37) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN . IDSTRING RPAREN ENDCHAR

    IDSTRING        shift and go to state 250


state 247

    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID . RLLAVE

    RLLAVE          shift and go to state 251


state 248

    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN . ifparams ENDCHAR RLLAVE
    (104) ifparams -> . ifcondicion
    (105) ifparams -> . boolean
    (106) ifparams -> . ID
    (113) ifcondicion -> . comparacion
    (114) ifcondicion -> . comparacion signoconect ifcondicion
    (115) ifcondicion -> . LPAREN comparacion RPAREN
    (116) ifcondicion -> . LPAREN comparacion RPAREN signoconect ifcondicion
    (117) ifcondicion -> . LPAREN ifcondicion RPAREN
    (101) boolean -> . TRUE
    (102) boolean -> . FALSE
    (29) comparacion -> . ID signocompar ID
    (30) comparacion -> . IDCHAR signocompar IDCHAR
    (31) comparacion -> . IDSTRING signocompar IDSTRING
    (34) comparacion -> . INTTYPE signocompar INTTYPE
    (35) comparacion -> . NINTTYPE signocompar NINTTYPE
    (36) comparacion -> . FLOATTYPE signocompar FLOATTYPE
    (41) comparacion -> . boolean signocompar boolean

    ID              shift and go to state 57
    LPAREN          shift and go to state 85
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IDCHAR          shift and go to state 22
    IDSTRING        shift and go to state 20
    INTTYPE         shift and go to state 17
    NINTTYPE        shift and go to state 18
    FLOATTYPE       shift and go to state 19

    ifparams                       shift and go to state 252
    ifcondicion                    shift and go to state 55
    boolean                        shift and go to state 56
    comparacion                    shift and go to state 58

state 249

    (71) linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .

    $end            reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LET             reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    CONST           reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ID              reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IDCHAR          reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IDSTRING        reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    INTTYPE         reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    NINTTYPE        reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    FLOATTYPE       reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    LOOP            reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    EXCLAM          reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    IF              reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    TRUE            reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    FALSE           reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    RETURN          reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)
    ENDCHAR         reduce using rule 71 (linkedlist -> LET MUT ID IGUAL LINKEDLIST DOSDOBLEPUNTOS NEW LPAREN RPAREN ENDCHAR .)


state 250

    (37) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING . RPAREN ENDCHAR

    RPAREN          shift and go to state 253


state 251

    (119) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .

    $end            reduce using rule 119 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof ID RLLAVE .)


state 252

    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams . ENDCHAR RLLAVE

    ENDCHAR         shift and go to state 254


state 253

    (37) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN . ENDCHAR

    ENDCHAR         shift and go to state 255


state 254

    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR . RLLAVE

    RLLAVE          shift and go to state 256


state 255

    (37) asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .

    $end            reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RLLAVE          reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LET             reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    CONST           reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    PRINTLN         reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    ID              reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IDCHAR          reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IDSTRING        reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    INTTYPE         reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    NINTTYPE        reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    FLOATTYPE       reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    LOOP            reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    EXCLAM          reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    IF              reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    TRUE            reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    FALSE           reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)
    RETURN          reduce using rule 37 (asignacion -> CONST ID COLON STRING IGUAL STRING DOSDOBLEPUNTOS FROM LPAREN IDSTRING RPAREN ENDCHAR .)


state 256

    (118) funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .

    $end            reduce using rule 118 (funcion -> FN ID LPAREN params RPAREN ARROWOPT datatype LLLAVE cuerpof RETURN ifparams ENDCHAR RLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 87 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 88 resolved as shift
WARNING: shift/reduce conflict for ID in state 94 resolved as shift
